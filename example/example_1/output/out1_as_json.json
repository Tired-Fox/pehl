{
  "type": "root",
  "children": [
    {
      "type": "doctype",
      "value": "html"
    },
    {
      "type": "element",
      "tag": "html",
      "properties": {
        "lang": "en"
      },
      "openclose": false,
      "children": [
        {
          "type": "element",
          "tag": "head",
          "properties": {},
          "openclose": false,
          "children": [
            {
              "type": "element",
              "tag": "meta",
              "properties": {
                "charset": "UTF-8"
              },
              "openclose": true,
              "children": [],
              "locals": {}
            },
            {
              "type": "element",
              "tag": "meta",
              "properties": {
                "http-equiv": "X-UA-Compatible",
                "content": "IE=edge"
              },
              "openclose": true,
              "children": [],
              "locals": {}
            },
            {
              "type": "element",
              "tag": "meta",
              "properties": {
                "name": "viewport",
                "content": "width=device-width, initial-scale=1.0"
              },
              "openclose": true,
              "children": [],
              "locals": {}
            },
            {
              "type": "element",
              "tag": "title",
              "properties": {},
              "openclose": false,
              "children": [
                {
                  "type": "text",
                  "value": "Sample 1"
                }
              ],
              "locals": {}
            }
          ],
          "locals": {}
        },
        {
          "type": "element",
          "tag": "python",
          "properties": {},
          "openclose": false,
          "children": [
            {
              "type": "text",
              "value": "        if True:\n            print(\"Hello World\")\n        message = \"Hello World!\"\n        errors = [\n            \"Error 1\",\n            \"Error 2\",\n            \"Bad formatting\",\n            \"Yolo\",\n        ]"
            }
          ],
          "locals": {}
        },
        {
          "type": "element",
          "tag": "body",
          "properties": {},
          "openclose": false,
          "children": [
            {
              "type": "comment",
              "value": "  `py-` prefix for python injected logic. Value is python  "
            },
            {
              "type": "element",
              "tag": "div",
              "properties": {
                "py-if": "'dog' == 'cat'"
              },
              "openclose": false,
              "children": [
                {
                  "type": "element",
                  "tag": "p",
                  "properties": {},
                  "openclose": false,
                  "children": [
                    {
                      "type": "text",
                      "value": "                Cat's and dog's are not the same thing"
                    }
                  ],
                  "locals": {}
                }
              ],
              "locals": {}
            },
            {
              "type": "element",
              "tag": "div",
              "properties": {
                "py-elif": "'dog' in ['cat', 'dog', 'bird']"
              },
              "openclose": false,
              "children": [
                {
                  "type": "element",
                  "tag": "p",
                  "properties": {},
                  "openclose": false,
                  "children": [
                    {
                      "type": "text",
                      "value": "                dog in the list ['cat', 'dog', 'bird']"
                    }
                  ],
                  "locals": {}
                }
              ],
              "locals": {}
            },
            {
              "type": "element",
              "tag": "div",
              "properties": {
                "py-else": "yes"
              },
              "openclose": false,
              "children": [
                {
                  "type": "element",
                  "tag": "p",
                  "properties": {},
                  "openclose": false,
                  "children": [
                    {
                      "type": "text",
                      "value": "                py-else statement"
                    }
                  ],
                  "locals": {}
                }
              ],
              "locals": {}
            },
            {
              "type": "element",
              "tag": "img",
              "properties": {
                "src": "https://example.com",
                "alt": "Example"
              },
              "openclose": true,
              "children": [],
              "locals": {}
            },
            {
              "type": "comment",
              "value": "  Brackets ({,}) inject python. Can be any python and can be multiline  "
            },
            {
              "type": "element",
              "tag": "h2",
              "properties": {},
              "openclose": false,
              "children": [
                {
                  "type": "text",
                  "value": "            {message}"
                }
              ],
              "locals": {}
            },
            {
              "type": "element",
              "tag": "ul",
              "properties": {},
              "openclose": false,
              "children": [
                {
                  "type": "element",
                  "tag": "li",
                  "properties": {
                    "py-for": "error in errors"
                  },
                  "openclose": false,
                  "children": [
                    {
                      "type": "text",
                      "value": "{error}"
                    }
                  ],
                  "locals": {}
                }
              ],
              "locals": {}
            },
            {
              "type": "element",
              "tag": "p",
              "properties": {},
              "openclose": false,
              "children": [
                {
                  "type": "element",
                  "tag": "span",
                  "properties": {
                    "py-for": "for char in message:"
                  },
                  "openclose": false,
                  "children": [
                    {
                      "type": "text",
                      "value": "{char}"
                    }
                  ],
                  "locals": {}
                }
              ],
              "locals": {}
            }
          ],
          "locals": {}
        }
      ],
      "locals": {}
    }
  ]
}