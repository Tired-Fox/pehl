window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"phml": {"fullname": "phml", "modulename": "phml", "type": "module", "doc": "<p>Python Hypertext Markup Language (phml)</p>\n\n<p>The idea behind phml is to replicate the functionality of some javascript\nframeworks like ReactJS, VueJS, AstroJS, etc... All of these frameworks\nallow the user to inject javascript in some way. Most of the time you can\ninject javascript data into html using brackets. A lot of the frameworks also\nhave custom attributes on elements for conditional rendering.</p>\n\n<p>phml strives to do similar things, However, the nuance here\nis that phml uses python. There is a new html element that is reserved for phml.\nThis element is the <code>&lt;python&gt;</code> element. It means to replicate the purpose of the\n<code>&lt;script&gt;</code> element. On top of this there are smaller blocks that use brackets\nthat expect the expression to return some sort of value. Finally, there are custom\nattributes. <code>py-if</code>, <code>py-elif</code>, and <code>py-else</code> are reserved for conditional rendering.\nAll attributes prefixed with <code>py-</code> will have their value evaluated as python. More details\non each of these topics is described below.</p>\n\n<p>Let's start with the new <code>python</code> element. Python is a whitespace language. As such phml\nhas the challenge of maintaining the indentation in a appropriate way. With this in phml,\nyou can have as much leading whitespace as you want as long as the indentation is consistent.\nThis means that indentation is based of the first lines offset. Take this phml example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&lt;</span><span class=\"n\">python</span><span class=\"o\">&gt;</span>\n    <span class=\"k\">if</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello World&quot;</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">python</span><span class=\"o\">&gt;</span>\n</code></pre>\n</div>\n\n<p>This phml python block will adjust the offset so that the python is processed as this:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">if</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello World&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>So now we can write python code, now what? You can define functions and variables\nhow you normally would and they are now available to the scope of the entire file.\nTake, for instance, the example from above, the one with <code>py-src=\"urls('youtube')\"</code>.\nYou can define the URLs function in the <code>python</code> element and it can be accessed in the <code>py-src</code>\nattribute. So the code would look like this:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">&lt;</span><span class=\"nt\">python</span><span class=\"p\">&gt;</span>\ndef urls(link: str) -&gt; str:\n    links = {\n        &quot;youtube&quot;: &quot;https://youtube.com&quot;\n    }\n    if link in links:\n        return links[link]\n    else:\n        return &quot;&quot;\n<span class=\"p\">&lt;/</span><span class=\"nt\">python</span><span class=\"p\">&gt;</span>\n\n...\n\n<span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">py-href</span><span class=\"o\">=</span><span class=\"s\">&quot;urls(&#39;youtube&#39;)&quot;</span><span class=\"p\">&gt;</span>Youtube<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n</code></pre>\n</div>\n\n<p>phml treats <code>python</code> elements as their own python files. This is meant literally.\nphml creates a temporary python file with a unique name and imports everything from that file.\nWith that in mind that means you have the full power of whatever version of python you are using.\nThe phml parser has functionality to permanently write these python files out if you so desire.</p>\n\n<p>Next up is inline python blocks. These are represented with <code>{}</code>. Any text with this block or\nnormal html attribute with the value containing it will process the text in-between the brackets as\npython. This is mostly useful when you want to inject some python processed or stored value\ninto html. Assume that there is a variable defined in the <code>python</code> element called <code>message</code>\nand it contains <code>Hello World!</code>. Now this variable can be used like this, <code>&lt;p&gt;{ message }&lt;/p&gt;</code>,\nwhich renders to, <code>&lt;p&gt;Hello World!&lt;/p&gt;</code>. Inline python blocks are only rendered in inside a Text\nelement or inside an html attribute.</p>\n\n<p>Conditional Rendering with <code>py-if</code>, <code>py-elif</code>, and <code>py-else</code> is an extremely helpful tool in phml.\n<code>py-if</code> can be used alone and that the python inside it's value must be truthy for the element to be\nrendered. <code>py-elif</code> requires an element with a <code>py-if</code> or <code>py-elif</code> attribute immediately before it,\nand it's condition is rendered the same as <code>py-if</code> but only rendered if a <code>py-if</code> or <code>py-elif</code> first\nfails. <code>py-else</code> requires there to be either a <code>py-if</code> or a <code>py-else</code> immediately before it. It only\nrenders if the previous elements condition fails. If <code>py-elif</code> or <code>py-else</code> is on an element, but\nthe previous element isn't a <code>py-if</code> or <code>py-elif</code> then it will be rendered as normal without the\ncondition. Most importantly, the first element in a chain of conditions must be a <code>py-if</code>.</p>\n\n<p>Python attributes are shortcuts for using inline python blocks in html attributes. Normally, in\nphml, you would inject python logic into an attribute similar to this: <code>src=\"{url('youtube')}\"</code>.\nAs a way to simplify the value and to make it obvious that the attribute is using python you can\nprefix any attribute with <code>py-</code>. This keeps the attribute name the same after the prefix, but tells\nthe parser that the entire value should be processed as python. So the previous example can also be\nexpressed as <code>py-src=\"url('youtube')\"</code>.</p>\n\n<p>PHML as a language is in early planning stages, but hopes to have a easy to use and well featured\nparser. With this the hope is that anyone using the parser will have full control over the generated\nphml ast. This also means that users may write extensions to add features to to manipulate the ast\nto fit their needs. On top of all that the parser will also have a render/convert functionality\nwhere the user may pass extensions, and additional kwargs. These kwargs are exposed while rendering\nthe file to html. This means that the user can generate some other content from some other source\nand inject it into their document. A good example of this is using the <code>markdown</code> python library\nto render markdown to html, then to inject that into the renderer by passing it in as a kwarg.</p>\n"}, "phml.ast": {"fullname": "phml.ast", "modulename": "phml.ast", "type": "module", "doc": "<p></p>\n"}, "phml.ast.AST": {"fullname": "phml.ast.AST", "modulename": "phml.ast", "qualname": "AST", "type": "class", "doc": "<p>PHML ast.</p>\n\n<p>Contains utility functions that can manipulate the ast.</p>\n"}, "phml.ast.AST.__init__": {"fullname": "phml.ast.AST.__init__", "modulename": "phml.ast", "qualname": "AST.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tree</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span></span>)</span>"}, "phml.ast.AST.size": {"fullname": "phml.ast.AST.size", "modulename": "phml.ast", "qualname": "AST.size", "type": "variable", "doc": "<p>Get the number of nodes in the ast tree.</p>\n", "annotation": ": int"}, "phml.ast.AST.inspect": {"fullname": "phml.ast.AST.inspect", "modulename": "phml.ast", "qualname": "AST.inspect", "type": "function", "doc": "<p>Return the full tree's inspect data.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.ast.AST.to_phml": {"fullname": "phml.ast.AST.to_phml", "modulename": "phml.ast", "qualname": "AST.to_phml", "type": "function", "doc": "<p>Get the ast as a phml string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.ast.AST.to_json": {"fullname": "phml.ast.AST.to_json", "modulename": "phml.ast", "qualname": "AST.to_json", "type": "function", "doc": "<p>Get the ast as a json string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.ast.AST.to_html": {"fullname": "phml.ast.AST.to_html", "modulename": "phml.ast", "qualname": "AST.to_html", "type": "function", "doc": "<p>Get the ast as a rendered html string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.file_types": {"fullname": "phml.file_types", "modulename": "phml.file_types", "type": "module", "doc": "<p>File types for phml parsing logic.</p>\n"}, "phml.nodes": {"fullname": "phml.nodes", "modulename": "phml.nodes", "type": "module", "doc": "<p></p>\n"}, "phml.nodes.Node": {"fullname": "phml.nodes.Node", "modulename": "phml.nodes", "qualname": "Node", "type": "class", "doc": "<p>All node values can be expressed in JSON as: string, number,\nobject, array, true, false, or null. This means that the syntax tree should\nbe able to be converted to and from JSON and produce the same tree.\nFor example, in JavaScript, a tree can be passed through JSON.parse(JSON.phml(tree))\nand result in the same tree.</p>\n"}, "phml.nodes.Node.__init__": {"fullname": "phml.nodes.Node.__init__", "modulename": "phml.nodes", "qualname": "Node.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "phml.nodes.Node.position": {"fullname": "phml.nodes.Node.position", "modulename": "phml.nodes", "qualname": "Node.position", "type": "variable", "doc": "<p>The location of a node in a source document.\nThe value of the position field implements the Position interface.\nThe position field must not be present if a node is generated.</p>\n", "annotation": ": phml.nodes.position.Position"}, "phml.nodes.Node.type": {"fullname": "phml.nodes.Node.type", "modulename": "phml.nodes", "qualname": "Node.type", "type": "variable", "doc": "<p>Non-empty string representing the variant of a node.\nThis field can be used to determine the type a node implements.</p>\n", "annotation": ": str"}, "phml.nodes.Root": {"fullname": "phml.nodes.Root", "modulename": "phml.nodes", "qualname": "Root", "type": "class", "doc": "<p>Root (Parent) represents a document.</p>\n\n<p>Root can be used as the root of a tree, or as a value\nof the content field on a 'template' Element, never as a child.</p>\n", "bases": "phml.nodes.parent.Parent"}, "phml.nodes.Root.__init__": {"fullname": "phml.nodes.Root.__init__", "modulename": "phml.nodes", "qualname": "Root.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">children</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "phml.nodes.Root.as_dict": {"fullname": "phml.nodes.Root.as_dict", "modulename": "phml.nodes", "qualname": "Root.as_dict", "type": "function", "doc": "<p>Convert root node to a dict.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Root.tree": {"fullname": "phml.nodes.Root.tree", "modulename": "phml.nodes", "qualname": "Root.tree", "type": "function", "doc": "<p>Yields the tree representation of the node.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Root.inspect": {"fullname": "phml.nodes.Root.inspect", "modulename": "phml.nodes", "qualname": "Root.inspect", "type": "function", "doc": "<p>Return an inspected tree view of the node.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Root.html": {"fullname": "phml.nodes.Root.html", "modulename": "phml.nodes", "qualname": "Root.html", "type": "function", "doc": "<p>Convert root node and all children to an html string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Root.json": {"fullname": "phml.nodes.Root.json", "modulename": "phml.nodes", "qualname": "Root.json", "type": "function", "doc": "<p>Convert root node and all children to a json string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Root.phml": {"fullname": "phml.nodes.Root.phml", "modulename": "phml.nodes", "qualname": "Root.phml", "type": "function", "doc": "<p>Build indented html string of documents elements and their children.</p>\n\n<p>Returns:\n    str: Built html of document</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.DocType": {"fullname": "phml.nodes.DocType", "modulename": "phml.nodes", "qualname": "DocType", "type": "class", "doc": "<p>Doctype (Node) represents a DocumentType ([DOM]).</p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"cp\">&lt;!doctype html&gt;</span>\n</code></pre>\n</div>\n\n<p>Yields:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span><span class=\"nx\">type</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s1\">&#39;doctype&#39;</span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre>\n</div>\n", "bases": "phml.nodes.node.Node"}, "phml.nodes.DocType.__init__": {"fullname": "phml.nodes.DocType.__init__", "modulename": "phml.nodes", "qualname": "DocType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "phml.nodes.DocType.as_dict": {"fullname": "phml.nodes.DocType.as_dict", "modulename": "phml.nodes", "qualname": "DocType.as_dict", "type": "function", "doc": "<p>Convert root node to a dict.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "phml.nodes.DocType.tree": {"fullname": "phml.nodes.DocType.tree", "modulename": "phml.nodes", "qualname": "DocType.tree", "type": "function", "doc": "<p>Yields the tree representation of the node.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">depth</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;\u2514&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.nodes.DocType.inspect": {"fullname": "phml.nodes.DocType.inspect", "modulename": "phml.nodes", "qualname": "DocType.inspect", "type": "function", "doc": "<p>Return an inspected tree view of the node.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.DocType.html": {"fullname": "phml.nodes.DocType.html", "modulename": "phml.nodes", "qualname": "DocType.html", "type": "function", "doc": "<p>Convert doctype node to an html string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.DocType.json": {"fullname": "phml.nodes.DocType.json", "modulename": "phml.nodes", "qualname": "DocType.json", "type": "function", "doc": "<p>Convert doctype node to a json string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.DocType.phml": {"fullname": "phml.nodes.DocType.phml", "modulename": "phml.nodes", "qualname": "DocType.phml", "type": "function", "doc": "<p>Build indented html string of html doctype element.</p>\n\n<p>Returns:\n    str: Built html of doctype element</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Parent": {"fullname": "phml.nodes.Parent", "modulename": "phml.nodes", "qualname": "Parent", "type": "class", "doc": "<p>Parent (UnistParent) represents a node in hast containing other nodes (said to be children).</p>\n\n<p>Its content is limited to only other hast content.</p>\n", "bases": "phml.nodes.node.Node"}, "phml.nodes.Parent.__init__": {"fullname": "phml.nodes.Parent.__init__", "modulename": "phml.nodes", "qualname": "Parent.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">children</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "phml.nodes.Element": {"fullname": "phml.nodes.Element", "modulename": "phml.nodes", "qualname": "Element", "type": "class", "doc": "<p>Element (Parent) represents an Element ([DOM]).</p>\n\n<p>A tagName field must be present. It represents the element\u2019s local name ([DOM]).</p>\n\n<p>The properties field represents information associated with the element.\nThe value of the properties field implements the Properties interface.</p>\n\n<p>If the tagName field is 'template', a content field can be present. The value\nof the content field implements the Root interface.</p>\n\n<p>If the tagName field is 'template', the element must be a leaf.</p>\n\n<p>If the tagName field is 'noscript', its children should be represented as if\nscripting is disabled ([HTML]).</p>\n\n<p>For example, the following HTML:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">&quot;https://alpha.com&quot;</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;bravo&quot;</span> <span class=\"na\">download</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n</code></pre>\n</div>\n\n<p>Yields:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">type</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s1\">&#39;element&#39;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">tagName</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">properties</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nx\">href</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s1\">&#39;https://alpha.com&#39;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nx\">className</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s1\">&#39;bravo&#39;</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nx\">download</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">children</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre>\n</div>\n", "bases": "phml.nodes.parent.Parent"}, "phml.nodes.Element.__init__": {"fullname": "phml.nodes.Element.__init__", "modulename": "phml.nodes", "qualname": "Element.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tag</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">openclose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">children</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "phml.nodes.Element.start_tag": {"fullname": "phml.nodes.Element.start_tag", "modulename": "phml.nodes", "qualname": "Element.start_tag", "type": "function", "doc": "<p>Builds the open/start tag for the element.</p>\n\n<p>Note:\n    It will return <code>/&gt;</code> if the tag is self closing.</p>\n\n<p>Returns:\n    str: Built element start tag.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Element.end_tag": {"fullname": "phml.nodes.Element.end_tag", "modulename": "phml.nodes", "qualname": "Element.end_tag", "type": "function", "doc": "<p>Build the elements end tag.</p>\n\n<p>Returns:\n    str: Built element end tag.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Element.as_dict": {"fullname": "phml.nodes.Element.as_dict", "modulename": "phml.nodes", "qualname": "Element.as_dict", "type": "function", "doc": "<p>Convert element node to dict.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Element.tree": {"fullname": "phml.nodes.Element.tree", "modulename": "phml.nodes", "qualname": "Element.tree", "type": "function", "doc": "<p>Yields the tree representation of the node.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">depth</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Element.inspect": {"fullname": "phml.nodes.Element.inspect", "modulename": "phml.nodes", "qualname": "Element.inspect", "type": "function", "doc": "<p>Return an inspected tree view of the node.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Element.html": {"fullname": "phml.nodes.Element.html", "modulename": "phml.nodes", "qualname": "Element.html", "type": "function", "doc": "<p>Convert element node and all children to an html string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Element.json": {"fullname": "phml.nodes.Element.json", "modulename": "phml.nodes", "qualname": "Element.json", "type": "function", "doc": "<p>Convert element node and all children to a json string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Element.phml": {"fullname": "phml.nodes.Element.phml", "modulename": "phml.nodes", "qualname": "Element.phml", "type": "function", "doc": "<p>Build indented html string of element and it's children.</p>\n\n<p>Returns:\n    str: Built html of element</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Literal": {"fullname": "phml.nodes.Literal", "modulename": "phml.nodes", "qualname": "Literal", "type": "class", "doc": "<p>Literal (UnistLiteral) represents a node in hast containing a value.</p>\n", "bases": "phml.nodes.node.Node"}, "phml.nodes.Literal.__init__": {"fullname": "phml.nodes.Literal.__init__", "modulename": "phml.nodes", "qualname": "Literal.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "phml.nodes.Literal.position": {"fullname": "phml.nodes.Literal.position", "modulename": "phml.nodes", "qualname": "Literal.position", "type": "variable", "doc": "<p>The location of a node in a source document.\nThe value of the position field implements the Position interface.\nThe position field must not be present if a node is generated.</p>\n", "annotation": ": phml.nodes.position.Position"}, "phml.nodes.Literal.value": {"fullname": "phml.nodes.Literal.value", "modulename": "phml.nodes", "qualname": "Literal.value", "type": "variable", "doc": "<p>The Literal nodes value. All literal values must be strings</p>\n", "annotation": ": str"}, "phml.nodes.Literal.as_dict": {"fullname": "phml.nodes.Literal.as_dict", "modulename": "phml.nodes", "qualname": "Literal.as_dict", "type": "function", "doc": "<p>Convert literal node to a dict.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Literal.html": {"fullname": "phml.nodes.Literal.html", "modulename": "phml.nodes", "qualname": "Literal.html", "type": "function", "doc": "<p>Convert literal node to an html string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Literal.json": {"fullname": "phml.nodes.Literal.json", "modulename": "phml.nodes", "qualname": "Literal.json", "type": "function", "doc": "<p>Convert literal node to a json string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Comment": {"fullname": "phml.nodes.Comment", "modulename": "phml.nodes", "qualname": "Comment", "type": "class", "doc": "<p>Comment (Literal) represents a Comment ([DOM]).</p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"cm\">&lt;!--Charlie--&gt;</span>\n</code></pre>\n</div>\n", "bases": "phml.nodes.literal.Literal"}, "phml.nodes.Comment.tree": {"fullname": "phml.nodes.Comment.tree", "modulename": "phml.nodes", "qualname": "Comment.tree", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">depth</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;\u2514&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Comment.inspect": {"fullname": "phml.nodes.Comment.inspect", "modulename": "phml.nodes", "qualname": "Comment.inspect", "type": "function", "doc": "<p>Return an inspected tree view of the node.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Comment.phml": {"fullname": "phml.nodes.Comment.phml", "modulename": "phml.nodes", "qualname": "Comment.phml", "type": "function", "doc": "<p>Build indented html string of html comment.</p>\n\n<p>Returns:\n    str: Built html of comment</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Text": {"fullname": "phml.nodes.Text", "modulename": "phml.nodes", "qualname": "Text", "type": "class", "doc": "<p>Text (Literal) represents a Text ([DOM]).</p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">&lt;</span><span class=\"nt\">span</span><span class=\"p\">&gt;</span>Foxtrot<span class=\"p\">&lt;/</span><span class=\"nt\">span</span><span class=\"p\">&gt;</span>\n</code></pre>\n</div>\n\n<p>Yields:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">type</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s1\">&#39;element&#39;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">tagName</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s1\">&#39;span&#39;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">properties</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{},</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">children</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">[{</span><span class=\"nx\">type</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s1\">&#39;text&#39;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">value</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s1\">&#39;Foxtrot&#39;</span><span class=\"p\">}]</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre>\n</div>\n", "bases": "phml.nodes.literal.Literal"}, "phml.nodes.Text.tree": {"fullname": "phml.nodes.Text.tree", "modulename": "phml.nodes", "qualname": "Text.tree", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">depth</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Text.inspect": {"fullname": "phml.nodes.Text.inspect", "modulename": "phml.nodes", "qualname": "Text.inspect", "type": "function", "doc": "<p>Return an inspected tree view of the node.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Text.phml": {"fullname": "phml.nodes.Text.phml", "modulename": "phml.nodes", "qualname": "Text.phml", "type": "function", "doc": "<p>Build indented html string of html text.</p>\n\n<p>Returns:\n    str: Built html of text</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Position": {"fullname": "phml.nodes.Position", "modulename": "phml.nodes", "qualname": "Position", "type": "class", "doc": "<p>Position represents the location of a node in a source file.</p>\n\n<p>The <code>start</code> field of <code>Position</code> represents the place of the first character\nof the parsed source region. The <code>end</code> field of Position represents the place\nof the first character after the parsed source region, whether it exists or not.\nThe value of the <code>start</code> and <code>end</code> fields implement the <code>Point</code> interface.</p>\n\n<p>The <code>indent</code> field of <code>Position</code> represents the start column at each index\n(plus start line) in the source region, for elements that span multiple lines.</p>\n\n<p>If the syntactic unit represented by a node is not present in the source file at\nthe time of parsing, the node is said to be <code>generated</code> and it must not have positional\ninformation.</p>\n"}, "phml.nodes.Position.__init__": {"fullname": "phml.nodes.Position.__init__", "modulename": "phml.nodes", "qualname": "Position.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">point</span><span class=\"o\">.</span><span class=\"n\">Point</span>,</span><span class=\"param\">\t<span class=\"n\">end</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">point</span><span class=\"o\">.</span><span class=\"n\">Point</span>,</span><span class=\"param\">\t<span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "phml.nodes.Point": {"fullname": "phml.nodes.Point", "modulename": "phml.nodes", "qualname": "Point", "type": "class", "doc": "<p>Represents one place in a source file.</p>\n\n<p>The line field (1-indexed integer) represents a line in a source file. The column field (1-indexed integer) represents a column in a source file. The offset field (0-indexed integer) represents a character in a source file.</p>\n"}, "phml.nodes.Point.__init__": {"fullname": "phml.nodes.Point.__init__", "modulename": "phml.nodes", "qualname": "Point.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">line</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">column</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "phml.nodes.PropertyName": {"fullname": "phml.nodes.PropertyName", "modulename": "phml.nodes", "qualname": "PropertyName", "type": "class", "doc": "<p>str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str</p>\n\n<p>Create a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.</p>\n"}, "phml.nodes.PropertyName.__init__": {"fullname": "phml.nodes.PropertyName.__init__", "modulename": "phml.nodes", "qualname": "PropertyName.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "phml.nodes.PropertyName.encode": {"fullname": "phml.nodes.PropertyName.encode", "modulename": "phml.nodes", "qualname": "PropertyName.encode", "type": "function", "doc": "<p>Encode the string using the codec registered for encoding.</p>\n\n<p>encoding\n  The encoding in which to encode the string.\nerrors\n  The error handling scheme to use for encoding errors.\n  The default is 'strict' meaning that encoding errors raise a\n  UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and\n  'xmlcharrefreplace' as well as any other name registered with\n  codecs.register_error that can handle UnicodeEncodeErrors.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">&#39;utf-8&#39;</span>, </span><span class=\"param\"><span class=\"n\">errors</span><span class=\"o\">=</span><span class=\"s1\">&#39;strict&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.replace": {"fullname": "phml.nodes.PropertyName.replace", "modulename": "phml.nodes", "qualname": "PropertyName.replace", "type": "function", "doc": "<p>Return a copy with all occurrences of substring old replaced by new.</p>\n\n<p>count\n    Maximum number of occurrences to replace.\n    -1 (the default value) means replace all occurrences.</p>\n\n<p>If the optional argument count is given, only the first count occurrences are\nreplaced.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">old</span>, </span><span class=\"param\"><span class=\"n\">new</span>, </span><span class=\"param\"><span class=\"n\">count</span><span class=\"o\">=-</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.split": {"fullname": "phml.nodes.PropertyName.split", "modulename": "phml.nodes", "qualname": "PropertyName.split", "type": "function", "doc": "<p>Return a list of the substrings in the string, using sep as the separator string.</p>\n\n<p>sep\n    The separator used to split the string.</p>\n\n<pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\\\n \\\\r \\\\t \\\\f and spaces) and will discard\nempty strings from the result.\n</code></pre>\n\n<p>maxsplit\n    Maximum number of splits (starting from the left).\n    -1 (the default value) means no limit.</p>\n\n<p>Note, str.split() is mainly useful for data that has been intentionally\ndelimited.  With natural text that includes punctuation, consider using\nthe regular expression module.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">maxsplit</span><span class=\"o\">=-</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.rsplit": {"fullname": "phml.nodes.PropertyName.rsplit", "modulename": "phml.nodes", "qualname": "PropertyName.rsplit", "type": "function", "doc": "<p>Return a list of the substrings in the string, using sep as the separator string.</p>\n\n<p>sep\n    The separator used to split the string.</p>\n\n<pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\\\n \\\\r \\\\t \\\\f and spaces) and will discard\nempty strings from the result.\n</code></pre>\n\n<p>maxsplit\n    Maximum number of splits (starting from the left).\n    -1 (the default value) means no limit.</p>\n\n<p>Splitting starts at the end of the string and works to the front.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">maxsplit</span><span class=\"o\">=-</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.join": {"fullname": "phml.nodes.PropertyName.join", "modulename": "phml.nodes", "qualname": "PropertyName.join", "type": "function", "doc": "<p>Concatenate any number of strings.</p>\n\n<p>The string whose method is called is inserted in between each given string.\nThe result is returned as a new string.</p>\n\n<p>Example: '.'.join(['ab', 'pq', 'rs']) -> 'ab.pq.rs'</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">iterable</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.capitalize": {"fullname": "phml.nodes.PropertyName.capitalize", "modulename": "phml.nodes", "qualname": "PropertyName.capitalize", "type": "function", "doc": "<p>Return a capitalized version of the string.</p>\n\n<p>More specifically, make the first character have upper case and the rest lower\ncase.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.casefold": {"fullname": "phml.nodes.PropertyName.casefold", "modulename": "phml.nodes", "qualname": "PropertyName.casefold", "type": "function", "doc": "<p>Return a version of the string suitable for caseless comparisons.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.title": {"fullname": "phml.nodes.PropertyName.title", "modulename": "phml.nodes", "qualname": "PropertyName.title", "type": "function", "doc": "<p>Return a version of the string where each word is titlecased.</p>\n\n<p>More specifically, words start with uppercased characters and all remaining\ncased characters have lower case.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.center": {"fullname": "phml.nodes.PropertyName.center", "modulename": "phml.nodes", "qualname": "PropertyName.center", "type": "function", "doc": "<p>Return a centered string of length width.</p>\n\n<p>Padding is done using the specified fill character (default is a space).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"n\">fillchar</span><span class=\"o\">=</span><span class=\"s1\">&#39; &#39;</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.count": {"fullname": "phml.nodes.PropertyName.count", "modulename": "phml.nodes", "qualname": "PropertyName.count", "type": "function", "doc": "<p>S.count(sub[, start[, end]]) -> int</p>\n\n<p>Return the number of non-overlapping occurrences of substring sub in\nstring S[start:end].  Optional arguments start and end are\ninterpreted as in slice notation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.expandtabs": {"fullname": "phml.nodes.PropertyName.expandtabs", "modulename": "phml.nodes", "qualname": "PropertyName.expandtabs", "type": "function", "doc": "<p>Return a copy where all tab characters are expanded using spaces.</p>\n\n<p>If tabsize is not given, a tab size of 8 characters is assumed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">tabsize</span><span class=\"o\">=</span><span class=\"mi\">8</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.find": {"fullname": "phml.nodes.PropertyName.find", "modulename": "phml.nodes", "qualname": "PropertyName.find", "type": "function", "doc": "<p>S.find(sub[, start[, end]]) -> int</p>\n\n<p>Return the lowest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.</p>\n\n<p>Return -1 on failure.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.partition": {"fullname": "phml.nodes.PropertyName.partition", "modulename": "phml.nodes", "qualname": "PropertyName.partition", "type": "function", "doc": "<p>Partition the string into three parts using the given separator.</p>\n\n<p>This will search for the separator in the string.  If the separator is found,\nreturns a 3-tuple containing the part before the separator, the separator\nitself, and the part after it.</p>\n\n<p>If the separator is not found, returns a 3-tuple containing the original string\nand two empty strings.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sep</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.index": {"fullname": "phml.nodes.PropertyName.index", "modulename": "phml.nodes", "qualname": "PropertyName.index", "type": "function", "doc": "<p>S.index(sub[, start[, end]]) -> int</p>\n\n<p>Return the lowest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.</p>\n\n<p>Raises ValueError when the substring is not found.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.ljust": {"fullname": "phml.nodes.PropertyName.ljust", "modulename": "phml.nodes", "qualname": "PropertyName.ljust", "type": "function", "doc": "<p>Return a left-justified string of length width.</p>\n\n<p>Padding is done using the specified fill character (default is a space).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"n\">fillchar</span><span class=\"o\">=</span><span class=\"s1\">&#39; &#39;</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.lower": {"fullname": "phml.nodes.PropertyName.lower", "modulename": "phml.nodes", "qualname": "PropertyName.lower", "type": "function", "doc": "<p>Return a copy of the string converted to lowercase.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.lstrip": {"fullname": "phml.nodes.PropertyName.lstrip", "modulename": "phml.nodes", "qualname": "PropertyName.lstrip", "type": "function", "doc": "<p>Return a copy of the string with leading whitespace removed.</p>\n\n<p>If chars is given and not None, remove characters in chars instead.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">chars</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.rfind": {"fullname": "phml.nodes.PropertyName.rfind", "modulename": "phml.nodes", "qualname": "PropertyName.rfind", "type": "function", "doc": "<p>S.rfind(sub[, start[, end]]) -> int</p>\n\n<p>Return the highest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.</p>\n\n<p>Return -1 on failure.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.rindex": {"fullname": "phml.nodes.PropertyName.rindex", "modulename": "phml.nodes", "qualname": "PropertyName.rindex", "type": "function", "doc": "<p>S.rindex(sub[, start[, end]]) -> int</p>\n\n<p>Return the highest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.</p>\n\n<p>Raises ValueError when the substring is not found.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.rjust": {"fullname": "phml.nodes.PropertyName.rjust", "modulename": "phml.nodes", "qualname": "PropertyName.rjust", "type": "function", "doc": "<p>Return a right-justified string of length width.</p>\n\n<p>Padding is done using the specified fill character (default is a space).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"n\">fillchar</span><span class=\"o\">=</span><span class=\"s1\">&#39; &#39;</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.rstrip": {"fullname": "phml.nodes.PropertyName.rstrip", "modulename": "phml.nodes", "qualname": "PropertyName.rstrip", "type": "function", "doc": "<p>Return a copy of the string with trailing whitespace removed.</p>\n\n<p>If chars is given and not None, remove characters in chars instead.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">chars</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.rpartition": {"fullname": "phml.nodes.PropertyName.rpartition", "modulename": "phml.nodes", "qualname": "PropertyName.rpartition", "type": "function", "doc": "<p>Partition the string into three parts using the given separator.</p>\n\n<p>This will search for the separator in the string, starting at the end. If\nthe separator is found, returns a 3-tuple containing the part before the\nseparator, the separator itself, and the part after it.</p>\n\n<p>If the separator is not found, returns a 3-tuple containing two empty strings\nand the original string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sep</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.splitlines": {"fullname": "phml.nodes.PropertyName.splitlines", "modulename": "phml.nodes", "qualname": "PropertyName.splitlines", "type": "function", "doc": "<p>Return a list of the lines in the string, breaking at line boundaries.</p>\n\n<p>Line breaks are not included in the resulting list unless keepends is given and\ntrue.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">keepends</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.strip": {"fullname": "phml.nodes.PropertyName.strip", "modulename": "phml.nodes", "qualname": "PropertyName.strip", "type": "function", "doc": "<p>Return a copy of the string with leading and trailing whitespace removed.</p>\n\n<p>If chars is given and not None, remove characters in chars instead.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">chars</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.swapcase": {"fullname": "phml.nodes.PropertyName.swapcase", "modulename": "phml.nodes", "qualname": "PropertyName.swapcase", "type": "function", "doc": "<p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.translate": {"fullname": "phml.nodes.PropertyName.translate", "modulename": "phml.nodes", "qualname": "PropertyName.translate", "type": "function", "doc": "<p>Replace each character in the string using the given translation table.</p>\n\n<p>table\n    Translation table, which must be a mapping of Unicode ordinals to\n    Unicode ordinals, strings, or None.</p>\n\n<p>The table must implement lookup/indexing via __getitem__, for instance a\ndictionary or list.  If this operation raises LookupError, the character is\nleft untouched.  Characters mapped to None are deleted.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">table</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.upper": {"fullname": "phml.nodes.PropertyName.upper", "modulename": "phml.nodes", "qualname": "PropertyName.upper", "type": "function", "doc": "<p>Return a copy of the string converted to uppercase.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.startswith": {"fullname": "phml.nodes.PropertyName.startswith", "modulename": "phml.nodes", "qualname": "PropertyName.startswith", "type": "function", "doc": "<p>S.startswith(prefix[, start[, end]]) -> bool</p>\n\n<p>Return True if S starts with the specified prefix, False otherwise.\nWith optional start, test S beginning at that position.\nWith optional end, stop comparing S at that position.\nprefix can also be a tuple of strings to try.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.endswith": {"fullname": "phml.nodes.PropertyName.endswith", "modulename": "phml.nodes", "qualname": "PropertyName.endswith", "type": "function", "doc": "<p>S.endswith(suffix[, start[, end]]) -> bool</p>\n\n<p>Return True if S ends with the specified suffix, False otherwise.\nWith optional start, test S beginning at that position.\nWith optional end, stop comparing S at that position.\nsuffix can also be a tuple of strings to try.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.removeprefix": {"fullname": "phml.nodes.PropertyName.removeprefix", "modulename": "phml.nodes", "qualname": "PropertyName.removeprefix", "type": "function", "doc": "<p>Return a str with the given prefix string removed if present.</p>\n\n<p>If the string starts with the prefix string, return string[len(prefix):].\nOtherwise, return a copy of the original string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">prefix</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.removesuffix": {"fullname": "phml.nodes.PropertyName.removesuffix", "modulename": "phml.nodes", "qualname": "PropertyName.removesuffix", "type": "function", "doc": "<p>Return a str with the given suffix string removed if present.</p>\n\n<p>If the string ends with the suffix string and that suffix is not empty,\nreturn string[:-len(suffix)]. Otherwise, return a copy of the original\nstring.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">suffix</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.isascii": {"fullname": "phml.nodes.PropertyName.isascii", "modulename": "phml.nodes", "qualname": "PropertyName.isascii", "type": "function", "doc": "<p>Return True if all characters in the string are ASCII, False otherwise.</p>\n\n<p>ASCII characters have code points in the range U+0000-U+007F.\nEmpty string is ASCII too.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.islower": {"fullname": "phml.nodes.PropertyName.islower", "modulename": "phml.nodes", "qualname": "PropertyName.islower", "type": "function", "doc": "<p>Return True if the string is a lowercase string, False otherwise.</p>\n\n<p>A string is lowercase if all cased characters in the string are lowercase and\nthere is at least one cased character in the string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.isupper": {"fullname": "phml.nodes.PropertyName.isupper", "modulename": "phml.nodes", "qualname": "PropertyName.isupper", "type": "function", "doc": "<p>Return True if the string is an uppercase string, False otherwise.</p>\n\n<p>A string is uppercase if all cased characters in the string are uppercase and\nthere is at least one cased character in the string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.istitle": {"fullname": "phml.nodes.PropertyName.istitle", "modulename": "phml.nodes", "qualname": "PropertyName.istitle", "type": "function", "doc": "<p>Return True if the string is a title-cased string, False otherwise.</p>\n\n<p>In a title-cased string, upper- and title-case characters may only\nfollow uncased characters and lowercase characters only cased ones.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.isspace": {"fullname": "phml.nodes.PropertyName.isspace", "modulename": "phml.nodes", "qualname": "PropertyName.isspace", "type": "function", "doc": "<p>Return True if the string is a whitespace string, False otherwise.</p>\n\n<p>A string is whitespace if all characters in the string are whitespace and there\nis at least one character in the string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.isdecimal": {"fullname": "phml.nodes.PropertyName.isdecimal", "modulename": "phml.nodes", "qualname": "PropertyName.isdecimal", "type": "function", "doc": "<p>Return True if the string is a decimal string, False otherwise.</p>\n\n<p>A string is a decimal string if all characters in the string are decimal and\nthere is at least one character in the string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.isdigit": {"fullname": "phml.nodes.PropertyName.isdigit", "modulename": "phml.nodes", "qualname": "PropertyName.isdigit", "type": "function", "doc": "<p>Return True if the string is a digit string, False otherwise.</p>\n\n<p>A string is a digit string if all characters in the string are digits and there\nis at least one character in the string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.isnumeric": {"fullname": "phml.nodes.PropertyName.isnumeric", "modulename": "phml.nodes", "qualname": "PropertyName.isnumeric", "type": "function", "doc": "<p>Return True if the string is a numeric string, False otherwise.</p>\n\n<p>A string is numeric if all characters in the string are numeric and there is at\nleast one character in the string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.isalpha": {"fullname": "phml.nodes.PropertyName.isalpha", "modulename": "phml.nodes", "qualname": "PropertyName.isalpha", "type": "function", "doc": "<p>Return True if the string is an alphabetic string, False otherwise.</p>\n\n<p>A string is alphabetic if all characters in the string are alphabetic and there\nis at least one character in the string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.isalnum": {"fullname": "phml.nodes.PropertyName.isalnum", "modulename": "phml.nodes", "qualname": "PropertyName.isalnum", "type": "function", "doc": "<p>Return True if the string is an alpha-numeric string, False otherwise.</p>\n\n<p>A string is alpha-numeric if all characters in the string are alpha-numeric and\nthere is at least one character in the string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.isidentifier": {"fullname": "phml.nodes.PropertyName.isidentifier", "modulename": "phml.nodes", "qualname": "PropertyName.isidentifier", "type": "function", "doc": "<p>Return True if the string is a valid Python identifier, False otherwise.</p>\n\n<p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier,\nsuch as \"def\" or \"class\".</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.isprintable": {"fullname": "phml.nodes.PropertyName.isprintable", "modulename": "phml.nodes", "qualname": "PropertyName.isprintable", "type": "function", "doc": "<p>Return True if the string is printable, False otherwise.</p>\n\n<p>A string is printable if all of its characters are considered printable in\nrepr() or if it is empty.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.zfill": {"fullname": "phml.nodes.PropertyName.zfill", "modulename": "phml.nodes", "qualname": "PropertyName.zfill", "type": "function", "doc": "<p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p>\n\n<p>The string is never truncated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.format": {"fullname": "phml.nodes.PropertyName.format", "modulename": "phml.nodes", "qualname": "PropertyName.format", "type": "function", "doc": "<p>S.format(<em>args, *</em>kwargs) -> str</p>\n\n<p>Return a formatted version of S, using substitutions from args and kwargs.\nThe substitutions are identified by braces ('{' and '}').</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.format_map": {"fullname": "phml.nodes.PropertyName.format_map", "modulename": "phml.nodes", "qualname": "PropertyName.format_map", "type": "function", "doc": "<p>S.format_map(mapping) -> str</p>\n\n<p>Return a formatted version of S, using substitutions from mapping.\nThe substitutions are identified by braces ('{' and '}').</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.PropertyName.maketrans": {"fullname": "phml.nodes.PropertyName.maketrans", "modulename": "phml.nodes", "qualname": "PropertyName.maketrans", "type": "function", "doc": "<p>Return a translation table usable for str.translate().</p>\n\n<p>If there is only one argument, it must be a dictionary mapping Unicode\nordinals (integers) or characters to Unicode ordinals, strings or None.\nCharacter keys will be then converted to ordinals.\nIf there are two arguments, they must be strings of equal length, and\nin the resulting dictionary, each character in x will be mapped to the\ncharacter at the same position in y. If there is a third argument, it\nmust be a string, whose characters will be mapped to None in the result.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.parser": {"fullname": "phml.parser", "modulename": "phml.parser", "type": "module", "doc": "<p>Pythonic Hypertext Markup Language (phml) parser.</p>\n"}, "phml.parser.PHMLParser": {"fullname": "phml.parser.PHMLParser", "modulename": "phml.parser", "qualname": "PHMLParser", "type": "class", "doc": "<p>Custom html parser inherited from the python\nbuilt-in html.parser.</p>\n", "bases": "html.parser.HTMLParser"}, "phml.parser.PHMLParser.__init__": {"fullname": "phml.parser.PHMLParser.__init__", "modulename": "phml.parser", "qualname": "PHMLParser.__init__", "type": "function", "doc": "<p>Initialize and reset this instance.</p>\n\n<p>If convert_charrefs is True (the default), all character references\nare automatically converted to the corresponding Unicode characters.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">convert_charrefs</span><span class=\"o\">=</span><span class=\"kc\">True</span></span>)</span>"}, "phml.parser.PHMLParser.cur": {"fullname": "phml.parser.PHMLParser.cur", "modulename": "phml.parser", "qualname": "PHMLParser.cur", "type": "variable", "doc": "<p>The current parent element in the recursion.</p>\n", "annotation": ": phml.nodes.root.Root | phml.nodes.element.Element"}, "phml.parser.PHMLParser.handle_decl": {"fullname": "phml.parser.PHMLParser.handle_decl", "modulename": "phml.parser", "qualname": "PHMLParser.handle_decl", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">decl</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "phml.parser.PHMLParser.handle_pi": {"fullname": "phml.parser.PHMLParser.handle_pi", "modulename": "phml.parser", "qualname": "PHMLParser.handle_pi", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "phml.parser.PHMLParser.handle_starttag": {"fullname": "phml.parser.PHMLParser.handle_starttag", "modulename": "phml.parser", "qualname": "PHMLParser.handle_starttag", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tag</span>, </span><span class=\"param\"><span class=\"n\">attrs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.parser.PHMLParser.handle_startendtag": {"fullname": "phml.parser.PHMLParser.handle_startendtag", "modulename": "phml.parser", "qualname": "PHMLParser.handle_startendtag", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tag</span>, </span><span class=\"param\"><span class=\"n\">attrs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.parser.PHMLParser.handle_endtag": {"fullname": "phml.parser.PHMLParser.handle_endtag", "modulename": "phml.parser", "qualname": "PHMLParser.handle_endtag", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tag</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.parser.PHMLParser.handle_data": {"fullname": "phml.parser.PHMLParser.handle_data", "modulename": "phml.parser", "qualname": "PHMLParser.handle_data", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.parser.PHMLParser.handle_comment": {"fullname": "phml.parser.PHMLParser.handle_comment", "modulename": "phml.parser", "qualname": "PHMLParser.handle_comment", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "phml.parser.Parser": {"fullname": "phml.parser.Parser", "modulename": "phml.parser", "qualname": "Parser", "type": "class", "doc": "<p>Primary logic to handle everything with a phml file.</p>\n\n<p>This class can parse files as phml files and create an ast.\nThe ast and the nodes themselfs can translate themselves to;\nhtml, phml, and json. The ast can recursively return itself as\nan html string. However, only this class can process the python\nblocks inside of the phml file.</p>\n\n<p>Call Parser.convert() and pass any kwargs you wish to be exposed to\nthe process that processes the python. You may also use Parser.util to\npass extensions to convert and manipulate the html along with the python\nprocessing.</p>\n"}, "phml.parser.Parser.__init__": {"fullname": "phml.parser.Parser.__init__", "modulename": "phml.parser", "qualname": "Parser.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "phml.parser.Parser.parser": {"fullname": "phml.parser.Parser.parser", "modulename": "phml.parser", "qualname": "Parser.parser", "type": "variable", "doc": "<p>The custom builtin <code>html.parser</code> class that builds phml ast.</p>\n", "annotation": ": phml.parser.PHMLParser"}, "phml.parser.Parser.ast": {"fullname": "phml.parser.Parser.ast", "modulename": "phml.parser", "qualname": "Parser.ast", "type": "variable", "doc": "<p>The recursive node tree of the phml ast.</p>\n", "annotation": ": phml.ast.AST"}, "phml.parser.Parser.parse": {"fullname": "phml.parser.Parser.parse", "modulename": "phml.parser", "qualname": "Parser.parse", "type": "function", "doc": "<p>Parse a given phml file to AST following hast and unist.</p>\n\n<p>When finished the PHML.ast variable will be populated with the\nresulting ast.</p>\n\n<p>Args:\n    path (str | Path): The path to the file that should be parsed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.parser.Parser.write": {"fullname": "phml.parser.Parser.write", "modulename": "phml.parser", "qualname": "Parser.write", "type": "function", "doc": "<p>Write a phml ast to a file.</p>\n\n<p>Defaults to writing the parsed ast on this object to a file.\nAlternatively takes an ast param to write to a file.</p>\n\n<p>Can convert to json, phml, or html.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">file_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;phml&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ast</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.parser.Parser.stringify": {"fullname": "phml.parser.Parser.stringify", "modulename": "phml.parser", "qualname": "Parser.stringify", "type": "function", "doc": "<p>Convert a phml ast to a string.</p>\n\n<p>Defaults to writing the parsed ast on this object to a file.\nAlternatively takes an ast param to write to a file.</p>\n\n<p>Can convert to json, phml, or html.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">file_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;phml&#39;</span>, </span><span class=\"param\"><span class=\"n\">ast</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">AST</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.utils": {"fullname": "phml.utils", "modulename": "phml.utils", "type": "module", "doc": "<p></p>\n"}, "phml.utils.find": {"fullname": "phml.utils.find", "modulename": "phml.utils.find", "type": "module", "doc": "<p></p>\n"}, "phml.utils.find.ancestor": {"fullname": "phml.utils.find.ancestor", "modulename": "phml.utils.find", "qualname": "ancestor", "type": "function", "doc": "<p>Get the common ancestor between two nodes.</p>\n\n<p>Args:\n    first (All_Nodes): First node to use.\n    second (All_Nodes): Second node to use.</p>\n\n<p>Returns:\n    Optional[All_Nodes]: The node that is the common\n    ancestor or None if not found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">nodes</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">Text</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">Comment</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">doctype</span><span class=\"o\">.</span><span class=\"n\">DocType</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">Parent</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">literal</span><span class=\"o\">.</span><span class=\"n\">Literal</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">Text</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">Comment</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">doctype</span><span class=\"o\">.</span><span class=\"n\">DocType</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">Parent</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">literal</span><span class=\"o\">.</span><span class=\"n\">Literal</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.utils.find.find": {"fullname": "phml.utils.find.find", "modulename": "phml.utils.find", "qualname": "find", "type": "function", "doc": "<p>Walk the nodes children and return the desired node.</p>\n\n<p>Returns the first node that matches the condition.</p>\n\n<p>Args:\n    condition (Test): Condition to check against each node.</p>\n\n<p>Returns:\n    Optional[All_Nodes]: Returns the found node or None if not found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">Text</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">Comment</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">doctype</span><span class=\"o\">.</span><span class=\"n\">DocType</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">Parent</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">literal</span><span class=\"o\">.</span><span class=\"n\">Literal</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.utils.find.find_after": {"fullname": "phml.utils.find.find_after", "modulename": "phml.utils.find", "qualname": "find_after", "type": "function", "doc": "<p>Get the first sibling node.</p>\n\n<p>Args:\n    node (All_Nodes): Node to get sibling from.\n    condition (Test): Condition to check against each node.</p>\n\n<p>Returns:\n    Optional[All_Nodes]: Returns the first sibling or None if there\n    are no siblings.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">Text</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">Comment</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">doctype</span><span class=\"o\">.</span><span class=\"n\">DocType</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">Parent</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">literal</span><span class=\"o\">.</span><span class=\"n\">Literal</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">Text</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">Comment</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">doctype</span><span class=\"o\">.</span><span class=\"n\">DocType</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">Parent</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">literal</span><span class=\"o\">.</span><span class=\"n\">Literal</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.utils.find.find_all_after": {"fullname": "phml.utils.find.find_all_after", "modulename": "phml.utils.find", "qualname": "find_all_after", "type": "function", "doc": "<p>Get the all sibling nodes.</p>\n\n<p>Args:\n    node (All_Nodes): Node to get siblings from.\n    condition (Test): Condition to check against each node.</p>\n\n<p>Returns:\n    list[All_Nodes]: Returns the all siblings that match the\n    condition or an empty list if none were found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">Text</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">Comment</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">doctype</span><span class=\"o\">.</span><span class=\"n\">DocType</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">Parent</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">literal</span><span class=\"o\">.</span><span class=\"n\">Literal</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">Text</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">Comment</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">doctype</span><span class=\"o\">.</span><span class=\"n\">DocType</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">Parent</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">literal</span><span class=\"o\">.</span><span class=\"n\">Literal</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.utils.find.find_before": {"fullname": "phml.utils.find.find_before", "modulename": "phml.utils.find", "qualname": "find_before", "type": "function", "doc": "<p>Find the first sibling node before the given node. If a condition is applied\nthen it will be the first sibling node that passes that condition.</p>\n\n<p>Args:\n    node (All_Nodes): The node to find the previous sibling from.\n    condition (Optional[Test]): The test that is applied to each node.</p>\n\n<p>Returns:\n    Optional[All_Nodes]: The first node before the given node\n    or None if no prior siblings.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">Text</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">Comment</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">doctype</span><span class=\"o\">.</span><span class=\"n\">DocType</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">Parent</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">literal</span><span class=\"o\">.</span><span class=\"n\">Literal</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">Text</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">Comment</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">doctype</span><span class=\"o\">.</span><span class=\"n\">DocType</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">Parent</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">literal</span><span class=\"o\">.</span><span class=\"n\">Literal</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.utils.find.find_all_before": {"fullname": "phml.utils.find.find_all_before", "modulename": "phml.utils.find", "qualname": "find_all_before", "type": "function", "doc": "<p>Find all nodes that come before the given node.</p>\n\n<p>Args:\n    node (All_Nodes): The node to find all previous siblings from.\n    condition (Optional[Test]): The condition to apply to each node.</p>\n\n<p>Returns:\n    list[All_Nodes]: A list of nodes that come before the given node.\n    Empty list if no nodes were found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">Text</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">Comment</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">doctype</span><span class=\"o\">.</span><span class=\"n\">DocType</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">Parent</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">literal</span><span class=\"o\">.</span><span class=\"n\">Literal</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">Text</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">Comment</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">doctype</span><span class=\"o\">.</span><span class=\"n\">DocType</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">Parent</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">literal</span><span class=\"o\">.</span><span class=\"n\">Literal</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.utils.find.find_all_between": {"fullname": "phml.utils.find.find_all_between", "modulename": "phml.utils.find", "qualname": "find_all_between", "type": "function", "doc": "<p>Find all sibling nodes in parent that meet the provided condition from start index\nto end index.</p>\n\n<p>Args:\n    parent (Root | Element): The parent element to get nodes from.\n    start (int, optional): The starting index, inclusive. Defaults to 0.\n    end (int, optional): The ending index, exclusive. Defaults to 0.\n    condition (Test, optional): Condition to apply to each node. Defaults to None.\n    _range (slice, optional): Slice to apply to the parent nodes children instead of start and end indecies. Defaults to None.</p>\n\n<p>Returns:\n    list[All_Nodes]: List of all matching nodes or an empty list if none were found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span>,</span><span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">end</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">_range</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">slice</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">Text</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">Comment</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">doctype</span><span class=\"o\">.</span><span class=\"n\">DocType</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">Parent</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">literal</span><span class=\"o\">.</span><span class=\"n\">Literal</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.utils.misc": {"fullname": "phml.utils.misc", "modulename": "phml.utils.misc", "type": "module", "doc": "<p></p>\n"}, "phml.utils.misc.depth": {"fullname": "phml.utils.misc.depth", "modulename": "phml.utils.misc", "qualname": "depth", "type": "function", "doc": "<p>Get the depth in the tree for a given node.</p>\n\n<p>-1 means that you passed in the tree itself and you are at the\nast's root.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">el</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">Text</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">Comment</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">doctype</span><span class=\"o\">.</span><span class=\"n\">DocType</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">Parent</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">literal</span><span class=\"o\">.</span><span class=\"n\">Literal</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "phml.utils.test": {"fullname": "phml.utils.test", "modulename": "phml.utils.test", "type": "module", "doc": "<p></p>\n"}, "phml.utils.test.test": {"fullname": "phml.utils.test.test", "modulename": "phml.utils.test", "qualname": "test", "type": "function", "doc": "<p>Test if a node passes the given test(s).</p>\n\n<p>Test Types:\n    - <code>None</code>: Just checks that the node is a valid node.\n    - <code>str</code>: Checks that the test value is == the <code>node.type</code>.\n    - <code>dict</code>: Checks all items are valid attributes on the node.\n    and that the values are strictly equal.\n    - <code>Callable</code>: Passes the given function the node and it's index, if provided,\n    and checks if the callable returned true.\n    - <code>list[Test]</code>: Apply all the rules above for each Test in the list.</p>\n\n<p>If the <code>parent</code> arg is passed so should the <code>index</code> arg.</p>\n\n<p>Args:\n    node (All_Nodes): Node to test. Can be any phml node.\n    test (Test): Test to apply to the node. See previous section\n    for more info.\n    index (Optional[int], optional): Index in the parent where the\n    node exists. Defaults to None.\n    parent (Optional[Root | Element], optional): The nodes parent. Defaults to None.</p>\n\n<p>Returns:\n    True if all tests pass.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">Text</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">Comment</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">doctype</span><span class=\"o\">.</span><span class=\"n\">DocType</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">Parent</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">literal</span><span class=\"o\">.</span><span class=\"n\">Literal</span>,</span><span class=\"param\">\t<span class=\"n\">_test</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "phml.utils.transform": {"fullname": "phml.utils.transform", "modulename": "phml.utils.transform", "type": "module", "doc": "<p></p>\n"}, "phml.utils.transform.filter_nodes": {"fullname": "phml.utils.transform.filter_nodes", "modulename": "phml.utils.transform", "qualname": "filter_nodes", "type": "function", "doc": "<p>Take a given tree and filter the nodes with the condition.\nOnly nodes passing the condition stay. If the parent node fails,\nthen all children are removed.</p>\n\n<p>Same as remove_nodes but keeps the nodes that match.</p>\n\n<p>Args:\n    tree (Root | Element): The tree node to filter.\n    condition (Test): The condition to apply to each node.</p>\n\n<p>Returns:\n    Root | Element: The given tree after being filtered.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tree</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utils.transform.remove_nodes": {"fullname": "phml.utils.transform.remove_nodes", "modulename": "phml.utils.transform", "qualname": "remove_nodes", "type": "function", "doc": "<p>Take a given tree and remove the nodes that match the condition.\nIf a parent node is removed so is all the children.</p>\n\n<p>Same as filter_nodes except removes nodes that match.</p>\n\n<p>Args:\n    tree (Root | Element): The parent node to start recursively removing from.\n    condition (Test): The condition to apply to each node.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tree</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utils.transform.map_nodes": {"fullname": "phml.utils.transform.map_nodes", "modulename": "phml.utils.transform", "qualname": "map_nodes", "type": "function", "doc": "<p>Takes a tree and a callable that returns a node and maps each node.</p>\n\n<p>Signature for the transform function should be as follows:</p>\n\n<ol>\n<li>Takes a single argument that is the node.</li>\n<li>Returns any type of node that is assigned to the original node.</li>\n</ol>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">to_links</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">Element</span><span class=\"p\">(</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">,</span> <span class=\"p\">{},</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"p\">,</span> <span class=\"n\">children</span><span class=\"o\">=</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">children</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;element&quot;</span>\n        <span class=\"k\">else</span> <span class=\"n\">node</span>\n</code></pre>\n</div>\n\n<p>Args:\n    tree (Root | Element): Tree to transform.\n    transform (Callable): The Callable that returns a node that is assigned\n    to each node.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tree</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span>,</span><span class=\"param\">\t<span class=\"n\">transform</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utils.transform.size": {"fullname": "phml.utils.transform.size", "modulename": "phml.utils.transform", "qualname": "size", "type": "function", "doc": "<p>Get the number of nodes recursively.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">Text</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">Comment</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">doctype</span><span class=\"o\">.</span><span class=\"n\">DocType</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">Parent</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">literal</span><span class=\"o\">.</span><span class=\"n\">Literal</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "phml.utils.travel": {"fullname": "phml.utils.travel", "modulename": "phml.utils.travel", "type": "module", "doc": "<p></p>\n"}, "phml.utils.travel.path": {"fullname": "phml.utils.travel.path", "modulename": "phml.utils.travel", "qualname": "path", "type": "function", "doc": "<p>Get a list of nodes where each one is a child of\nthe other leading to the node passed in. This gives a\npath to the node.</p>\n\n<p>Does not include given node.</p>\n\n<p>Args:\n    node (All_Nodes): Node to find ancestors of.</p>\n\n<p>Returns:\n    list[All_Nodes]: List of nodes leading to the given node\n    starting from the root.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">Text</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">Comment</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">doctype</span><span class=\"o\">.</span><span class=\"n\">DocType</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">Parent</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">literal</span><span class=\"o\">.</span><span class=\"n\">Literal</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">Text</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">Comment</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">doctype</span><span class=\"o\">.</span><span class=\"n\">DocType</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">Parent</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">literal</span><span class=\"o\">.</span><span class=\"n\">Literal</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.utils.travel.walk": {"fullname": "phml.utils.travel.walk", "modulename": "phml.utils.travel", "qualname": "walk", "type": "function", "doc": "<p>Recursively traverse the node and it's chidlren as an iterator.\nLeft to right depth first.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span>:</span></span>", "funcdef": "def"}, "phml.utils.travel.visit_children": {"fullname": "phml.utils.travel.visit_children", "modulename": "phml.utils.travel", "qualname": "visit_children", "type": "function", "doc": "<p>Traverse the children as an iterator.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span>:</span></span>", "funcdef": "def"}, "phml.utils.travel.visit_all_after": {"fullname": "phml.utils.travel.visit_all_after", "modulename": "phml.utils.travel", "qualname": "visit_all_after", "type": "function", "doc": "<p>Recursively traverse the tree starting at given node.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">Text</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">Comment</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">doctype</span><span class=\"o\">.</span><span class=\"n\">DocType</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">Parent</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">literal</span><span class=\"o\">.</span><span class=\"n\">Literal</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span>:</span></span>", "funcdef": "def"}, "phml.utils.validate": {"fullname": "phml.utils.validate", "modulename": "phml.utils.validate", "type": "module", "doc": "<p></p>\n"}, "phml.utils.validate.validate": {"fullname": "phml.utils.validate.validate", "modulename": "phml.utils.validate", "qualname": "validate", "type": "function", "doc": "<p>Validate a node based on attributes and type.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">Text</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">Comment</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">doctype</span><span class=\"o\">.</span><span class=\"n\">DocType</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">Parent</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">literal</span><span class=\"o\">.</span><span class=\"n\">Literal</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "phml.utils.validate.parent": {"fullname": "phml.utils.validate.parent", "modulename": "phml.utils.validate", "qualname": "parent", "type": "function", "doc": "<p>Validate a parent node based on attributes and type.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Root</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">Element</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "phml.utils.validate.literal": {"fullname": "phml.utils.validate.literal", "modulename": "phml.utils.validate", "qualname": "literal", "type": "function", "doc": "<p>Validate a literal node based on attributes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">Text</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">Comment</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}}, "docInfo": {"phml": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 1193}, "phml.ast": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.ast.AST": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "phml.ast.AST.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 3}, "phml.ast.AST.size": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "phml.ast.AST.inspect": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 10}, "phml.ast.AST.to_phml": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 10}, "phml.ast.AST.to_json": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 10}, "phml.ast.AST.to_html": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 11}, "phml.file_types": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "phml.nodes": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.nodes.Node": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 62}, "phml.nodes.Node.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 3}, "phml.nodes.Node.position": {"qualname": 2, "fullname": 4, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 34}, "phml.nodes.Node.type": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "phml.nodes.Root": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 37}, "phml.nodes.Root.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 67, "bases": 0, "doc": 3}, "phml.nodes.Root.as_dict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 9}, "phml.nodes.Root.tree": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 10}, "phml.nodes.Root.inspect": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 11}, "phml.nodes.Root.html": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 13}, "phml.nodes.Root.json": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 13}, "phml.nodes.Root.phml": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 21}, "phml.nodes.DocType": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 65}, "phml.nodes.DocType.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 109, "bases": 0, "doc": 3}, "phml.nodes.DocType.as_dict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 9}, "phml.nodes.DocType.tree": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 10}, "phml.nodes.DocType.inspect": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 11}, "phml.nodes.DocType.html": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 10}, "phml.nodes.DocType.json": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 10}, "phml.nodes.DocType.phml": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 20}, "phml.nodes.Parent": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 29}, "phml.nodes.Parent.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 67, "bases": 0, "doc": 3}, "phml.nodes.Element": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 340}, "phml.nodes.Element.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 189, "bases": 0, "doc": 3}, "phml.nodes.Element.start_tag": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 37}, "phml.nodes.Element.end_tag": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 17}, "phml.nodes.Element.as_dict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 8}, "phml.nodes.Element.tree": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 10}, "phml.nodes.Element.inspect": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 11}, "phml.nodes.Element.html": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 13}, "phml.nodes.Element.json": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 13}, "phml.nodes.Element.phml": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 21}, "phml.nodes.Literal": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 13}, "phml.nodes.Literal.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 120, "bases": 0, "doc": 3}, "phml.nodes.Literal.position": {"qualname": 2, "fullname": 4, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 34}, "phml.nodes.Literal.value": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "phml.nodes.Literal.as_dict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 9}, "phml.nodes.Literal.html": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 10}, "phml.nodes.Literal.json": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 10}, "phml.nodes.Comment": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 31}, "phml.nodes.Comment.tree": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 3}, "phml.nodes.Comment.inspect": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 11}, "phml.nodes.Comment.phml": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 18}, "phml.nodes.Text": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 177}, "phml.nodes.Text.tree": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 3}, "phml.nodes.Text.inspect": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 11}, "phml.nodes.Text.phml": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 18}, "phml.nodes.Position": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 151}, "phml.nodes.Position.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 80, "bases": 0, "doc": 3}, "phml.nodes.Point": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 52}, "phml.nodes.Point.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 3}, "phml.nodes.PropertyName": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 72}, "phml.nodes.PropertyName.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "phml.nodes.PropertyName.encode": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 68}, "phml.nodes.PropertyName.replace": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 50}, "phml.nodes.PropertyName.split": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 109}, "phml.nodes.PropertyName.rsplit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 97}, "phml.nodes.PropertyName.join": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 46}, "phml.nodes.PropertyName.capitalize": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 27}, "phml.nodes.PropertyName.casefold": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 13}, "phml.nodes.PropertyName.title": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 32}, "phml.nodes.PropertyName.center": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 25}, "phml.nodes.PropertyName.count": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 36}, "phml.nodes.PropertyName.expandtabs": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 30}, "phml.nodes.PropertyName.find": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 48}, "phml.nodes.PropertyName.partition": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 69}, "phml.nodes.PropertyName.index": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 52}, "phml.nodes.PropertyName.ljust": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 26}, "phml.nodes.PropertyName.lower": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 12}, "phml.nodes.PropertyName.lstrip": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 28}, "phml.nodes.PropertyName.rfind": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 48}, "phml.nodes.PropertyName.rindex": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 52}, "phml.nodes.PropertyName.rjust": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 26}, "phml.nodes.PropertyName.rstrip": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 28}, "phml.nodes.PropertyName.rpartition": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 73}, "phml.nodes.PropertyName.splitlines": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 34}, "phml.nodes.PropertyName.strip": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 30}, "phml.nodes.PropertyName.swapcase": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 13}, "phml.nodes.PropertyName.translate": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 66}, "phml.nodes.PropertyName.upper": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 12}, "phml.nodes.PropertyName.startswith": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 51}, "phml.nodes.PropertyName.endswith": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 51}, "phml.nodes.PropertyName.removeprefix": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 37}, "phml.nodes.PropertyName.removesuffix": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 44}, "phml.nodes.PropertyName.isascii": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 33}, "phml.nodes.PropertyName.islower": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 41}, "phml.nodes.PropertyName.isupper": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 41}, "phml.nodes.PropertyName.istitle": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 39}, "phml.nodes.PropertyName.isspace": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 39}, "phml.nodes.PropertyName.isdecimal": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 41}, "phml.nodes.PropertyName.isdigit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 41}, "phml.nodes.PropertyName.isnumeric": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 39}, "phml.nodes.PropertyName.isalpha": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 39}, "phml.nodes.PropertyName.isalnum": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 42}, "phml.nodes.PropertyName.isidentifier": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 36}, "phml.nodes.PropertyName.isprintable": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 34}, "phml.nodes.PropertyName.zfill": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 28}, "phml.nodes.PropertyName.format": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 34}, "phml.nodes.PropertyName.format_map": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 30}, "phml.nodes.PropertyName.maketrans": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 99}, "phml.parser": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "phml.parser.PHMLParser": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 14}, "phml.parser.PHMLParser.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 29}, "phml.parser.PHMLParser.cur": {"qualname": 2, "fullname": 4, "annotation": 10, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "phml.parser.PHMLParser.handle_decl": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "phml.parser.PHMLParser.handle_pi": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "phml.parser.PHMLParser.handle_starttag": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "phml.parser.PHMLParser.handle_startendtag": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "phml.parser.PHMLParser.handle_endtag": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "phml.parser.PHMLParser.handle_data": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "phml.parser.PHMLParser.handle_comment": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "phml.parser.Parser": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 107}, "phml.parser.Parser.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "phml.parser.Parser.parser": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "phml.parser.Parser.ast": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "phml.parser.Parser.parse": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 48}, "phml.parser.Parser.write": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 85, "bases": 0, "doc": 45}, "phml.parser.Parser.stringify": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 45}, "phml.utils": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.utils.find": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.utils.find.ancestor": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 358, "bases": 0, "doc": 48}, "phml.utils.find.find": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 271, "bases": 0, "doc": 51}, "phml.utils.find.find_after": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 404, "bases": 0, "doc": 47}, "phml.utils.find.find_all_after": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 398, "bases": 0, "doc": 52}, "phml.utils.find.find_before": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 404, "bases": 0, "doc": 75}, "phml.utils.find.find_all_before": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 398, "bases": 0, "doc": 61}, "phml.utils.find.find_all_between": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 345, "bases": 0, "doc": 111}, "phml.utils.misc": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.utils.misc.depth": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 182, "bases": 0, "doc": 34}, "phml.utils.test": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.utils.test.test": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 314, "bases": 0, "doc": 183}, "phml.utils.transform": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.utils.transform.filter_nodes": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 94, "bases": 0, "doc": 80}, "phml.utils.transform.remove_nodes": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 94, "bases": 0, "doc": 65}, "phml.utils.transform.map_nodes": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 64, "bases": 0, "doc": 188}, "phml.utils.transform.size": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 182, "bases": 0, "doc": 9}, "phml.utils.travel": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.utils.travel.path": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 350, "bases": 0, "doc": 69}, "phml.utils.travel.walk": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 19}, "phml.utils.travel.visit_children": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 9}, "phml.utils.travel.visit_all_after": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 182, "bases": 0, "doc": 11}, "phml.utils.validate": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.utils.validate.validate": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 182, "bases": 0, "doc": 11}, "phml.utils.validate.parent": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 12}, "phml.utils.validate.literal": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 10}}, "length": 156, "save": true}, "index": {"qualname": {"root": {"docs": {"phml.ast.AST.__init__": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Root.__init__": {"tf": 1}, "phml.nodes.DocType.__init__": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}, "phml.nodes.Point.__init__": {"tf": 1}, "phml.nodes.PropertyName.__init__": {"tf": 1}, "phml.parser.PHMLParser.__init__": {"tf": 1}, "phml.parser.Parser.__init__": {"tf": 1}}, "df": 12, "a": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.Root.as_dict": {"tf": 1}, "phml.nodes.DocType.as_dict": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}}, "df": 4, "t": {"docs": {"phml.ast.AST": {"tf": 1}, "phml.ast.AST.__init__": {"tf": 1}, "phml.ast.AST.size": {"tf": 1}, "phml.ast.AST.inspect": {"tf": 1}, "phml.ast.AST.to_phml": {"tf": 1}, "phml.ast.AST.to_json": {"tf": 1}, "phml.ast.AST.to_html": {"tf": 1}, "phml.parser.Parser.ast": {"tf": 1}}, "df": 8}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.utils.find.ancestor": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.travel.visit_all_after": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.travel.visit_all_after": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.ast.AST.__init__": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Root.__init__": {"tf": 1}, "phml.nodes.DocType.__init__": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}, "phml.nodes.Point.__init__": {"tf": 1}, "phml.nodes.PropertyName.__init__": {"tf": 1}, "phml.parser.PHMLParser.__init__": {"tf": 1}, "phml.parser.Parser.__init__": {"tf": 1}}, "df": 12}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.ast.AST.inspect": {"tf": 1}, "phml.nodes.Root.inspect": {"tf": 1}, "phml.nodes.DocType.inspect": {"tf": 1}, "phml.nodes.Element.inspect": {"tf": 1}, "phml.nodes.Comment.inspect": {"tf": 1}, "phml.nodes.Text.inspect": {"tf": 1}}, "df": 6}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"phml.nodes.PropertyName.index": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"phml.nodes.PropertyName.isascii": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"phml.nodes.PropertyName.isalpha": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"phml.nodes.PropertyName.isalnum": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.islower": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.isupper": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.istitle": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.isspace": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.PropertyName.isdecimal": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.isdigit": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"phml.nodes.PropertyName.isnumeric": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.isidentifier": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.isprintable": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.ast.AST.size": {"tf": 1}, "phml.utils.transform.size": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Element.start_tag": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.nodes.PropertyName.startswith": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"phml.parser.PHMLParser.handle_starttag": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"phml.parser.PHMLParser.handle_startendtag": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"phml.nodes.PropertyName.strip": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"phml.parser.Parser.stringify": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.PropertyName.splitlines": {"tf": 1}}, "df": 1}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.swapcase": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"phml.ast.AST.to_phml": {"tf": 1}, "phml.ast.AST.to_json": {"tf": 1}, "phml.ast.AST.to_html": {"tf": 1}}, "df": 3}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Node.type": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Root.tree": {"tf": 1}, "phml.nodes.DocType.tree": {"tf": 1}, "phml.nodes.Element.tree": {"tf": 1}, "phml.nodes.Comment.tree": {"tf": 1}, "phml.nodes.Text.tree": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.translate": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.Element.start_tag": {"tf": 1}, "phml.nodes.Element.end_tag": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Text": {"tf": 1}, "phml.nodes.Text.tree": {"tf": 1}, "phml.nodes.Text.inspect": {"tf": 1}, "phml.nodes.Text.phml": {"tf": 1}}, "df": 4}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.utils.test.test": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.title": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"phml.ast.AST.to_phml": {"tf": 1}, "phml.nodes.Root.phml": {"tf": 1}, "phml.nodes.DocType.phml": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1}, "phml.nodes.Comment.phml": {"tf": 1}, "phml.nodes.Text.phml": {"tf": 1}}, "df": 6, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.parser.PHMLParser": {"tf": 1}, "phml.parser.PHMLParser.__init__": {"tf": 1}, "phml.parser.PHMLParser.cur": {"tf": 1}, "phml.parser.PHMLParser.handle_decl": {"tf": 1}, "phml.parser.PHMLParser.handle_pi": {"tf": 1}, "phml.parser.PHMLParser.handle_starttag": {"tf": 1}, "phml.parser.PHMLParser.handle_startendtag": {"tf": 1}, "phml.parser.PHMLParser.handle_endtag": {"tf": 1}, "phml.parser.PHMLParser.handle_data": {"tf": 1}, "phml.parser.PHMLParser.handle_comment": {"tf": 1}}, "df": 10}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Literal.position": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Point": {"tf": 1}, "phml.nodes.Point.__init__": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Parent": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.utils.validate.parent": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.PropertyName.partition": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.Parser.parse": {"tf": 1}}, "df": 1, "r": {"docs": {"phml.parser.Parser": {"tf": 1}, "phml.parser.Parser.__init__": {"tf": 1}, "phml.parser.Parser.parser": {"tf": 1.4142135623730951}, "phml.parser.Parser.ast": {"tf": 1}, "phml.parser.Parser.parse": {"tf": 1}, "phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}}, "df": 7}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.utils.travel.path": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.__init__": {"tf": 1}, "phml.nodes.PropertyName.encode": {"tf": 1}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.join": {"tf": 1}, "phml.nodes.PropertyName.capitalize": {"tf": 1}, "phml.nodes.PropertyName.casefold": {"tf": 1}, "phml.nodes.PropertyName.title": {"tf": 1}, "phml.nodes.PropertyName.center": {"tf": 1}, "phml.nodes.PropertyName.count": {"tf": 1}, "phml.nodes.PropertyName.expandtabs": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.lower": {"tf": 1}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.nodes.PropertyName.splitlines": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.nodes.PropertyName.swapcase": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.upper": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}, "phml.nodes.PropertyName.removeprefix": {"tf": 1}, "phml.nodes.PropertyName.removesuffix": {"tf": 1}, "phml.nodes.PropertyName.isascii": {"tf": 1}, "phml.nodes.PropertyName.islower": {"tf": 1}, "phml.nodes.PropertyName.isupper": {"tf": 1}, "phml.nodes.PropertyName.istitle": {"tf": 1}, "phml.nodes.PropertyName.isspace": {"tf": 1}, "phml.nodes.PropertyName.isdecimal": {"tf": 1}, "phml.nodes.PropertyName.isdigit": {"tf": 1}, "phml.nodes.PropertyName.isnumeric": {"tf": 1}, "phml.nodes.PropertyName.isalpha": {"tf": 1}, "phml.nodes.PropertyName.isalnum": {"tf": 1}, "phml.nodes.PropertyName.isidentifier": {"tf": 1}, "phml.nodes.PropertyName.isprintable": {"tf": 1}, "phml.nodes.PropertyName.zfill": {"tf": 1}, "phml.nodes.PropertyName.format": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}}, "df": 49}}}}}}}}}}}, "i": {"docs": {"phml.parser.PHMLParser.handle_pi": {"tf": 1}}, "df": 1}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.ast.AST.to_json": {"tf": 1}, "phml.nodes.Root.json": {"tf": 1}, "phml.nodes.DocType.json": {"tf": 1}, "phml.nodes.Element.json": {"tf": 1}, "phml.nodes.Literal.json": {"tf": 1}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.PropertyName.join": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"phml.ast.AST.to_html": {"tf": 1}, "phml.nodes.Root.html": {"tf": 1}, "phml.nodes.DocType.html": {"tf": 1}, "phml.nodes.Element.html": {"tf": 1}, "phml.nodes.Literal.html": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.PHMLParser.handle_decl": {"tf": 1}, "phml.parser.PHMLParser.handle_pi": {"tf": 1}, "phml.parser.PHMLParser.handle_starttag": {"tf": 1}, "phml.parser.PHMLParser.handle_startendtag": {"tf": 1}, "phml.parser.PHMLParser.handle_endtag": {"tf": 1}, "phml.parser.PHMLParser.handle_data": {"tf": 1}, "phml.parser.PHMLParser.handle_comment": {"tf": 1}}, "df": 7}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Node": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Node.type": {"tf": 1}}, "df": 4, "s": {"docs": {"phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Root": {"tf": 1}, "phml.nodes.Root.__init__": {"tf": 1}, "phml.nodes.Root.as_dict": {"tf": 1}, "phml.nodes.Root.tree": {"tf": 1}, "phml.nodes.Root.inspect": {"tf": 1}, "phml.nodes.Root.html": {"tf": 1}, "phml.nodes.Root.json": {"tf": 1}, "phml.nodes.Root.phml": {"tf": 1}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.replace": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml.utils.transform.remove_nodes": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"phml.nodes.PropertyName.removeprefix": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"phml.nodes.PropertyName.removesuffix": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.rsplit": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"phml.nodes.PropertyName.rstrip": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.rfind": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"phml.nodes.PropertyName.rindex": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.rjust": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.PropertyName.rpartition": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Root.as_dict": {"tf": 1}, "phml.nodes.DocType.as_dict": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.DocType": {"tf": 1}, "phml.nodes.DocType.__init__": {"tf": 1}, "phml.nodes.DocType.as_dict": {"tf": 1}, "phml.nodes.DocType.tree": {"tf": 1}, "phml.nodes.DocType.inspect": {"tf": 1}, "phml.nodes.DocType.html": {"tf": 1}, "phml.nodes.DocType.json": {"tf": 1}, "phml.nodes.DocType.phml": {"tf": 1}}, "df": 8}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {"phml.parser.PHMLParser.handle_decl": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.utils.misc.depth": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"phml.parser.PHMLParser.handle_data": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Element": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Element.start_tag": {"tf": 1}, "phml.nodes.Element.end_tag": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Element.tree": {"tf": 1}, "phml.nodes.Element.inspect": {"tf": 1}, "phml.nodes.Element.html": {"tf": 1}, "phml.nodes.Element.json": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1}}, "df": 10}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Element.end_tag": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.nodes.PropertyName.endswith": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"phml.parser.PHMLParser.handle_endtag": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.PropertyName.expandtabs": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.Literal": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.nodes.Literal.position": {"tf": 1}, "phml.nodes.Literal.value": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}, "phml.nodes.Literal.html": {"tf": 1}, "phml.nodes.Literal.json": {"tf": 1}, "phml.utils.validate.literal": {"tf": 1}}, "df": 8}}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.ljust": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.lower": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"phml.nodes.PropertyName.lstrip": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Literal.value": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.utils.validate.validate": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.utils.travel.visit_children": {"tf": 1}, "phml.utils.travel.visit_all_after": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Comment": {"tf": 1}, "phml.nodes.Comment.tree": {"tf": 1}, "phml.nodes.Comment.inspect": {"tf": 1}, "phml.nodes.Comment.phml": {"tf": 1}, "phml.parser.PHMLParser.handle_comment": {"tf": 1}}, "df": 5}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.count": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.capitalize": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.casefold": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.center": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {"phml.parser.PHMLParser.cur": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.utils.travel.visit_children": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.find": {"tf": 1}, "phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}}, "df": 7}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.utils.transform.filter_nodes": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.format": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.upper": {"tf": 1}}, "df": 1}}}}}, "z": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.PropertyName.zfill": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"phml.nodes.PropertyName.format_map": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1}}, "df": 2}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.PropertyName.maketrans": {"tf": 1}}, "df": 1}}}}}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.Parser.write": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"phml.utils.travel.walk": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.utils.find.find_all_between": {"tf": 1}}, "df": 1}}}}}}}}}, "fullname": {"root": {"docs": {"phml.ast.AST.__init__": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Root.__init__": {"tf": 1}, "phml.nodes.DocType.__init__": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}, "phml.nodes.Point.__init__": {"tf": 1}, "phml.nodes.PropertyName.__init__": {"tf": 1}, "phml.parser.PHMLParser.__init__": {"tf": 1}, "phml.parser.Parser.__init__": {"tf": 1}}, "df": 12, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1}, "phml.ast": {"tf": 1}, "phml.ast.AST": {"tf": 1}, "phml.ast.AST.__init__": {"tf": 1}, "phml.ast.AST.size": {"tf": 1}, "phml.ast.AST.inspect": {"tf": 1}, "phml.ast.AST.to_phml": {"tf": 1.4142135623730951}, "phml.ast.AST.to_json": {"tf": 1}, "phml.ast.AST.to_html": {"tf": 1}, "phml.file_types": {"tf": 1}, "phml.nodes": {"tf": 1}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Root": {"tf": 1}, "phml.nodes.Root.__init__": {"tf": 1}, "phml.nodes.Root.as_dict": {"tf": 1}, "phml.nodes.Root.tree": {"tf": 1}, "phml.nodes.Root.inspect": {"tf": 1}, "phml.nodes.Root.html": {"tf": 1}, "phml.nodes.Root.json": {"tf": 1}, "phml.nodes.Root.phml": {"tf": 1.4142135623730951}, "phml.nodes.DocType": {"tf": 1}, "phml.nodes.DocType.__init__": {"tf": 1}, "phml.nodes.DocType.as_dict": {"tf": 1}, "phml.nodes.DocType.tree": {"tf": 1}, "phml.nodes.DocType.inspect": {"tf": 1}, "phml.nodes.DocType.html": {"tf": 1}, "phml.nodes.DocType.json": {"tf": 1}, "phml.nodes.DocType.phml": {"tf": 1.4142135623730951}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Element.start_tag": {"tf": 1}, "phml.nodes.Element.end_tag": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Element.tree": {"tf": 1}, "phml.nodes.Element.inspect": {"tf": 1}, "phml.nodes.Element.html": {"tf": 1}, "phml.nodes.Element.json": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1.4142135623730951}, "phml.nodes.Literal": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.nodes.Literal.position": {"tf": 1}, "phml.nodes.Literal.value": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}, "phml.nodes.Literal.html": {"tf": 1}, "phml.nodes.Literal.json": {"tf": 1}, "phml.nodes.Comment": {"tf": 1}, "phml.nodes.Comment.tree": {"tf": 1}, "phml.nodes.Comment.inspect": {"tf": 1}, "phml.nodes.Comment.phml": {"tf": 1.4142135623730951}, "phml.nodes.Text": {"tf": 1}, "phml.nodes.Text.tree": {"tf": 1}, "phml.nodes.Text.inspect": {"tf": 1}, "phml.nodes.Text.phml": {"tf": 1.4142135623730951}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}, "phml.nodes.Point": {"tf": 1}, "phml.nodes.Point.__init__": {"tf": 1}, "phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.__init__": {"tf": 1}, "phml.nodes.PropertyName.encode": {"tf": 1}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.join": {"tf": 1}, "phml.nodes.PropertyName.capitalize": {"tf": 1}, "phml.nodes.PropertyName.casefold": {"tf": 1}, "phml.nodes.PropertyName.title": {"tf": 1}, "phml.nodes.PropertyName.center": {"tf": 1}, "phml.nodes.PropertyName.count": {"tf": 1}, "phml.nodes.PropertyName.expandtabs": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.lower": {"tf": 1}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.nodes.PropertyName.splitlines": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.nodes.PropertyName.swapcase": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.upper": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}, "phml.nodes.PropertyName.removeprefix": {"tf": 1}, "phml.nodes.PropertyName.removesuffix": {"tf": 1}, "phml.nodes.PropertyName.isascii": {"tf": 1}, "phml.nodes.PropertyName.islower": {"tf": 1}, "phml.nodes.PropertyName.isupper": {"tf": 1}, "phml.nodes.PropertyName.istitle": {"tf": 1}, "phml.nodes.PropertyName.isspace": {"tf": 1}, "phml.nodes.PropertyName.isdecimal": {"tf": 1}, "phml.nodes.PropertyName.isdigit": {"tf": 1}, "phml.nodes.PropertyName.isnumeric": {"tf": 1}, "phml.nodes.PropertyName.isalpha": {"tf": 1}, "phml.nodes.PropertyName.isalnum": {"tf": 1}, "phml.nodes.PropertyName.isidentifier": {"tf": 1}, "phml.nodes.PropertyName.isprintable": {"tf": 1}, "phml.nodes.PropertyName.zfill": {"tf": 1}, "phml.nodes.PropertyName.format": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}, "phml.parser": {"tf": 1}, "phml.parser.PHMLParser": {"tf": 1}, "phml.parser.PHMLParser.__init__": {"tf": 1}, "phml.parser.PHMLParser.cur": {"tf": 1}, "phml.parser.PHMLParser.handle_decl": {"tf": 1}, "phml.parser.PHMLParser.handle_pi": {"tf": 1}, "phml.parser.PHMLParser.handle_starttag": {"tf": 1}, "phml.parser.PHMLParser.handle_startendtag": {"tf": 1}, "phml.parser.PHMLParser.handle_endtag": {"tf": 1}, "phml.parser.PHMLParser.handle_data": {"tf": 1}, "phml.parser.PHMLParser.handle_comment": {"tf": 1}, "phml.parser.Parser": {"tf": 1}, "phml.parser.Parser.__init__": {"tf": 1}, "phml.parser.Parser.parser": {"tf": 1}, "phml.parser.Parser.ast": {"tf": 1}, "phml.parser.Parser.parse": {"tf": 1}, "phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}, "phml.utils": {"tf": 1}, "phml.utils.find": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 1}, "phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.misc": {"tf": 1}, "phml.utils.misc.depth": {"tf": 1}, "phml.utils.test": {"tf": 1}, "phml.utils.test.test": {"tf": 1}, "phml.utils.transform": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1}, "phml.utils.transform.size": {"tf": 1}, "phml.utils.travel": {"tf": 1}, "phml.utils.travel.path": {"tf": 1}, "phml.utils.travel.walk": {"tf": 1}, "phml.utils.travel.visit_children": {"tf": 1}, "phml.utils.travel.visit_all_after": {"tf": 1}, "phml.utils.validate": {"tf": 1}, "phml.utils.validate.validate": {"tf": 1}, "phml.utils.validate.parent": {"tf": 1}, "phml.utils.validate.literal": {"tf": 1}}, "df": 156, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.parser.PHMLParser": {"tf": 1}, "phml.parser.PHMLParser.__init__": {"tf": 1}, "phml.parser.PHMLParser.cur": {"tf": 1}, "phml.parser.PHMLParser.handle_decl": {"tf": 1}, "phml.parser.PHMLParser.handle_pi": {"tf": 1}, "phml.parser.PHMLParser.handle_starttag": {"tf": 1}, "phml.parser.PHMLParser.handle_startendtag": {"tf": 1}, "phml.parser.PHMLParser.handle_endtag": {"tf": 1}, "phml.parser.PHMLParser.handle_data": {"tf": 1}, "phml.parser.PHMLParser.handle_comment": {"tf": 1}}, "df": 10}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Literal.position": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Point": {"tf": 1}, "phml.nodes.Point.__init__": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Parent": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.utils.validate.parent": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.PropertyName.partition": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.Parser.parse": {"tf": 1}}, "df": 1, "r": {"docs": {"phml.parser": {"tf": 1}, "phml.parser.PHMLParser": {"tf": 1}, "phml.parser.PHMLParser.__init__": {"tf": 1}, "phml.parser.PHMLParser.cur": {"tf": 1}, "phml.parser.PHMLParser.handle_decl": {"tf": 1}, "phml.parser.PHMLParser.handle_pi": {"tf": 1}, "phml.parser.PHMLParser.handle_starttag": {"tf": 1}, "phml.parser.PHMLParser.handle_startendtag": {"tf": 1}, "phml.parser.PHMLParser.handle_endtag": {"tf": 1}, "phml.parser.PHMLParser.handle_data": {"tf": 1}, "phml.parser.PHMLParser.handle_comment": {"tf": 1}, "phml.parser.Parser": {"tf": 1.4142135623730951}, "phml.parser.Parser.__init__": {"tf": 1.4142135623730951}, "phml.parser.Parser.parser": {"tf": 1.7320508075688772}, "phml.parser.Parser.ast": {"tf": 1.4142135623730951}, "phml.parser.Parser.parse": {"tf": 1.4142135623730951}, "phml.parser.Parser.write": {"tf": 1.4142135623730951}, "phml.parser.Parser.stringify": {"tf": 1.4142135623730951}}, "df": 18}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.utils.travel.path": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.__init__": {"tf": 1}, "phml.nodes.PropertyName.encode": {"tf": 1}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.join": {"tf": 1}, "phml.nodes.PropertyName.capitalize": {"tf": 1}, "phml.nodes.PropertyName.casefold": {"tf": 1}, "phml.nodes.PropertyName.title": {"tf": 1}, "phml.nodes.PropertyName.center": {"tf": 1}, "phml.nodes.PropertyName.count": {"tf": 1}, "phml.nodes.PropertyName.expandtabs": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.lower": {"tf": 1}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.nodes.PropertyName.splitlines": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.nodes.PropertyName.swapcase": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.upper": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}, "phml.nodes.PropertyName.removeprefix": {"tf": 1}, "phml.nodes.PropertyName.removesuffix": {"tf": 1}, "phml.nodes.PropertyName.isascii": {"tf": 1}, "phml.nodes.PropertyName.islower": {"tf": 1}, "phml.nodes.PropertyName.isupper": {"tf": 1}, "phml.nodes.PropertyName.istitle": {"tf": 1}, "phml.nodes.PropertyName.isspace": {"tf": 1}, "phml.nodes.PropertyName.isdecimal": {"tf": 1}, "phml.nodes.PropertyName.isdigit": {"tf": 1}, "phml.nodes.PropertyName.isnumeric": {"tf": 1}, "phml.nodes.PropertyName.isalpha": {"tf": 1}, "phml.nodes.PropertyName.isalnum": {"tf": 1}, "phml.nodes.PropertyName.isidentifier": {"tf": 1}, "phml.nodes.PropertyName.isprintable": {"tf": 1}, "phml.nodes.PropertyName.zfill": {"tf": 1}, "phml.nodes.PropertyName.format": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}}, "df": 49}}}}}}}}}}}, "i": {"docs": {"phml.parser.PHMLParser.handle_pi": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.Root.as_dict": {"tf": 1}, "phml.nodes.DocType.as_dict": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}}, "df": 4, "t": {"docs": {"phml.ast": {"tf": 1}, "phml.ast.AST": {"tf": 1.4142135623730951}, "phml.ast.AST.__init__": {"tf": 1.4142135623730951}, "phml.ast.AST.size": {"tf": 1.4142135623730951}, "phml.ast.AST.inspect": {"tf": 1.4142135623730951}, "phml.ast.AST.to_phml": {"tf": 1.4142135623730951}, "phml.ast.AST.to_json": {"tf": 1.4142135623730951}, "phml.ast.AST.to_html": {"tf": 1.4142135623730951}, "phml.parser.Parser.ast": {"tf": 1}}, "df": 9}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.utils.find.ancestor": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.travel.visit_all_after": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.travel.visit_all_after": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.ast.AST.__init__": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Root.__init__": {"tf": 1}, "phml.nodes.DocType.__init__": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}, "phml.nodes.Point.__init__": {"tf": 1}, "phml.nodes.PropertyName.__init__": {"tf": 1}, "phml.parser.PHMLParser.__init__": {"tf": 1}, "phml.parser.Parser.__init__": {"tf": 1}}, "df": 12}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.ast.AST.inspect": {"tf": 1}, "phml.nodes.Root.inspect": {"tf": 1}, "phml.nodes.DocType.inspect": {"tf": 1}, "phml.nodes.Element.inspect": {"tf": 1}, "phml.nodes.Comment.inspect": {"tf": 1}, "phml.nodes.Text.inspect": {"tf": 1}}, "df": 6}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"phml.nodes.PropertyName.index": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"phml.nodes.PropertyName.isascii": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"phml.nodes.PropertyName.isalpha": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"phml.nodes.PropertyName.isalnum": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.islower": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.isupper": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.istitle": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.isspace": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.PropertyName.isdecimal": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.isdigit": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"phml.nodes.PropertyName.isnumeric": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.isidentifier": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.isprintable": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.ast.AST.size": {"tf": 1}, "phml.utils.transform.size": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Element.start_tag": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.nodes.PropertyName.startswith": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"phml.parser.PHMLParser.handle_starttag": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"phml.parser.PHMLParser.handle_startendtag": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"phml.nodes.PropertyName.strip": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"phml.parser.Parser.stringify": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.PropertyName.splitlines": {"tf": 1}}, "df": 1}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.swapcase": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"phml.ast.AST.to_phml": {"tf": 1}, "phml.ast.AST.to_json": {"tf": 1}, "phml.ast.AST.to_html": {"tf": 1}}, "df": 3}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Node.type": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.file_types": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Root.tree": {"tf": 1}, "phml.nodes.DocType.tree": {"tf": 1}, "phml.nodes.Element.tree": {"tf": 1}, "phml.nodes.Comment.tree": {"tf": 1}, "phml.nodes.Text.tree": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.translate": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"phml.utils.transform": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1}, "phml.utils.transform.size": {"tf": 1}}, "df": 5}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"phml.utils.travel": {"tf": 1}, "phml.utils.travel.path": {"tf": 1}, "phml.utils.travel.walk": {"tf": 1}, "phml.utils.travel.visit_children": {"tf": 1}, "phml.utils.travel.visit_all_after": {"tf": 1}}, "df": 5}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.Element.start_tag": {"tf": 1}, "phml.nodes.Element.end_tag": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Text": {"tf": 1}, "phml.nodes.Text.tree": {"tf": 1}, "phml.nodes.Text.inspect": {"tf": 1}, "phml.nodes.Text.phml": {"tf": 1}}, "df": 4}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.utils.test": {"tf": 1}, "phml.utils.test.test": {"tf": 1.4142135623730951}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.title": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.ast.AST.to_json": {"tf": 1}, "phml.nodes.Root.json": {"tf": 1}, "phml.nodes.DocType.json": {"tf": 1}, "phml.nodes.Element.json": {"tf": 1}, "phml.nodes.Literal.json": {"tf": 1}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.PropertyName.join": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"phml.ast.AST.to_html": {"tf": 1}, "phml.nodes.Root.html": {"tf": 1}, "phml.nodes.DocType.html": {"tf": 1}, "phml.nodes.Element.html": {"tf": 1}, "phml.nodes.Literal.html": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.PHMLParser.handle_decl": {"tf": 1}, "phml.parser.PHMLParser.handle_pi": {"tf": 1}, "phml.parser.PHMLParser.handle_starttag": {"tf": 1}, "phml.parser.PHMLParser.handle_startendtag": {"tf": 1}, "phml.parser.PHMLParser.handle_endtag": {"tf": 1}, "phml.parser.PHMLParser.handle_data": {"tf": 1}, "phml.parser.PHMLParser.handle_comment": {"tf": 1}}, "df": 7}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.file_types": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.utils.transform.filter_nodes": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.find": {"tf": 1}, "phml.utils.find": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 1}, "phml.utils.find.find": {"tf": 1.4142135623730951}, "phml.utils.find.find_after": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_after": {"tf": 1.4142135623730951}, "phml.utils.find.find_before": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_before": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_between": {"tf": 1.4142135623730951}}, "df": 9}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.format": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Node": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Node.type": {"tf": 1}}, "df": 4, "s": {"docs": {"phml.nodes": {"tf": 1}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Root": {"tf": 1}, "phml.nodes.Root.__init__": {"tf": 1}, "phml.nodes.Root.as_dict": {"tf": 1}, "phml.nodes.Root.tree": {"tf": 1}, "phml.nodes.Root.inspect": {"tf": 1}, "phml.nodes.Root.html": {"tf": 1}, "phml.nodes.Root.json": {"tf": 1}, "phml.nodes.Root.phml": {"tf": 1}, "phml.nodes.DocType": {"tf": 1}, "phml.nodes.DocType.__init__": {"tf": 1}, "phml.nodes.DocType.as_dict": {"tf": 1}, "phml.nodes.DocType.tree": {"tf": 1}, "phml.nodes.DocType.inspect": {"tf": 1}, "phml.nodes.DocType.html": {"tf": 1}, "phml.nodes.DocType.json": {"tf": 1}, "phml.nodes.DocType.phml": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Element.start_tag": {"tf": 1}, "phml.nodes.Element.end_tag": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Element.tree": {"tf": 1}, "phml.nodes.Element.inspect": {"tf": 1}, "phml.nodes.Element.html": {"tf": 1}, "phml.nodes.Element.json": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1}, "phml.nodes.Literal": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.nodes.Literal.position": {"tf": 1}, "phml.nodes.Literal.value": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}, "phml.nodes.Literal.html": {"tf": 1}, "phml.nodes.Literal.json": {"tf": 1}, "phml.nodes.Comment": {"tf": 1}, "phml.nodes.Comment.tree": {"tf": 1}, "phml.nodes.Comment.inspect": {"tf": 1}, "phml.nodes.Comment.phml": {"tf": 1}, "phml.nodes.Text": {"tf": 1}, "phml.nodes.Text.tree": {"tf": 1}, "phml.nodes.Text.inspect": {"tf": 1}, "phml.nodes.Text.phml": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}, "phml.nodes.Point": {"tf": 1}, "phml.nodes.Point.__init__": {"tf": 1}, "phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.__init__": {"tf": 1}, "phml.nodes.PropertyName.encode": {"tf": 1}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.join": {"tf": 1}, "phml.nodes.PropertyName.capitalize": {"tf": 1}, "phml.nodes.PropertyName.casefold": {"tf": 1}, "phml.nodes.PropertyName.title": {"tf": 1}, "phml.nodes.PropertyName.center": {"tf": 1}, "phml.nodes.PropertyName.count": {"tf": 1}, "phml.nodes.PropertyName.expandtabs": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.lower": {"tf": 1}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.nodes.PropertyName.splitlines": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.nodes.PropertyName.swapcase": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.upper": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}, "phml.nodes.PropertyName.removeprefix": {"tf": 1}, "phml.nodes.PropertyName.removesuffix": {"tf": 1}, "phml.nodes.PropertyName.isascii": {"tf": 1}, "phml.nodes.PropertyName.islower": {"tf": 1}, "phml.nodes.PropertyName.isupper": {"tf": 1}, "phml.nodes.PropertyName.istitle": {"tf": 1}, "phml.nodes.PropertyName.isspace": {"tf": 1}, "phml.nodes.PropertyName.isdecimal": {"tf": 1}, "phml.nodes.PropertyName.isdigit": {"tf": 1}, "phml.nodes.PropertyName.isnumeric": {"tf": 1}, "phml.nodes.PropertyName.isalpha": {"tf": 1}, "phml.nodes.PropertyName.isalnum": {"tf": 1}, "phml.nodes.PropertyName.isidentifier": {"tf": 1}, "phml.nodes.PropertyName.isprintable": {"tf": 1}, "phml.nodes.PropertyName.zfill": {"tf": 1}, "phml.nodes.PropertyName.format": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1}}, "df": 104}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Root": {"tf": 1}, "phml.nodes.Root.__init__": {"tf": 1}, "phml.nodes.Root.as_dict": {"tf": 1}, "phml.nodes.Root.tree": {"tf": 1}, "phml.nodes.Root.inspect": {"tf": 1}, "phml.nodes.Root.html": {"tf": 1}, "phml.nodes.Root.json": {"tf": 1}, "phml.nodes.Root.phml": {"tf": 1}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.replace": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml.utils.transform.remove_nodes": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"phml.nodes.PropertyName.removeprefix": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"phml.nodes.PropertyName.removesuffix": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.rsplit": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"phml.nodes.PropertyName.rstrip": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.rfind": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"phml.nodes.PropertyName.rindex": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.rjust": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.PropertyName.rpartition": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Root.as_dict": {"tf": 1}, "phml.nodes.DocType.as_dict": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.DocType": {"tf": 1}, "phml.nodes.DocType.__init__": {"tf": 1}, "phml.nodes.DocType.as_dict": {"tf": 1}, "phml.nodes.DocType.tree": {"tf": 1}, "phml.nodes.DocType.inspect": {"tf": 1}, "phml.nodes.DocType.html": {"tf": 1}, "phml.nodes.DocType.json": {"tf": 1}, "phml.nodes.DocType.phml": {"tf": 1}}, "df": 8}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {"phml.parser.PHMLParser.handle_decl": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.utils.misc.depth": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"phml.parser.PHMLParser.handle_data": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Element": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Element.start_tag": {"tf": 1}, "phml.nodes.Element.end_tag": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Element.tree": {"tf": 1}, "phml.nodes.Element.inspect": {"tf": 1}, "phml.nodes.Element.html": {"tf": 1}, "phml.nodes.Element.json": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1}}, "df": 10}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Element.end_tag": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.nodes.PropertyName.endswith": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"phml.parser.PHMLParser.handle_endtag": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.PropertyName.expandtabs": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.Literal": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.nodes.Literal.position": {"tf": 1}, "phml.nodes.Literal.value": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}, "phml.nodes.Literal.html": {"tf": 1}, "phml.nodes.Literal.json": {"tf": 1}, "phml.utils.validate.literal": {"tf": 1}}, "df": 8}}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.ljust": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.lower": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"phml.nodes.PropertyName.lstrip": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Literal.value": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.utils.validate": {"tf": 1}, "phml.utils.validate.validate": {"tf": 1.4142135623730951}, "phml.utils.validate.parent": {"tf": 1}, "phml.utils.validate.literal": {"tf": 1}}, "df": 4}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.utils.travel.visit_children": {"tf": 1}, "phml.utils.travel.visit_all_after": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Comment": {"tf": 1}, "phml.nodes.Comment.tree": {"tf": 1}, "phml.nodes.Comment.inspect": {"tf": 1}, "phml.nodes.Comment.phml": {"tf": 1}, "phml.parser.PHMLParser.handle_comment": {"tf": 1}}, "df": 5}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.count": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.capitalize": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.casefold": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.center": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {"phml.parser.PHMLParser.cur": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.utils.travel.visit_children": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.upper": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"phml.utils": {"tf": 1}, "phml.utils.find": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 1}, "phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.misc": {"tf": 1}, "phml.utils.misc.depth": {"tf": 1}, "phml.utils.test": {"tf": 1}, "phml.utils.test.test": {"tf": 1}, "phml.utils.transform": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1}, "phml.utils.transform.size": {"tf": 1}, "phml.utils.travel": {"tf": 1}, "phml.utils.travel.path": {"tf": 1}, "phml.utils.travel.walk": {"tf": 1}, "phml.utils.travel.visit_children": {"tf": 1}, "phml.utils.travel.visit_all_after": {"tf": 1}, "phml.utils.validate": {"tf": 1}, "phml.utils.validate.validate": {"tf": 1}, "phml.utils.validate.parent": {"tf": 1}, "phml.utils.validate.literal": {"tf": 1}}, "df": 27}}}}}, "z": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.PropertyName.zfill": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"phml.nodes.PropertyName.format_map": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1}}, "df": 2}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.PropertyName.maketrans": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {"phml.utils.misc": {"tf": 1}, "phml.utils.misc.depth": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.Parser.write": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"phml.utils.travel.walk": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.utils.find.find_all_between": {"tf": 1}}, "df": 1}}}}}}}}}, "annotation": {"root": {"docs": {"phml.ast.AST.size": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Literal.position": {"tf": 1}, "phml.nodes.Literal.value": {"tf": 1}, "phml.parser.PHMLParser.cur": {"tf": 1.4142135623730951}, "phml.parser.Parser.parser": {"tf": 1}, "phml.parser.Parser.ast": {"tf": 1}}, "df": 8, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.ast.AST.size": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Literal.position": {"tf": 1}, "phml.parser.PHMLParser.cur": {"tf": 1.4142135623730951}, "phml.parser.Parser.parser": {"tf": 1}, "phml.parser.Parser.ast": {"tf": 1}}, "df": 5, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.parser.Parser.parser": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Node.position": {"tf": 1.4142135623730951}, "phml.nodes.Literal.position": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.parser.Parser.parser": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Literal.position": {"tf": 1}, "phml.parser.PHMLParser.cur": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Literal.value": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"phml.parser.PHMLParser.cur": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.parser.PHMLParser.cur": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.parser.Parser.ast": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "default_value": {"root": {"docs": {}, "df": 0}}, "signature": {"root": {"0": {"docs": {"phml.nodes.Root.phml": {"tf": 1}, "phml.nodes.DocType.tree": {"tf": 1}, "phml.nodes.DocType.phml": {"tf": 1}, "phml.nodes.Element.tree": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1}, "phml.nodes.Comment.tree": {"tf": 1}, "phml.nodes.Comment.phml": {"tf": 1}, "phml.nodes.Text.tree": {"tf": 1}, "phml.nodes.Text.phml": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1.4142135623730951}}, "df": 10}, "1": {"docs": {"phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}}, "df": 3}, "2": {"docs": {"phml.nodes.Root.json": {"tf": 1}, "phml.nodes.DocType.json": {"tf": 1}, "phml.nodes.Element.json": {"tf": 1}, "phml.nodes.Literal.json": {"tf": 1}}, "df": 4}, "3": {"9": {"docs": {"phml.nodes.DocType.tree": {"tf": 1.4142135623730951}, "phml.nodes.Element.tree": {"tf": 1.4142135623730951}, "phml.nodes.Comment.tree": {"tf": 1.4142135623730951}, "phml.nodes.Text.tree": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.encode": {"tf": 2}, "phml.nodes.PropertyName.center": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.ljust": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rjust": {"tf": 1.4142135623730951}, "phml.parser.Parser.write": {"tf": 1.4142135623730951}, "phml.parser.Parser.stringify": {"tf": 1.4142135623730951}}, "df": 10}, "docs": {}, "df": 0}, "4": {"docs": {"phml.nodes.Root.html": {"tf": 1}, "phml.nodes.DocType.html": {"tf": 1}, "phml.nodes.Element.html": {"tf": 1}, "phml.nodes.Literal.html": {"tf": 1}}, "df": 4}, "8": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}, "phml.nodes.PropertyName.expandtabs": {"tf": 1}}, "df": 2}, "docs": {"phml.ast.AST.__init__": {"tf": 6.4031242374328485}, "phml.ast.AST.inspect": {"tf": 3.4641016151377544}, "phml.ast.AST.to_phml": {"tf": 3.4641016151377544}, "phml.ast.AST.to_json": {"tf": 3.4641016151377544}, "phml.ast.AST.to_html": {"tf": 3.4641016151377544}, "phml.nodes.Node.__init__": {"tf": 5.916079783099616}, "phml.nodes.Root.__init__": {"tf": 7.483314773547883}, "phml.nodes.Root.as_dict": {"tf": 3.4641016151377544}, "phml.nodes.Root.tree": {"tf": 4.123105625617661}, "phml.nodes.Root.inspect": {"tf": 3.4641016151377544}, "phml.nodes.Root.html": {"tf": 5.0990195135927845}, "phml.nodes.Root.json": {"tf": 5.0990195135927845}, "phml.nodes.Root.phml": {"tf": 5.0990195135927845}, "phml.nodes.DocType.__init__": {"tf": 9.486832980505138}, "phml.nodes.DocType.as_dict": {"tf": 3.4641016151377544}, "phml.nodes.DocType.tree": {"tf": 6.928203230275509}, "phml.nodes.DocType.inspect": {"tf": 3.4641016151377544}, "phml.nodes.DocType.html": {"tf": 5.0990195135927845}, "phml.nodes.DocType.json": {"tf": 5.0990195135927845}, "phml.nodes.DocType.phml": {"tf": 5.0990195135927845}, "phml.nodes.Parent.__init__": {"tf": 7.483314773547883}, "phml.nodes.Element.__init__": {"tf": 12.489995996796797}, "phml.nodes.Element.start_tag": {"tf": 3.4641016151377544}, "phml.nodes.Element.end_tag": {"tf": 3.4641016151377544}, "phml.nodes.Element.as_dict": {"tf": 3.4641016151377544}, "phml.nodes.Element.tree": {"tf": 6.48074069840786}, "phml.nodes.Element.inspect": {"tf": 3.4641016151377544}, "phml.nodes.Element.html": {"tf": 5.0990195135927845}, "phml.nodes.Element.json": {"tf": 5.0990195135927845}, "phml.nodes.Element.phml": {"tf": 5.0990195135927845}, "phml.nodes.Literal.__init__": {"tf": 9.9498743710662}, "phml.nodes.Literal.as_dict": {"tf": 3.4641016151377544}, "phml.nodes.Literal.html": {"tf": 5.0990195135927845}, "phml.nodes.Literal.json": {"tf": 5.0990195135927845}, "phml.nodes.Comment.tree": {"tf": 6.928203230275509}, "phml.nodes.Comment.inspect": {"tf": 3.4641016151377544}, "phml.nodes.Comment.phml": {"tf": 5.0990195135927845}, "phml.nodes.Text.tree": {"tf": 6.855654600401044}, "phml.nodes.Text.inspect": {"tf": 3.4641016151377544}, "phml.nodes.Text.phml": {"tf": 5.0990195135927845}, "phml.nodes.Position.__init__": {"tf": 8.12403840463596}, "phml.nodes.Point.__init__": {"tf": 6.244997998398398}, "phml.nodes.PropertyName.__init__": {"tf": 2}, "phml.nodes.PropertyName.encode": {"tf": 5.916079783099616}, "phml.nodes.PropertyName.replace": {"tf": 5.5677643628300215}, "phml.nodes.PropertyName.split": {"tf": 5.5677643628300215}, "phml.nodes.PropertyName.rsplit": {"tf": 5.5677643628300215}, "phml.nodes.PropertyName.join": {"tf": 4.358898943540674}, "phml.nodes.PropertyName.capitalize": {"tf": 3.872983346207417}, "phml.nodes.PropertyName.casefold": {"tf": 3.872983346207417}, "phml.nodes.PropertyName.title": {"tf": 3.872983346207417}, "phml.nodes.PropertyName.center": {"tf": 5.385164807134504}, "phml.nodes.PropertyName.count": {"tf": 3.1622776601683795}, "phml.nodes.PropertyName.expandtabs": {"tf": 4.795831523312719}, "phml.nodes.PropertyName.find": {"tf": 3.1622776601683795}, "phml.nodes.PropertyName.partition": {"tf": 4.358898943540674}, "phml.nodes.PropertyName.index": {"tf": 3.1622776601683795}, "phml.nodes.PropertyName.ljust": {"tf": 5.385164807134504}, "phml.nodes.PropertyName.lower": {"tf": 3.872983346207417}, "phml.nodes.PropertyName.lstrip": {"tf": 4.795831523312719}, "phml.nodes.PropertyName.rfind": {"tf": 3.1622776601683795}, "phml.nodes.PropertyName.rindex": {"tf": 3.1622776601683795}, "phml.nodes.PropertyName.rjust": {"tf": 5.385164807134504}, "phml.nodes.PropertyName.rstrip": {"tf": 4.795831523312719}, "phml.nodes.PropertyName.rpartition": {"tf": 4.358898943540674}, "phml.nodes.PropertyName.splitlines": {"tf": 4.795831523312719}, "phml.nodes.PropertyName.strip": {"tf": 4.795831523312719}, "phml.nodes.PropertyName.swapcase": {"tf": 3.872983346207417}, "phml.nodes.PropertyName.translate": {"tf": 4.358898943540674}, "phml.nodes.PropertyName.upper": {"tf": 3.872983346207417}, "phml.nodes.PropertyName.startswith": {"tf": 3.1622776601683795}, "phml.nodes.PropertyName.endswith": {"tf": 3.1622776601683795}, "phml.nodes.PropertyName.removeprefix": {"tf": 4.358898943540674}, "phml.nodes.PropertyName.removesuffix": {"tf": 4.358898943540674}, "phml.nodes.PropertyName.isascii": {"tf": 3.872983346207417}, "phml.nodes.PropertyName.islower": {"tf": 3.872983346207417}, "phml.nodes.PropertyName.isupper": {"tf": 3.872983346207417}, "phml.nodes.PropertyName.istitle": {"tf": 3.872983346207417}, "phml.nodes.PropertyName.isspace": {"tf": 3.872983346207417}, "phml.nodes.PropertyName.isdecimal": {"tf": 3.872983346207417}, "phml.nodes.PropertyName.isdigit": {"tf": 3.872983346207417}, "phml.nodes.PropertyName.isnumeric": {"tf": 3.872983346207417}, "phml.nodes.PropertyName.isalpha": {"tf": 3.872983346207417}, "phml.nodes.PropertyName.isalnum": {"tf": 3.872983346207417}, "phml.nodes.PropertyName.isidentifier": {"tf": 3.872983346207417}, "phml.nodes.PropertyName.isprintable": {"tf": 3.872983346207417}, "phml.nodes.PropertyName.zfill": {"tf": 4.358898943540674}, "phml.nodes.PropertyName.format": {"tf": 3.1622776601683795}, "phml.nodes.PropertyName.format_map": {"tf": 3.1622776601683795}, "phml.nodes.PropertyName.maketrans": {"tf": 3.1622776601683795}, "phml.parser.PHMLParser.__init__": {"tf": 4.123105625617661}, "phml.parser.PHMLParser.handle_decl": {"tf": 4.47213595499958}, "phml.parser.PHMLParser.handle_pi": {"tf": 4.47213595499958}, "phml.parser.PHMLParser.handle_starttag": {"tf": 4.242640687119285}, "phml.parser.PHMLParser.handle_startendtag": {"tf": 4.242640687119285}, "phml.parser.PHMLParser.handle_endtag": {"tf": 3.7416573867739413}, "phml.parser.PHMLParser.handle_data": {"tf": 3.7416573867739413}, "phml.parser.PHMLParser.handle_comment": {"tf": 4.47213595499958}, "phml.parser.Parser.__init__": {"tf": 2}, "phml.parser.Parser.parse": {"tf": 5.196152422706632}, "phml.parser.Parser.write": {"tf": 8.306623862918075}, "phml.parser.Parser.stringify": {"tf": 7.416198487095663}, "phml.utils.find.ancestor": {"tf": 17.05872210923198}, "phml.utils.find.find": {"tf": 14.866068747318506}, "phml.utils.find.find_after": {"tf": 18.138357147217054}, "phml.utils.find.find_all_after": {"tf": 18}, "phml.utils.find.find_before": {"tf": 18.138357147217054}, "phml.utils.find.find_all_before": {"tf": 18}, "phml.utils.find.find_all_between": {"tf": 16.822603841260722}, "phml.utils.misc.depth": {"tf": 12.165525060596439}, "phml.utils.test.test": {"tf": 16.0312195418814}, "phml.utils.transform.filter_nodes": {"tf": 8.831760866327848}, "phml.utils.transform.remove_nodes": {"tf": 8.831760866327848}, "phml.utils.transform.map_nodes": {"tf": 7.280109889280518}, "phml.utils.transform.size": {"tf": 12.165525060596439}, "phml.utils.travel.path": {"tf": 16.852299546352718}, "phml.utils.travel.walk": {"tf": 6.708203932499369}, "phml.utils.travel.visit_children": {"tf": 6.708203932499369}, "phml.utils.travel.visit_all_after": {"tf": 12.165525060596439}, "phml.utils.validate.validate": {"tf": 12.165525060596439}, "phml.utils.validate.parent": {"tf": 6.708203932499369}, "phml.utils.validate.literal": {"tf": 6.708203932499369}}, "df": 122, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"phml.ast.AST.__init__": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1}}, "df": 4}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.PHMLParser.__init__": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"phml.utils.transform.map_nodes": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.Element.__init__": {"tf": 1}, "phml.parser.PHMLParser.handle_starttag": {"tf": 1}, "phml.parser.PHMLParser.handle_startendtag": {"tf": 1}, "phml.parser.PHMLParser.handle_endtag": {"tf": 1}}, "df": 4}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.expandtabs": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.translate": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"phml.utils.find.ancestor": {"tf": 2}, "phml.utils.find.find": {"tf": 1.4142135623730951}, "phml.utils.find.find_after": {"tf": 2}, "phml.utils.find.find_all_after": {"tf": 2}, "phml.utils.find.find_before": {"tf": 2}, "phml.utils.find.find_all_before": {"tf": 2}, "phml.utils.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utils.misc.depth": {"tf": 1.4142135623730951}, "phml.utils.test.test": {"tf": 1.4142135623730951}, "phml.utils.transform.size": {"tf": 1.4142135623730951}, "phml.utils.travel.path": {"tf": 2}, "phml.utils.travel.visit_all_after": {"tf": 1.4142135623730951}, "phml.utils.validate.validate": {"tf": 1.4142135623730951}, "phml.utils.validate.literal": {"tf": 1.4142135623730951}}, "df": 14}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.utils.test.test": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"phml.ast.AST.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Root.__init__": {"tf": 1}, "phml.nodes.DocType.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Literal.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Position.__init__": {"tf": 1.4142135623730951}, "phml.parser.Parser.write": {"tf": 1.4142135623730951}, "phml.parser.Parser.stringify": {"tf": 1.4142135623730951}, "phml.utils.find.ancestor": {"tf": 4}, "phml.utils.find.find": {"tf": 3.1622776601683795}, "phml.utils.find.find_after": {"tf": 4}, "phml.utils.find.find_all_after": {"tf": 4}, "phml.utils.find.find_before": {"tf": 4}, "phml.utils.find.find_all_before": {"tf": 4}, "phml.utils.find.find_all_between": {"tf": 3.1622776601683795}, "phml.utils.misc.depth": {"tf": 2.8284271247461903}, "phml.utils.test.test": {"tf": 3.1622776601683795}, "phml.utils.transform.filter_nodes": {"tf": 1.4142135623730951}, "phml.utils.transform.remove_nodes": {"tf": 1.4142135623730951}, "phml.utils.transform.map_nodes": {"tf": 1.4142135623730951}, "phml.utils.transform.size": {"tf": 2.8284271247461903}, "phml.utils.travel.path": {"tf": 4}, "phml.utils.travel.walk": {"tf": 1.4142135623730951}, "phml.utils.travel.visit_children": {"tf": 1.4142135623730951}, "phml.utils.travel.visit_all_after": {"tf": 2.8284271247461903}, "phml.utils.validate.validate": {"tf": 2.8284271247461903}, "phml.utils.validate.parent": {"tf": 1.4142135623730951}, "phml.utils.validate.literal": {"tf": 1.4142135623730951}}, "df": 30}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Node.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Root.__init__": {"tf": 1.7320508075688772}, "phml.nodes.DocType.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Parent.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Element.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Literal.__init__": {"tf": 1.7320508075688772}}, "df": 6}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Position.__init__": {"tf": 2}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.DocType.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 2}, "phml.utils.find.find": {"tf": 1.4142135623730951}, "phml.utils.find.find_after": {"tf": 2}, "phml.utils.find.find_all_after": {"tf": 2}, "phml.utils.find.find_before": {"tf": 2}, "phml.utils.find.find_all_before": {"tf": 2}, "phml.utils.find.find_all_between": {"tf": 1.7320508075688772}, "phml.utils.misc.depth": {"tf": 1.4142135623730951}, "phml.utils.test.test": {"tf": 1.7320508075688772}, "phml.utils.transform.size": {"tf": 1.4142135623730951}, "phml.utils.travel.path": {"tf": 2}, "phml.utils.travel.visit_children": {"tf": 1}, "phml.utils.travel.visit_all_after": {"tf": 1.4142135623730951}, "phml.utils.validate.validate": {"tf": 1.4142135623730951}}, "df": 17}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.parser.Parser.parse": {"tf": 1.4142135623730951}, "phml.parser.Parser.write": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"phml.parser.Parser.parse": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"phml.nodes.DocType.tree": {"tf": 1}, "phml.nodes.Element.tree": {"tf": 1}, "phml.nodes.Comment.tree": {"tf": 1}, "phml.nodes.Text.tree": {"tf": 1}, "phml.nodes.PropertyName.removeprefix": {"tf": 1}}, "df": 5}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.Element.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml.utils.find.ancestor": {"tf": 2}, "phml.utils.find.find": {"tf": 1.7320508075688772}, "phml.utils.find.find_after": {"tf": 2.23606797749979}, "phml.utils.find.find_all_after": {"tf": 2.23606797749979}, "phml.utils.find.find_before": {"tf": 2.23606797749979}, "phml.utils.find.find_all_before": {"tf": 2.23606797749979}, "phml.utils.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utils.misc.depth": {"tf": 1.4142135623730951}, "phml.utils.test.test": {"tf": 1.7320508075688772}, "phml.utils.transform.size": {"tf": 1.7320508075688772}, "phml.utils.travel.path": {"tf": 2.23606797749979}, "phml.utils.travel.walk": {"tf": 1}, "phml.utils.travel.visit_all_after": {"tf": 1.4142135623730951}, "phml.utils.validate.validate": {"tf": 1.7320508075688772}, "phml.utils.validate.parent": {"tf": 1}, "phml.utils.validate.literal": {"tf": 1}}, "df": 16, "s": {"docs": {"phml.ast.AST.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Root.__init__": {"tf": 1}, "phml.nodes.DocType.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Literal.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Position.__init__": {"tf": 1.4142135623730951}, "phml.parser.Parser.write": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 4.123105625617661}, "phml.utils.find.find": {"tf": 3.1622776601683795}, "phml.utils.find.find_after": {"tf": 4}, "phml.utils.find.find_all_after": {"tf": 4}, "phml.utils.find.find_before": {"tf": 4}, "phml.utils.find.find_all_before": {"tf": 4}, "phml.utils.find.find_all_between": {"tf": 3.1622776601683795}, "phml.utils.misc.depth": {"tf": 2.8284271247461903}, "phml.utils.test.test": {"tf": 3.1622776601683795}, "phml.utils.transform.filter_nodes": {"tf": 1.4142135623730951}, "phml.utils.transform.remove_nodes": {"tf": 1.4142135623730951}, "phml.utils.transform.map_nodes": {"tf": 1.4142135623730951}, "phml.utils.transform.size": {"tf": 2.8284271247461903}, "phml.utils.travel.path": {"tf": 4}, "phml.utils.travel.walk": {"tf": 1.4142135623730951}, "phml.utils.travel.visit_children": {"tf": 1.4142135623730951}, "phml.utils.travel.visit_all_after": {"tf": 2.8284271247461903}, "phml.utils.validate.validate": {"tf": 2.8284271247461903}, "phml.utils.validate.parent": {"tf": 1.4142135623730951}, "phml.utils.validate.literal": {"tf": 1.4142135623730951}}, "df": 29}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Root.__init__": {"tf": 1.4142135623730951}, "phml.nodes.DocType.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Parent.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Element.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Literal.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Position.__init__": {"tf": 1}, "phml.nodes.Point.__init__": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.parser.PHMLParser.handle_decl": {"tf": 1}, "phml.parser.PHMLParser.handle_pi": {"tf": 1}, "phml.parser.PHMLParser.handle_comment": {"tf": 1}, "phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utils.test.test": {"tf": 1.4142135623730951}}, "df": 24, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.DocType.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 1}, "phml.utils.find.find": {"tf": 1.4142135623730951}, "phml.utils.find.find_after": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.test.test": {"tf": 1.4142135623730951}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}}, "df": 13}}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"phml.nodes.PropertyName.replace": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"phml.ast.AST.__init__": {"tf": 1.4142135623730951}, "phml.nodes.DocType.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Element.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Literal.__init__": {"tf": 1.4142135623730951}, "phml.parser.Parser.write": {"tf": 1.4142135623730951}, "phml.utils.find.ancestor": {"tf": 2}, "phml.utils.find.find": {"tf": 2}, "phml.utils.find.find_after": {"tf": 2}, "phml.utils.find.find_all_after": {"tf": 2}, "phml.utils.find.find_before": {"tf": 2}, "phml.utils.find.find_all_before": {"tf": 2}, "phml.utils.find.find_all_between": {"tf": 2}, "phml.utils.misc.depth": {"tf": 1.4142135623730951}, "phml.utils.test.test": {"tf": 2}, "phml.utils.transform.filter_nodes": {"tf": 1.4142135623730951}, "phml.utils.transform.remove_nodes": {"tf": 1.4142135623730951}, "phml.utils.transform.map_nodes": {"tf": 1.4142135623730951}, "phml.utils.transform.size": {"tf": 1.4142135623730951}, "phml.utils.travel.path": {"tf": 2}, "phml.utils.travel.walk": {"tf": 1.4142135623730951}, "phml.utils.travel.visit_children": {"tf": 1.4142135623730951}, "phml.utils.travel.visit_all_after": {"tf": 1.4142135623730951}, "phml.utils.validate.validate": {"tf": 1.4142135623730951}, "phml.utils.validate.parent": {"tf": 1.4142135623730951}}, "df": 24}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"phml.utils.find.find_all_between": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {"phml.utils.misc.depth": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.ast.AST.__init__": {"tf": 1.4142135623730951}, "phml.nodes.DocType.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Element.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Literal.__init__": {"tf": 1.4142135623730951}, "phml.utils.find.ancestor": {"tf": 2}, "phml.utils.find.find": {"tf": 2}, "phml.utils.find.find_after": {"tf": 2}, "phml.utils.find.find_all_after": {"tf": 2}, "phml.utils.find.find_before": {"tf": 2}, "phml.utils.find.find_all_before": {"tf": 2}, "phml.utils.find.find_all_between": {"tf": 2}, "phml.utils.misc.depth": {"tf": 1.4142135623730951}, "phml.utils.test.test": {"tf": 2}, "phml.utils.transform.filter_nodes": {"tf": 1.4142135623730951}, "phml.utils.transform.remove_nodes": {"tf": 1.4142135623730951}, "phml.utils.transform.map_nodes": {"tf": 1.4142135623730951}, "phml.utils.transform.size": {"tf": 1.4142135623730951}, "phml.utils.travel.path": {"tf": 2}, "phml.utils.travel.walk": {"tf": 1.4142135623730951}, "phml.utils.travel.visit_children": {"tf": 1.4142135623730951}, "phml.utils.travel.visit_all_after": {"tf": 1.4142135623730951}, "phml.utils.validate.validate": {"tf": 1.4142135623730951}, "phml.utils.validate.parent": {"tf": 1.4142135623730951}}, "df": 23}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Position.__init__": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"phml.ast.AST.inspect": {"tf": 1}, "phml.ast.AST.to_phml": {"tf": 1}, "phml.ast.AST.to_json": {"tf": 1}, "phml.ast.AST.to_html": {"tf": 1}, "phml.nodes.Root.as_dict": {"tf": 1}, "phml.nodes.Root.tree": {"tf": 1}, "phml.nodes.Root.inspect": {"tf": 1}, "phml.nodes.Root.html": {"tf": 1}, "phml.nodes.Root.json": {"tf": 1}, "phml.nodes.Root.phml": {"tf": 1}, "phml.nodes.DocType.as_dict": {"tf": 1}, "phml.nodes.DocType.tree": {"tf": 1}, "phml.nodes.DocType.inspect": {"tf": 1}, "phml.nodes.DocType.html": {"tf": 1}, "phml.nodes.DocType.json": {"tf": 1}, "phml.nodes.DocType.phml": {"tf": 1}, "phml.nodes.Element.start_tag": {"tf": 1}, "phml.nodes.Element.end_tag": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Element.tree": {"tf": 1}, "phml.nodes.Element.inspect": {"tf": 1}, "phml.nodes.Element.html": {"tf": 1}, "phml.nodes.Element.json": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}, "phml.nodes.Literal.html": {"tf": 1}, "phml.nodes.Literal.json": {"tf": 1}, "phml.nodes.Comment.tree": {"tf": 1}, "phml.nodes.Comment.inspect": {"tf": 1}, "phml.nodes.Comment.phml": {"tf": 1}, "phml.nodes.Text.tree": {"tf": 1}, "phml.nodes.Text.inspect": {"tf": 1}, "phml.nodes.Text.phml": {"tf": 1}, "phml.nodes.PropertyName.encode": {"tf": 1}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.join": {"tf": 1}, "phml.nodes.PropertyName.capitalize": {"tf": 1}, "phml.nodes.PropertyName.casefold": {"tf": 1}, "phml.nodes.PropertyName.title": {"tf": 1}, "phml.nodes.PropertyName.center": {"tf": 1}, "phml.nodes.PropertyName.expandtabs": {"tf": 1}, "phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.lower": {"tf": 1}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.nodes.PropertyName.splitlines": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.nodes.PropertyName.swapcase": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.upper": {"tf": 1}, "phml.nodes.PropertyName.removeprefix": {"tf": 1}, "phml.nodes.PropertyName.removesuffix": {"tf": 1}, "phml.nodes.PropertyName.isascii": {"tf": 1}, "phml.nodes.PropertyName.islower": {"tf": 1}, "phml.nodes.PropertyName.isupper": {"tf": 1}, "phml.nodes.PropertyName.istitle": {"tf": 1}, "phml.nodes.PropertyName.isspace": {"tf": 1}, "phml.nodes.PropertyName.isdecimal": {"tf": 1}, "phml.nodes.PropertyName.isdigit": {"tf": 1}, "phml.nodes.PropertyName.isnumeric": {"tf": 1}, "phml.nodes.PropertyName.isalpha": {"tf": 1}, "phml.nodes.PropertyName.isalnum": {"tf": 1}, "phml.nodes.PropertyName.isidentifier": {"tf": 1}, "phml.nodes.PropertyName.isprintable": {"tf": 1}, "phml.nodes.PropertyName.zfill": {"tf": 1}, "phml.parser.PHMLParser.handle_decl": {"tf": 1}, "phml.parser.PHMLParser.handle_pi": {"tf": 1}, "phml.parser.PHMLParser.handle_starttag": {"tf": 1}, "phml.parser.PHMLParser.handle_startendtag": {"tf": 1}, "phml.parser.PHMLParser.handle_endtag": {"tf": 1}, "phml.parser.PHMLParser.handle_data": {"tf": 1}, "phml.parser.PHMLParser.handle_comment": {"tf": 1}, "phml.parser.Parser.parse": {"tf": 1}, "phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}}, "df": 80}}, "p": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"phml.ast.AST.inspect": {"tf": 1}, "phml.ast.AST.to_phml": {"tf": 1}, "phml.ast.AST.to_json": {"tf": 1}, "phml.ast.AST.to_html": {"tf": 1}, "phml.nodes.Root.tree": {"tf": 1}, "phml.nodes.Root.inspect": {"tf": 1}, "phml.nodes.Root.html": {"tf": 1}, "phml.nodes.Root.json": {"tf": 1}, "phml.nodes.Root.phml": {"tf": 1}, "phml.nodes.DocType.tree": {"tf": 1.4142135623730951}, "phml.nodes.DocType.inspect": {"tf": 1}, "phml.nodes.DocType.html": {"tf": 1}, "phml.nodes.DocType.json": {"tf": 1}, "phml.nodes.DocType.phml": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Element.start_tag": {"tf": 1}, "phml.nodes.Element.end_tag": {"tf": 1}, "phml.nodes.Element.tree": {"tf": 1.4142135623730951}, "phml.nodes.Element.inspect": {"tf": 1}, "phml.nodes.Element.html": {"tf": 1}, "phml.nodes.Element.json": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.nodes.Literal.html": {"tf": 1}, "phml.nodes.Literal.json": {"tf": 1}, "phml.nodes.Comment.tree": {"tf": 1.4142135623730951}, "phml.nodes.Comment.inspect": {"tf": 1}, "phml.nodes.Comment.phml": {"tf": 1}, "phml.nodes.Text.tree": {"tf": 1.4142135623730951}, "phml.nodes.Text.inspect": {"tf": 1}, "phml.nodes.Text.phml": {"tf": 1}, "phml.parser.PHMLParser.handle_decl": {"tf": 1}, "phml.parser.PHMLParser.handle_pi": {"tf": 1}, "phml.parser.PHMLParser.handle_comment": {"tf": 1}, "phml.parser.Parser.parse": {"tf": 1}, "phml.parser.Parser.write": {"tf": 1.4142135623730951}, "phml.parser.Parser.stringify": {"tf": 1.4142135623730951}, "phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.test.test": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}}, "df": 46, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Position.__init__": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.travel.visit_all_after": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"phml.nodes.PropertyName.removesuffix": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml.utils.find.find_all_between": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Root.__init__": {"tf": 1.4142135623730951}, "phml.nodes.DocType.__init__": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Element.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}, "phml.nodes.Point.__init__": {"tf": 1}, "phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1.7320508075688772}, "phml.utils.test.test": {"tf": 1}}, "df": 12}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Element.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Point.__init__": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.replace": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Root.__init__": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}}, "df": 3}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "s": {"docs": {"phml.parser.PHMLParser.__init__": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Point.__init__": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.replace": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml.parser.PHMLParser.__init__": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}}, "df": 8}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.utils.find.ancestor": {"tf": 2}, "phml.utils.find.find": {"tf": 1.4142135623730951}, "phml.utils.find.find_after": {"tf": 2}, "phml.utils.find.find_all_after": {"tf": 2}, "phml.utils.find.find_before": {"tf": 2}, "phml.utils.find.find_all_before": {"tf": 2}, "phml.utils.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utils.misc.depth": {"tf": 1.4142135623730951}, "phml.utils.test.test": {"tf": 1.4142135623730951}, "phml.utils.transform.size": {"tf": 1.4142135623730951}, "phml.utils.travel.path": {"tf": 2}, "phml.utils.travel.visit_all_after": {"tf": 1.4142135623730951}, "phml.utils.validate.validate": {"tf": 1.4142135623730951}, "phml.utils.validate.literal": {"tf": 1.4142135623730951}}, "df": 14}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.test.test": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1}}, "df": 10}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Root.__init__": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1.4142135623730951}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utils.test.test": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}, "phml.utils.travel.path": {"tf": 1}}, "df": 13}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Point.__init__": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.utils.find.ancestor": {"tf": 2}, "phml.utils.find.find": {"tf": 1.4142135623730951}, "phml.utils.find.find_after": {"tf": 2}, "phml.utils.find.find_all_after": {"tf": 2}, "phml.utils.find.find_before": {"tf": 2}, "phml.utils.find.find_all_before": {"tf": 2}, "phml.utils.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utils.misc.depth": {"tf": 1.4142135623730951}, "phml.utils.test.test": {"tf": 1.4142135623730951}, "phml.utils.transform.size": {"tf": 1.4142135623730951}, "phml.utils.travel.path": {"tf": 2}, "phml.utils.travel.visit_all_after": {"tf": 1.4142135623730951}, "phml.utils.validate.validate": {"tf": 1.4142135623730951}}, "df": 13}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Root.as_dict": {"tf": 1}, "phml.nodes.DocType.as_dict": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}, "phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.test.test": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}}, "df": 14}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.nodes.DocType.tree": {"tf": 1}, "phml.nodes.Element.tree": {"tf": 1}, "phml.nodes.Comment.tree": {"tf": 1}, "phml.nodes.Text.tree": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {"phml.parser.PHMLParser.handle_decl": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"phml.parser.PHMLParser.handle_pi": {"tf": 1}, "phml.parser.PHMLParser.handle_data": {"tf": 1}, "phml.parser.PHMLParser.handle_comment": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.utils.find.ancestor": {"tf": 2}, "phml.utils.find.find": {"tf": 1.4142135623730951}, "phml.utils.find.find_after": {"tf": 2}, "phml.utils.find.find_all_after": {"tf": 2}, "phml.utils.find.find_before": {"tf": 2}, "phml.utils.find.find_all_before": {"tf": 2}, "phml.utils.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utils.misc.depth": {"tf": 1.4142135623730951}, "phml.utils.test.test": {"tf": 1.4142135623730951}, "phml.utils.transform.size": {"tf": 1.4142135623730951}, "phml.utils.travel.path": {"tf": 2}, "phml.utils.travel.visit_all_after": {"tf": 1.4142135623730951}, "phml.utils.validate.validate": {"tf": 1.4142135623730951}}, "df": 13}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.Root.tree": {"tf": 1}, "phml.nodes.DocType.tree": {"tf": 1}, "phml.nodes.Comment.tree": {"tf": 1}, "phml.nodes.Text.tree": {"tf": 1}, "phml.utils.travel.walk": {"tf": 1}, "phml.utils.travel.visit_children": {"tf": 1}, "phml.utils.travel.visit_all_after": {"tf": 1}}, "df": 7}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.join": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Root.html": {"tf": 1}, "phml.nodes.Root.json": {"tf": 1}, "phml.nodes.Root.phml": {"tf": 1}, "phml.nodes.DocType.html": {"tf": 1}, "phml.nodes.DocType.json": {"tf": 1}, "phml.nodes.DocType.phml": {"tf": 1}, "phml.nodes.Element.html": {"tf": 1}, "phml.nodes.Element.json": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1}, "phml.nodes.Literal.html": {"tf": 1}, "phml.nodes.Literal.json": {"tf": 1}, "phml.nodes.Comment.phml": {"tf": 1}, "phml.nodes.Text.phml": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}}, "df": 14}}, "x": {"docs": {"phml.utils.test.test": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"phml.nodes.Root.html": {"tf": 1}, "phml.nodes.Root.json": {"tf": 1}, "phml.nodes.Root.phml": {"tf": 1}, "phml.nodes.DocType.tree": {"tf": 1}, "phml.nodes.DocType.html": {"tf": 1}, "phml.nodes.DocType.json": {"tf": 1}, "phml.nodes.DocType.phml": {"tf": 1}, "phml.nodes.Element.tree": {"tf": 1}, "phml.nodes.Element.html": {"tf": 1}, "phml.nodes.Element.json": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1}, "phml.nodes.Literal.html": {"tf": 1}, "phml.nodes.Literal.json": {"tf": 1}, "phml.nodes.Comment.tree": {"tf": 1}, "phml.nodes.Comment.phml": {"tf": 1}, "phml.nodes.Text.tree": {"tf": 1}, "phml.nodes.Text.phml": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}, "phml.nodes.Point.__init__": {"tf": 1.7320508075688772}, "phml.utils.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utils.misc.depth": {"tf": 1}, "phml.utils.test.test": {"tf": 1}, "phml.utils.transform.size": {"tf": 1}}, "df": 23}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.DocType.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 1}, "phml.utils.find.find": {"tf": 1.4142135623730951}, "phml.utils.find.find_after": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.test.test": {"tf": 1.4142135623730951}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}}, "df": 13}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.PropertyName.count": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}, "phml.nodes.PropertyName.format": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}}, "df": 10}}}}}}, "t": {"docs": {}, "df": 0, "f": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"phml.nodes.Element.__init__": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"phml.parser.PHMLParser.handle_starttag": {"tf": 1}, "phml.parser.PHMLParser.handle_startendtag": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1.7320508075688772}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.Element.__init__": {"tf": 1}, "phml.utils.test.test": {"tf": 1}, "phml.utils.validate.validate": {"tf": 1}, "phml.utils.validate.parent": {"tf": 1}, "phml.utils.validate.literal": {"tf": 1}}, "df": 5}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.PropertyName.splitlines": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.center": {"tf": 1}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {"phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Literal.__init__": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}}, "df": 2}}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.nodes.PropertyName.center": {"tf": 1}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1}, "phml.nodes.PropertyName.zfill": {"tf": 1}}, "df": 4}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.PropertyName.splitlines": {"tf": 1}}, "df": 1}}}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.Root": {"tf": 1}, "phml.nodes.DocType": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Literal": {"tf": 1}, "phml.nodes.Comment": {"tf": 1}, "phml.nodes.Text": {"tf": 1}}, "df": 7}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Root": {"tf": 1.4142135623730951}, "phml.nodes.Element": {"tf": 1.4142135623730951}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.parser.PHMLParser": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.DocType": {"tf": 1.4142135623730951}, "phml.nodes.Parent": {"tf": 1.4142135623730951}, "phml.nodes.Literal": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"phml.nodes.Root": {"tf": 1}, "phml.nodes.DocType": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Literal": {"tf": 1}, "phml.nodes.Comment": {"tf": 1}, "phml.nodes.Text": {"tf": 1}}, "df": 7}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.Comment": {"tf": 1.4142135623730951}, "phml.nodes.Text": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"phml.parser.PHMLParser": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.parser.PHMLParser": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "doc": {"root": {"0": {"docs": {"phml.nodes.Point": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1.4142135623730951}}, "df": 2}, "1": {"docs": {"phml.nodes.Point": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.utils.misc.depth": {"tf": 1}}, "df": 7}, "3": {"9": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.DocType": {"tf": 1.4142135623730951}, "phml.nodes.Element": {"tf": 2.8284271247461903}, "phml.nodes.Text": {"tf": 2.8284271247461903}}, "df": 4}, "docs": {"phml.nodes.PropertyName.partition": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rpartition": {"tf": 1.4142135623730951}}, "df": 2}, "8": {"docs": {"phml.nodes.PropertyName.expandtabs": {"tf": 1}}, "df": 1}, "docs": {"phml": {"tf": 15.7797338380595}, "phml.ast": {"tf": 1.7320508075688772}, "phml.ast.AST": {"tf": 2.449489742783178}, "phml.ast.AST.__init__": {"tf": 1.7320508075688772}, "phml.ast.AST.size": {"tf": 1.7320508075688772}, "phml.ast.AST.inspect": {"tf": 1.7320508075688772}, "phml.ast.AST.to_phml": {"tf": 1.7320508075688772}, "phml.ast.AST.to_json": {"tf": 1.7320508075688772}, "phml.ast.AST.to_html": {"tf": 1.7320508075688772}, "phml.file_types": {"tf": 1.7320508075688772}, "phml.nodes": {"tf": 1.7320508075688772}, "phml.nodes.Node": {"tf": 1.7320508075688772}, "phml.nodes.Node.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Node.position": {"tf": 1.7320508075688772}, "phml.nodes.Node.type": {"tf": 1.7320508075688772}, "phml.nodes.Root": {"tf": 2.449489742783178}, "phml.nodes.Root.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Root.as_dict": {"tf": 1.7320508075688772}, "phml.nodes.Root.tree": {"tf": 1.7320508075688772}, "phml.nodes.Root.inspect": {"tf": 1.7320508075688772}, "phml.nodes.Root.html": {"tf": 1.7320508075688772}, "phml.nodes.Root.json": {"tf": 1.7320508075688772}, "phml.nodes.Root.phml": {"tf": 2.23606797749979}, "phml.nodes.DocType": {"tf": 7}, "phml.nodes.DocType.__init__": {"tf": 1.7320508075688772}, "phml.nodes.DocType.as_dict": {"tf": 1.7320508075688772}, "phml.nodes.DocType.tree": {"tf": 1.7320508075688772}, "phml.nodes.DocType.inspect": {"tf": 1.7320508075688772}, "phml.nodes.DocType.html": {"tf": 1.7320508075688772}, "phml.nodes.DocType.json": {"tf": 1.7320508075688772}, "phml.nodes.DocType.phml": {"tf": 2.23606797749979}, "phml.nodes.Parent": {"tf": 2.449489742783178}, "phml.nodes.Parent.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Element": {"tf": 14.422205101855956}, "phml.nodes.Element.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Element.start_tag": {"tf": 3.605551275463989}, "phml.nodes.Element.end_tag": {"tf": 2.449489742783178}, "phml.nodes.Element.as_dict": {"tf": 1.7320508075688772}, "phml.nodes.Element.tree": {"tf": 1.7320508075688772}, "phml.nodes.Element.inspect": {"tf": 1.7320508075688772}, "phml.nodes.Element.html": {"tf": 1.7320508075688772}, "phml.nodes.Element.json": {"tf": 1.7320508075688772}, "phml.nodes.Element.phml": {"tf": 2.23606797749979}, "phml.nodes.Literal": {"tf": 1.7320508075688772}, "phml.nodes.Literal.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Literal.position": {"tf": 1.7320508075688772}, "phml.nodes.Literal.value": {"tf": 1.4142135623730951}, "phml.nodes.Literal.as_dict": {"tf": 1.7320508075688772}, "phml.nodes.Literal.html": {"tf": 1.7320508075688772}, "phml.nodes.Literal.json": {"tf": 1.7320508075688772}, "phml.nodes.Comment": {"tf": 4.58257569495584}, "phml.nodes.Comment.tree": {"tf": 1.7320508075688772}, "phml.nodes.Comment.inspect": {"tf": 1.7320508075688772}, "phml.nodes.Comment.phml": {"tf": 2.23606797749979}, "phml.nodes.Text": {"tf": 12}, "phml.nodes.Text.tree": {"tf": 1.7320508075688772}, "phml.nodes.Text.inspect": {"tf": 1.7320508075688772}, "phml.nodes.Text.phml": {"tf": 2.23606797749979}, "phml.nodes.Position": {"tf": 5.477225575051661}, "phml.nodes.Position.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Point": {"tf": 2.449489742783178}, "phml.nodes.Point.__init__": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName": {"tf": 2.6457513110645907}, "phml.nodes.PropertyName.__init__": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.encode": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.replace": {"tf": 3}, "phml.nodes.PropertyName.split": {"tf": 4.123105625617661}, "phml.nodes.PropertyName.rsplit": {"tf": 4.123105625617661}, "phml.nodes.PropertyName.join": {"tf": 3.4641016151377544}, "phml.nodes.PropertyName.capitalize": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.casefold": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.title": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.center": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.count": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.expandtabs": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.find": {"tf": 3}, "phml.nodes.PropertyName.partition": {"tf": 3}, "phml.nodes.PropertyName.index": {"tf": 3}, "phml.nodes.PropertyName.ljust": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.lower": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.lstrip": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.rfind": {"tf": 3}, "phml.nodes.PropertyName.rindex": {"tf": 3}, "phml.nodes.PropertyName.rjust": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.rstrip": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.rpartition": {"tf": 3}, "phml.nodes.PropertyName.splitlines": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.strip": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.swapcase": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.translate": {"tf": 3}, "phml.nodes.PropertyName.upper": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.startswith": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.endswith": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.removeprefix": {"tf": 2.6457513110645907}, "phml.nodes.PropertyName.removesuffix": {"tf": 2.6457513110645907}, "phml.nodes.PropertyName.isascii": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.islower": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.isupper": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.istitle": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.isspace": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.isdecimal": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.isdigit": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.isnumeric": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.isalpha": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.isalnum": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.isidentifier": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.isprintable": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.zfill": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.format": {"tf": 3.1622776601683795}, "phml.nodes.PropertyName.format_map": {"tf": 2.8284271247461903}, "phml.nodes.PropertyName.maketrans": {"tf": 2.449489742783178}, "phml.parser": {"tf": 1.7320508075688772}, "phml.parser.PHMLParser": {"tf": 1.7320508075688772}, "phml.parser.PHMLParser.__init__": {"tf": 2.449489742783178}, "phml.parser.PHMLParser.cur": {"tf": 1.7320508075688772}, "phml.parser.PHMLParser.handle_decl": {"tf": 1.7320508075688772}, "phml.parser.PHMLParser.handle_pi": {"tf": 1.7320508075688772}, "phml.parser.PHMLParser.handle_starttag": {"tf": 1.7320508075688772}, "phml.parser.PHMLParser.handle_startendtag": {"tf": 1.7320508075688772}, "phml.parser.PHMLParser.handle_endtag": {"tf": 1.7320508075688772}, "phml.parser.PHMLParser.handle_data": {"tf": 1.7320508075688772}, "phml.parser.PHMLParser.handle_comment": {"tf": 1.7320508075688772}, "phml.parser.Parser": {"tf": 3}, "phml.parser.Parser.__init__": {"tf": 1.7320508075688772}, "phml.parser.Parser.parser": {"tf": 2.23606797749979}, "phml.parser.Parser.ast": {"tf": 1.7320508075688772}, "phml.parser.Parser.parse": {"tf": 3.3166247903554}, "phml.parser.Parser.write": {"tf": 3}, "phml.parser.Parser.stringify": {"tf": 3}, "phml.utils": {"tf": 1.7320508075688772}, "phml.utils.find": {"tf": 1.7320508075688772}, "phml.utils.find.ancestor": {"tf": 3.3166247903554}, "phml.utils.find.find": {"tf": 3.605551275463989}, "phml.utils.find.find_after": {"tf": 3.3166247903554}, "phml.utils.find.find_all_after": {"tf": 3.3166247903554}, "phml.utils.find.find_before": {"tf": 3.3166247903554}, "phml.utils.find.find_all_before": {"tf": 3.3166247903554}, "phml.utils.find.find_all_between": {"tf": 3.872983346207417}, "phml.utils.misc": {"tf": 1.7320508075688772}, "phml.utils.misc.depth": {"tf": 2.6457513110645907}, "phml.utils.test": {"tf": 1.7320508075688772}, "phml.utils.test.test": {"tf": 6}, "phml.utils.transform": {"tf": 1.7320508075688772}, "phml.utils.transform.filter_nodes": {"tf": 4}, "phml.utils.transform.remove_nodes": {"tf": 3.4641016151377544}, "phml.utils.transform.map_nodes": {"tf": 10.099504938362077}, "phml.utils.transform.size": {"tf": 1.7320508075688772}, "phml.utils.travel": {"tf": 1.7320508075688772}, "phml.utils.travel.path": {"tf": 3.605551275463989}, "phml.utils.travel.walk": {"tf": 1.7320508075688772}, "phml.utils.travel.visit_children": {"tf": 1.7320508075688772}, "phml.utils.travel.visit_all_after": {"tf": 1.7320508075688772}, "phml.utils.validate": {"tf": 1.7320508075688772}, "phml.utils.validate.validate": {"tf": 1.7320508075688772}, "phml.utils.validate.parent": {"tf": 1.7320508075688772}, "phml.utils.validate.literal": {"tf": 1.7320508075688772}}, "df": 156, "p": {"docs": {"phml": {"tf": 2}}, "df": 1, "y": {"docs": {"phml": {"tf": 5.196152422706632}}, "df": 1, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 5.5677643628300215}, "phml.nodes.PropertyName.isidentifier": {"tf": 1}, "phml.parser.PHMLParser": {"tf": 1}, "phml.parser.Parser": {"tf": 1.7320508075688772}}, "df": 4, "i": {"docs": {}, "df": 0, "c": {"docs": {"phml.parser": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 4}, "phml.ast.AST": {"tf": 1}, "phml.ast.AST.to_phml": {"tf": 1}, "phml.file_types": {"tf": 1}, "phml.nodes.Node": {"tf": 1}, "phml.parser": {"tf": 1}, "phml.parser.Parser": {"tf": 2}, "phml.parser.Parser.parser": {"tf": 1}, "phml.parser.Parser.ast": {"tf": 1}, "phml.parser.Parser.parse": {"tf": 1.4142135623730951}, "phml.parser.Parser.write": {"tf": 1.4142135623730951}, "phml.parser.Parser.stringify": {"tf": 1.4142135623730951}, "phml.utils.test.test": {"tf": 1}}, "df": 13}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.startswith": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.removeprefix": {"tf": 1.7320508075688772}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.test.test": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Element": {"tf": 1.4142135623730951}, "phml.nodes.Literal.position": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.PropertyName.removeprefix": {"tf": 1}, "phml.nodes.PropertyName.removesuffix": {"tf": 1}}, "df": 6}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.isprintable": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"phml.parser.Parser": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.utils.find.find_before": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}, "phml.parser.Parser": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1.7320508075688772}}, "df": 1}, "s": {"docs": {"phml.parser.Parser": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.parser.Parser": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Node": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.Element": {"tf": 2}, "phml.nodes.Text": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.test.test": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Node.position": {"tf": 1.7320508075688772}, "phml.nodes.Literal.position": {"tf": 1.7320508075688772}, "phml.nodes.Position": {"tf": 2}, "phml.nodes.PropertyName.startswith": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.endswith": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.maketrans": {"tf": 1}}, "df": 6, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.Position": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Position": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.nodes.PropertyName.isascii": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.parser.Parser.parse": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Node": {"tf": 1}, "phml.parser.Parser": {"tf": 1}, "phml.parser.Parser.parse": {"tf": 1}}, "df": 3, "r": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.parser": {"tf": 1}, "phml.parser.PHMLParser": {"tf": 1.4142135623730951}, "phml.parser.Parser": {"tf": 1.4142135623730951}, "phml.parser.Parser.parser": {"tf": 1}}, "df": 5}, "d": {"docs": {"phml.nodes.Position": {"tf": 1.4142135623730951}, "phml.parser.Parser.parse": {"tf": 1}, "phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.file_types": {"tf": 1}, "phml.nodes.Position": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Root": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.parser.PHMLParser.cur": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 2}, "phml.utils.test.test": {"tf": 2}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1.4142135623730951}, "phml.utils.transform.map_nodes": {"tf": 1}, "phml.utils.validate.parent": {"tf": 1}}, "df": 10}}}, "t": {"docs": {"phml.nodes.PropertyName.partition": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rpartition": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}, "phml.parser.Parser": {"tf": 1.4142135623730951}, "phml.utils.test.test": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Node": {"tf": 1}, "phml.utils.misc.depth": {"tf": 1}, "phml.utils.test.test": {"tf": 1}, "phml.utils.travel.path": {"tf": 1}}, "df": 4}, "s": {"docs": {"phml.utils.find.find_before": {"tf": 1}, "phml.utils.test.test": {"tf": 1.4142135623730951}}, "df": 2}}}}, "d": {"docs": {"phml.nodes.PropertyName.zfill": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.PropertyName.center": {"tf": 1}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.parser.Parser.parse": {"tf": 1.7320508075688772}, "phml.utils.travel.path": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Position": {"tf": 1.4142135623730951}, "phml.nodes.Point": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.Position": {"tf": 1}}, "df": 1}}}, "q": {"docs": {"phml.nodes.PropertyName.join": {"tf": 1.4142135623730951}}, "df": 1}}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}, "phml.parser": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 2.8284271247461903}, "phml.ast.AST.to_html": {"tf": 1}, "phml.nodes.Root.html": {"tf": 1}, "phml.nodes.Root.phml": {"tf": 1.4142135623730951}, "phml.nodes.DocType": {"tf": 1}, "phml.nodes.DocType.html": {"tf": 1}, "phml.nodes.DocType.phml": {"tf": 1.7320508075688772}, "phml.nodes.Element": {"tf": 1.4142135623730951}, "phml.nodes.Element.html": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1.4142135623730951}, "phml.nodes.Literal.html": {"tf": 1}, "phml.nodes.Comment.phml": {"tf": 1.7320508075688772}, "phml.nodes.Text.phml": {"tf": 1.7320508075688772}, "phml.parser.PHMLParser": {"tf": 1.4142135623730951}, "phml.parser.Parser": {"tf": 1.7320508075688772}, "phml.parser.Parser.parser": {"tf": 1}, "phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}}, "df": 18}}, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"phml.nodes.Element": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.6457513110645907}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.PropertyName.capitalize": {"tf": 1}, "phml.nodes.PropertyName.title": {"tf": 1}, "phml.nodes.PropertyName.isascii": {"tf": 1}}, "df": 5}}, "s": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.split": {"tf": 1}}, "df": 2, "t": {"docs": {"phml.nodes.Parent": {"tf": 1.4142135623730951}, "phml.nodes.Literal": {"tf": 1}, "phml.parser.Parser.parse": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}, "phml.parser.Parser": {"tf": 1}}, "df": 2, "r": {"docs": {"phml.nodes.PropertyName": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"phml": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1}, "phml.parser.Parser": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"phml": {"tf": 2}}, "df": 1}}, "p": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"phml": {"tf": 1}, "phml.nodes.Element": {"tf": 1.4142135623730951}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"phml": {"tf": 1}, "phml.parser": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.nodes.PropertyName.capitalize": {"tf": 1}}, "df": 2}}, "y": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.istitle": {"tf": 1}, "phml.parser.Parser": {"tf": 1}}, "df": 3}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.ast.AST": {"tf": 1}, "phml.parser.Parser": {"tf": 1}}, "df": 3}}}}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {"phml.nodes.PropertyName.format_map": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.maketrans": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1.4142135623730951}}, "df": 2}}}, "s": {"docs": {"phml.utils.transform.map_nodes": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utils.find.find": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utils.find.find_all_between": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.nodes.PropertyName.capitalize": {"tf": 1}, "phml.nodes.PropertyName.title": {"tf": 1}, "phml.utils.test.test": {"tf": 1}}, "df": 4}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.utils.misc.depth": {"tf": 1}}, "df": 6}, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.join": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"phml.utils.find.find_all_between": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Element": {"tf": 1.4142135623730951}, "phml.nodes.Literal.position": {"tf": 1}, "phml.nodes.Literal.value": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.maketrans": {"tf": 1.7320508075688772}}, "df": 9}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Position": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.parser": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.7320508075688772}}, "df": 1}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Position": {"tf": 1}, "phml.nodes.Point": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.splitlines": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"phml": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.PropertyName.splitlines": {"tf": 1}}, "df": 3}}, "k": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.utils.transform.map_nodes": {"tf": 1}}, "df": 2, "[": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.Literal": {"tf": 1}, "phml.nodes.Literal.value": {"tf": 1.4142135623730951}, "phml.nodes.Literal.as_dict": {"tf": 1}, "phml.nodes.Literal.html": {"tf": 1}, "phml.nodes.Literal.json": {"tf": 1}, "phml.nodes.Comment": {"tf": 1}, "phml.nodes.Text": {"tf": 1}, "phml.utils.validate.literal": {"tf": 1}}, "df": 8, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Parent": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.splitlines": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utils.test.test": {"tf": 1}, "phml.utils.travel.path": {"tf": 1.4142135623730951}}, "df": 9, "[": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.travel.path": {"tf": 1}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.utils.test.test": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "k": {"docs": {"phml": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.PropertyName.translate": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.translate": {"tf": 1}}, "df": 1}}}}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"phml": {"tf": 1}, "phml.file_types": {"tf": 1}, "phml.parser.Parser": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Literal.position": {"tf": 1}, "phml.nodes.Position": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {"phml.nodes.Element": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.capitalize": {"tf": 1}, "phml.nodes.PropertyName.title": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.lower": {"tf": 1}, "phml.nodes.PropertyName.swapcase": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.islower": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.istitle": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {"phml": {"tf": 3.4641016151377544}, "phml.nodes.DocType": {"tf": 1}, "phml.nodes.Element": {"tf": 1.4142135623730951}, "phml.nodes.Comment": {"tf": 1}, "phml.nodes.Text": {"tf": 1.4142135623730951}}, "df": 5}, "e": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.utils.travel.path": {"tf": 1.4142135623730951}}, "df": 4}}}}, "f": {"docs": {"phml.nodes.Element": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.islower": {"tf": 1}, "phml.nodes.PropertyName.isupper": {"tf": 1}, "phml.nodes.PropertyName.isspace": {"tf": 1}, "phml.nodes.PropertyName.isdecimal": {"tf": 1}, "phml.nodes.PropertyName.isdigit": {"tf": 1}, "phml.nodes.PropertyName.isnumeric": {"tf": 1}, "phml.nodes.PropertyName.isalpha": {"tf": 1}, "phml.nodes.PropertyName.isalnum": {"tf": 1}}, "df": 8}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.zfill": {"tf": 1}, "phml.utils.travel.walk": {"tf": 1}}, "df": 6}}, "n": {"docs": {"phml.nodes.PropertyName.removesuffix": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.nodes.PropertyName.center": {"tf": 1}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}}, "df": 4}}}}}}, "t": {"docs": {"phml": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}}, "df": 3, "h": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 7.483314773547883}, "phml.ast.AST": {"tf": 1}, "phml.ast.AST.size": {"tf": 1.4142135623730951}, "phml.ast.AST.inspect": {"tf": 1}, "phml.ast.AST.to_phml": {"tf": 1}, "phml.ast.AST.to_json": {"tf": 1}, "phml.ast.AST.to_html": {"tf": 1}, "phml.nodes.Node": {"tf": 1.7320508075688772}, "phml.nodes.Node.position": {"tf": 2.23606797749979}, "phml.nodes.Node.type": {"tf": 1.4142135623730951}, "phml.nodes.Root": {"tf": 1.4142135623730951}, "phml.nodes.Root.tree": {"tf": 1.4142135623730951}, "phml.nodes.Root.inspect": {"tf": 1}, "phml.nodes.DocType.tree": {"tf": 1.4142135623730951}, "phml.nodes.DocType.inspect": {"tf": 1}, "phml.nodes.Element": {"tf": 3.7416573867739413}, "phml.nodes.Element.start_tag": {"tf": 1.7320508075688772}, "phml.nodes.Element.end_tag": {"tf": 1}, "phml.nodes.Element.tree": {"tf": 1.4142135623730951}, "phml.nodes.Element.inspect": {"tf": 1}, "phml.nodes.Literal.position": {"tf": 2.23606797749979}, "phml.nodes.Literal.value": {"tf": 1}, "phml.nodes.Comment.inspect": {"tf": 1}, "phml.nodes.Text.inspect": {"tf": 1}, "phml.nodes.Position": {"tf": 4.358898943540674}, "phml.nodes.Point": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName": {"tf": 2}, "phml.nodes.PropertyName.encode": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.replace": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.split": {"tf": 3.1622776601683795}, "phml.nodes.PropertyName.rsplit": {"tf": 3.4641016151377544}, "phml.nodes.PropertyName.join": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.capitalize": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.casefold": {"tf": 1}, "phml.nodes.PropertyName.title": {"tf": 1}, "phml.nodes.PropertyName.center": {"tf": 1}, "phml.nodes.PropertyName.count": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.partition": {"tf": 3.3166247903554}, "phml.nodes.PropertyName.index": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.lower": {"tf": 1}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rjust": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 3.4641016151377544}, "phml.nodes.PropertyName.splitlines": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 2}, "phml.nodes.PropertyName.upper": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}, "phml.nodes.PropertyName.removeprefix": {"tf": 2}, "phml.nodes.PropertyName.removesuffix": {"tf": 2}, "phml.nodes.PropertyName.isascii": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.islower": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.isupper": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.istitle": {"tf": 1}, "phml.nodes.PropertyName.isspace": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.isdecimal": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.isdigit": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.isnumeric": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.isalpha": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.isalnum": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.isidentifier": {"tf": 1}, "phml.nodes.PropertyName.isprintable": {"tf": 1}, "phml.nodes.PropertyName.zfill": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.format": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 2}, "phml.parser.PHMLParser": {"tf": 1}, "phml.parser.PHMLParser.__init__": {"tf": 1.4142135623730951}, "phml.parser.PHMLParser.cur": {"tf": 1.4142135623730951}, "phml.parser.Parser": {"tf": 3}, "phml.parser.Parser.parser": {"tf": 1}, "phml.parser.Parser.ast": {"tf": 1.4142135623730951}, "phml.parser.Parser.parse": {"tf": 2}, "phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 1.7320508075688772}, "phml.utils.find.find": {"tf": 2.23606797749979}, "phml.utils.find.find_after": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_after": {"tf": 1.7320508075688772}, "phml.utils.find.find_before": {"tf": 2.8284271247461903}, "phml.utils.find.find_all_before": {"tf": 2}, "phml.utils.find.find_all_between": {"tf": 2.23606797749979}, "phml.utils.misc.depth": {"tf": 2}, "phml.utils.test.test": {"tf": 4.123105625617661}, "phml.utils.transform.filter_nodes": {"tf": 2.8284271247461903}, "phml.utils.transform.remove_nodes": {"tf": 2.23606797749979}, "phml.utils.transform.map_nodes": {"tf": 2}, "phml.utils.transform.size": {"tf": 1}, "phml.utils.travel.path": {"tf": 2.23606797749979}, "phml.utils.travel.walk": {"tf": 1}, "phml.utils.travel.visit_children": {"tf": 1}, "phml.utils.travel.visit_all_after": {"tf": 1}}, "df": 98, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.23606797749979}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.nodes.PropertyName.islower": {"tf": 1}, "phml.nodes.PropertyName.isupper": {"tf": 1}, "phml.nodes.PropertyName.isspace": {"tf": 1}, "phml.nodes.PropertyName.isdecimal": {"tf": 1}, "phml.nodes.PropertyName.isdigit": {"tf": 1}, "phml.nodes.PropertyName.isnumeric": {"tf": 1}, "phml.nodes.PropertyName.isalpha": {"tf": 1}, "phml.nodes.PropertyName.isalnum": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1.7320508075688772}, "phml.utils.find.find_after": {"tf": 1}}, "df": 11}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 2}, "phml.nodes.Root.phml": {"tf": 1}}, "df": 2}}, "y": {"docs": {"phml": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}}, "df": 2}, "n": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}}, "df": 5}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "s": {"docs": {"phml.parser.Parser": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.parser.Parser": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"phml": {"tf": 4.358898943540674}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.parser.PHMLParser.__init__": {"tf": 1}, "phml.parser.Parser": {"tf": 1.4142135623730951}, "phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}, "phml.utils.travel.path": {"tf": 1}}, "df": 11}, "r": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.maketrans": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 4.242640687119285}, "phml.ast.AST": {"tf": 1}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.encode": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.split": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.endswith": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.removesuffix": {"tf": 1}, "phml.parser.Parser": {"tf": 1}, "phml.parser.Parser.parser": {"tf": 1}, "phml.parser.Parser.parse": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 1}, "phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1.7320508075688772}, "phml.utils.find.find_all_before": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.misc.depth": {"tf": 1}, "phml.utils.test.test": {"tf": 1.7320508075688772}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1.4142135623730951}, "phml.utils.transform.map_nodes": {"tf": 2.23606797749979}}, "df": 28}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"phml.nodes.Node": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {"phml": {"tf": 4.898979485566356}, "phml.nodes.Node": {"tf": 1.4142135623730951}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Root.as_dict": {"tf": 1}, "phml.nodes.Root.html": {"tf": 1}, "phml.nodes.Root.json": {"tf": 1}, "phml.nodes.DocType.as_dict": {"tf": 1}, "phml.nodes.DocType.html": {"tf": 1}, "phml.nodes.DocType.json": {"tf": 1}, "phml.nodes.Parent": {"tf": 1.4142135623730951}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Element.html": {"tf": 1}, "phml.nodes.Element.json": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}, "phml.nodes.Literal.html": {"tf": 1}, "phml.nodes.Literal.json": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.PropertyName": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.encode": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rsplit": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.lower": {"tf": 1}, "phml.nodes.PropertyName.swapcase": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.translate": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.upper": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}, "phml.nodes.PropertyName.isidentifier": {"tf": 1}, "phml.nodes.PropertyName.zfill": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 2}, "phml.parser.PHMLParser.__init__": {"tf": 1}, "phml.parser.Parser": {"tf": 2.449489742783178}, "phml.parser.Parser.parse": {"tf": 1.4142135623730951}, "phml.parser.Parser.write": {"tf": 2.449489742783178}, "phml.parser.Parser.stringify": {"tf": 2.449489742783178}, "phml.utils.find.ancestor": {"tf": 1.4142135623730951}, "phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_after": {"tf": 1.4142135623730951}, "phml.utils.find.find_before": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_before": {"tf": 1.7320508075688772}, "phml.utils.find.find_all_between": {"tf": 3.1622776601683795}, "phml.utils.test.test": {"tf": 2.23606797749979}, "phml.utils.transform.filter_nodes": {"tf": 1.7320508075688772}, "phml.utils.transform.remove_nodes": {"tf": 1.7320508075688772}, "phml.utils.transform.map_nodes": {"tf": 2}, "phml.utils.travel.path": {"tf": 2}, "phml.utils.travel.walk": {"tf": 1}}, "df": 49, "p": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"phml.nodes.PropertyName.isascii": {"tf": 1}}, "df": 1, "l": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.nodes.Position": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.istitle": {"tf": 1.7320508075688772}}, "df": 1, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.title": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}}, "df": 3, "s": {"docs": {"phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1.4142135623730951}}, "df": 3}}}, "g": {"docs": {"phml.nodes.Element.start_tag": {"tf": 1.7320508075688772}, "phml.nodes.Element.end_tag": {"tf": 1.4142135623730951}}, "df": 2, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Element": {"tf": 2.23606797749979}, "phml.nodes.Text": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {"phml.nodes.PropertyName.expandtabs": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.expandtabs": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.translate": {"tf": 2}, "phml.nodes.PropertyName.maketrans": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.PropertyName.splitlines": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}, "phml.nodes.PropertyName.isascii": {"tf": 1}, "phml.nodes.PropertyName.islower": {"tf": 1}, "phml.nodes.PropertyName.isupper": {"tf": 1}, "phml.nodes.PropertyName.istitle": {"tf": 1}, "phml.nodes.PropertyName.isspace": {"tf": 1}, "phml.nodes.PropertyName.isdecimal": {"tf": 1}, "phml.nodes.PropertyName.isdigit": {"tf": 1}, "phml.nodes.PropertyName.isnumeric": {"tf": 1}, "phml.nodes.PropertyName.isalpha": {"tf": 1}, "phml.nodes.PropertyName.isalnum": {"tf": 1}, "phml.nodes.PropertyName.isidentifier": {"tf": 1}, "phml.nodes.PropertyName.isprintable": {"tf": 1}, "phml.parser.PHMLParser.__init__": {"tf": 1}, "phml.utils.test.test": {"tf": 1.4142135623730951}}, "df": 20}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.zfill": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"phml.ast.AST.size": {"tf": 1}, "phml.ast.AST.inspect": {"tf": 1}, "phml.nodes.Node": {"tf": 2.23606797749979}, "phml.nodes.Root": {"tf": 1}, "phml.nodes.Root.tree": {"tf": 1}, "phml.nodes.Root.inspect": {"tf": 1}, "phml.nodes.DocType.tree": {"tf": 1}, "phml.nodes.DocType.inspect": {"tf": 1}, "phml.nodes.Element.tree": {"tf": 1}, "phml.nodes.Element.inspect": {"tf": 1}, "phml.nodes.Comment.inspect": {"tf": 1}, "phml.nodes.Text.inspect": {"tf": 1}, "phml.parser.Parser.ast": {"tf": 1}, "phml.utils.misc.depth": {"tf": 1.4142135623730951}, "phml.utils.transform.filter_nodes": {"tf": 2}, "phml.utils.transform.remove_nodes": {"tf": 1.4142135623730951}, "phml.utils.transform.map_nodes": {"tf": 1.7320508075688772}, "phml.utils.travel.visit_all_after": {"tf": 1}}, "df": 18}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.PropertyName.translate": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.maketrans": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"phml.nodes.PropertyName.maketrans": {"tf": 1}, "phml.parser.Parser": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"phml.utils.transform.map_nodes": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.utils.travel.walk": {"tf": 1}, "phml.utils.travel.visit_children": {"tf": 1}, "phml.utils.travel.visit_all_after": {"tf": 1}}, "df": 3}}}}}}, "y": {"docs": {"phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Root": {"tf": 1}, "phml.nodes.Element": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.nodes.Text": {"tf": 1.7320508075688772}, "phml.nodes.Text.phml": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.split": {"tf": 1}}, "df": 4}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}, "phml.nodes.PropertyName.isidentifier": {"tf": 1}, "phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.test.test": {"tf": 3}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}}, "df": 11, "s": {"docs": {"phml.utils.test.test": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Node.type": {"tf": 1}, "phml.nodes.DocType": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Text": {"tf": 1.4142135623730951}, "phml.utils.test.test": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1.4142135623730951}, "phml.utils.validate.validate": {"tf": 1}, "phml.utils.validate.parent": {"tf": 1}}, "df": 8, "s": {"docs": {"phml.file_types": {"tf": 1}, "phml.utils.test.test": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.partition": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rpartition": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}}, "df": 4}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {"phml": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.isidentifier": {"tf": 1.4142135623730951}}, "df": 1}, "d": {"docs": {"phml.nodes.PropertyName.format": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1}}, "df": 2}}}}}}}}}, "s": {"docs": {"phml": {"tf": 4.58257569495584}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.Element": {"tf": 2}, "phml.nodes.Element.start_tag": {"tf": 1}, "phml.nodes.Literal.position": {"tf": 1}, "phml.nodes.Position": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.encode": {"tf": 1}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.join": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.title": {"tf": 1}, "phml.nodes.PropertyName.center": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.expandtabs": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.find": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.partition": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.index": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.ljust": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rindex": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.rjust": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.splitlines": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.removesuffix": {"tf": 1}, "phml.nodes.PropertyName.isascii": {"tf": 1}, "phml.nodes.PropertyName.islower": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.isupper": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.istitle": {"tf": 1}, "phml.nodes.PropertyName.isspace": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.isdecimal": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.isdigit": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.isnumeric": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.isalpha": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.isalnum": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.isidentifier": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isprintable": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.zfill": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1.4142135623730951}, "phml.parser.PHMLParser.__init__": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1.4142135623730951}, "phml.utils.test.test": {"tf": 1.7320508075688772}, "phml.utils.transform.remove_nodes": {"tf": 1.4142135623730951}, "phml.utils.transform.map_nodes": {"tf": 1.7320508075688772}, "phml.utils.travel.path": {"tf": 1}}, "df": 50, "n": {"docs": {"phml": {"tf": 1}}, "df": 1}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.isidentifier": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {"phml": {"tf": 4}, "phml.ast.AST.size": {"tf": 1}, "phml.nodes.Node": {"tf": 1.7320508075688772}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.Literal": {"tf": 1}, "phml.nodes.Literal.position": {"tf": 1}, "phml.nodes.Position": {"tf": 1.7320508075688772}, "phml.nodes.Point": {"tf": 2}, "phml.nodes.PropertyName.encode": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.join": {"tf": 1}, "phml.nodes.PropertyName.count": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.find": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rindex": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.nodes.PropertyName.splitlines": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.isascii": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.islower": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isupper": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.istitle": {"tf": 1}, "phml.nodes.PropertyName.isspace": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isdecimal": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isdigit": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isnumeric": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isalpha": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isalnum": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isprintable": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 2}, "phml.parser.PHMLParser": {"tf": 1}, "phml.parser.PHMLParser.cur": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.misc.depth": {"tf": 1.4142135623730951}, "phml.utils.test.test": {"tf": 1.4142135623730951}, "phml.utils.travel.path": {"tf": 1}}, "df": 43, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 2.449489742783178}}, "df": 1}}}}, "t": {"docs": {"phml.nodes.PropertyName.count": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1.4142135623730951}}, "df": 6, "o": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Element": {"tf": 1.4142135623730951}, "phml.nodes.Literal.position": {"tf": 1}, "phml.nodes.Position": {"tf": 1}}, "df": 4}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.count": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}}, "df": 5}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.Point": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"phml.nodes.PropertyName.maketrans": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}}, "df": 1}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Position": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Root.phml": {"tf": 1}, "phml.nodes.DocType.phml": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1}, "phml.nodes.Comment.phml": {"tf": 1}, "phml.nodes.Text.phml": {"tf": 1}}, "df": 5}}}}, "x": {"docs": {"phml.nodes.Position": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 2}, "phml.utils.test.test": {"tf": 2}}, "df": 7, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Point": {"tf": 1.7320508075688772}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utils.find.find_all_between": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.parser.PHMLParser.__init__": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.parser.Parser": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.ast.AST.inspect": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Root.inspect": {"tf": 1}, "phml.nodes.DocType.inspect": {"tf": 1}, "phml.nodes.Element.inspect": {"tf": 1}, "phml.nodes.Comment.inspect": {"tf": 1}, "phml.nodes.Text.inspect": {"tf": 1}}, "df": 5}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.join": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.7320508075688772}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"phml.utils.test.test": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Element": {"tf": 1}, "phml.nodes.Position": {"tf": 1}}, "df": 2}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"phml.utils.travel.path": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}}, "df": 1}, "d": {"docs": {"phml.nodes.PropertyName.splitlines": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml.utils.find.find_all_between": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.parser.PHMLParser": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.PHMLParser.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {"phml": {"tf": 3.605551275463989}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Element.start_tag": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1}, "phml.nodes.Position": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.nodes.PropertyName.isprintable": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1.4142135623730951}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.test.test": {"tf": 1}, "phml.utils.travel.walk": {"tf": 1}}, "df": 12, "s": {"docs": {"phml.nodes.Parent": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.PropertyName.isprintable": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.parser.Parser": {"tf": 1}, "phml.utils.misc.depth": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"phml.utils.test.test": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.utils.travel.walk": {"tf": 1}, "phml.utils.travel.visit_children": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {"phml": {"tf": 4}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Element": {"tf": 2}, "phml.nodes.Element.start_tag": {"tf": 1}, "phml.nodes.Literal.position": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.PropertyName": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.expandtabs": {"tf": 1}, "phml.nodes.PropertyName.partition": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}, "phml.nodes.PropertyName.removeprefix": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.removesuffix": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isascii": {"tf": 1}, "phml.nodes.PropertyName.islower": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isupper": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.istitle": {"tf": 1}, "phml.nodes.PropertyName.isspace": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isdecimal": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isdigit": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isnumeric": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isalpha": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isalnum": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isidentifier": {"tf": 1}, "phml.nodes.PropertyName.isprintable": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.maketrans": {"tf": 1.7320508075688772}, "phml.parser.PHMLParser.__init__": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 1}, "phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.test.test": {"tf": 2.23606797749979}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1}}, "df": 44}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Position": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}}, "df": 2, "s": {"docs": {"phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Element": {"tf": 1.4142135623730951}, "phml.nodes.Literal.position": {"tf": 1}}, "df": 4}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 3.1622776601683795}, "phml.nodes.Node": {"tf": 2}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Root": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.Element": {"tf": 2}, "phml.nodes.Literal.position": {"tf": 1}, "phml.nodes.Literal.value": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 2.449489742783178}, "phml.parser.Parser": {"tf": 1}, "phml.parser.Parser.parse": {"tf": 1.4142135623730951}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.test.test": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1}}, "df": 20, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1}, "phml.nodes.PropertyName.join": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 1}}, "df": 3}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_before": {"tf": 1.4142135623730951}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utils.transform.filter_nodes": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1.7320508075688772}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.PropertyName.format": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1}}, "df": 2}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {"phml.nodes.Element": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.PropertyName.splitlines": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"phml.nodes.PropertyName.splitlines": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"phml": {"tf": 2}, "phml.parser.Parser": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}, "phml.utils.validate.validate": {"tf": 1}, "phml.utils.validate.parent": {"tf": 1}, "phml.utils.validate.literal": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 2}, "phml.utils.transform.filter_nodes": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Root.phml": {"tf": 1}, "phml.nodes.DocType.phml": {"tf": 1}, "phml.nodes.Element.end_tag": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1}, "phml.nodes.Comment.phml": {"tf": 1}, "phml.nodes.Text.phml": {"tf": 1}}, "df": 6, "s": {"docs": {"phml.nodes.Element.start_tag": {"tf": 1}, "phml.parser.Parser.parser": {"tf": 1}}, "df": 2}}, "t": {"docs": {"phml.nodes.Root.phml": {"tf": 1}, "phml.nodes.DocType.phml": {"tf": 1}, "phml.nodes.Element.start_tag": {"tf": 1}, "phml.nodes.Element.end_tag": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1}, "phml.nodes.Comment.phml": {"tf": 1}, "phml.nodes.Text.phml": {"tf": 1}, "phml.parser.PHMLParser": {"tf": 1}}, "df": 8, "i": {"docs": {}, "df": 0, "n": {"docs": {"phml.parser.Parser.parser": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "y": {"docs": {"phml": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.format": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.PropertyName": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.PropertyName.splitlines": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}, "phml.nodes.PropertyName.replace": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.translate": {"tf": 1}}, "df": 3, "d": {"docs": {"phml.nodes.PropertyName.replace": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "r": {"docs": {"phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.isprintable": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Position": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.Node.type": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"phml.nodes.Root": {"tf": 1}, "phml.nodes.DocType": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.Element": {"tf": 1.7320508075688772}, "phml.nodes.Literal": {"tf": 1}, "phml.nodes.Comment": {"tf": 1}, "phml.nodes.Text": {"tf": 1}, "phml.nodes.Position": {"tf": 2}, "phml.nodes.Point": {"tf": 2}}, "df": 9}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Root.tree": {"tf": 1}, "phml.nodes.DocType.tree": {"tf": 1}, "phml.nodes.Element.tree": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 2}}, "df": 1}}}, "s": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.ast.AST.to_html": {"tf": 1}}, "df": 2}, "r": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isidentifier": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {"phml.parser.PHMLParser.__init__": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Node": {"tf": 1}, "phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.join": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.PropertyName.splitlines": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}, "phml.parser.Parser.parse": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {"phml.nodes.PropertyName.capitalize": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.ast.AST.inspect": {"tf": 1}, "phml.nodes.Root.inspect": {"tf": 1}, "phml.nodes.DocType.inspect": {"tf": 1}, "phml.nodes.Element.start_tag": {"tf": 1}, "phml.nodes.Element.inspect": {"tf": 1}, "phml.nodes.Comment.inspect": {"tf": 1}, "phml.nodes.Text.inspect": {"tf": 1}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.capitalize": {"tf": 1}, "phml.nodes.PropertyName.casefold": {"tf": 1}, "phml.nodes.PropertyName.title": {"tf": 1}, "phml.nodes.PropertyName.center": {"tf": 1}, "phml.nodes.PropertyName.count": {"tf": 1}, "phml.nodes.PropertyName.expandtabs": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.lower": {"tf": 1}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rindex": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.splitlines": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.nodes.PropertyName.upper": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}, "phml.nodes.PropertyName.removeprefix": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.removesuffix": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.isascii": {"tf": 1}, "phml.nodes.PropertyName.islower": {"tf": 1}, "phml.nodes.PropertyName.isupper": {"tf": 1}, "phml.nodes.PropertyName.istitle": {"tf": 1}, "phml.nodes.PropertyName.isspace": {"tf": 1}, "phml.nodes.PropertyName.isdecimal": {"tf": 1}, "phml.nodes.PropertyName.isdigit": {"tf": 1}, "phml.nodes.PropertyName.isnumeric": {"tf": 1}, "phml.nodes.PropertyName.isalpha": {"tf": 1}, "phml.nodes.PropertyName.isalnum": {"tf": 1}, "phml.nodes.PropertyName.isidentifier": {"tf": 1}, "phml.nodes.PropertyName.isprintable": {"tf": 1}, "phml.nodes.PropertyName.format": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}, "phml.parser.Parser": {"tf": 1}, "phml.utils.find.find": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1}}, "df": 51, "s": {"docs": {"phml.nodes.Root.phml": {"tf": 1}, "phml.nodes.DocType.phml": {"tf": 1}, "phml.nodes.Element.start_tag": {"tf": 1}, "phml.nodes.Element.end_tag": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1}, "phml.nodes.Comment.phml": {"tf": 1}, "phml.nodes.Text.phml": {"tf": 1}, "phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.partition": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rpartition": {"tf": 1.4142135623730951}, "phml.utils.find.ancestor": {"tf": 1}, "phml.utils.find.find": {"tf": 1.7320508075688772}, "phml.utils.find.find_after": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_after": {"tf": 1.4142135623730951}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.test.test": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1.7320508075688772}, "phml.utils.travel.path": {"tf": 1}}, "df": 21}, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.join": {"tf": 1}, "phml.utils.test.test": {"tf": 1}}, "df": 2}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Position": {"tf": 1.7320508075688772}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.PropertyName.title": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}}, "df": 5, "d": {"docs": {"phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.nodes.PropertyName.removeprefix": {"tf": 1}, "phml.nodes.PropertyName.removesuffix": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}}, "df": 7}, "s": {"docs": {"phml.utils.transform.remove_nodes": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utils.transform.remove_nodes": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.parser.PHMLParser.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.parser.PHMLParser.cur": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.Parser.ast": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml.parser.Parser": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}, "phml.utils.transform.size": {"tf": 1}, "phml.utils.travel.walk": {"tf": 1}, "phml.utils.travel.visit_all_after": {"tf": 1}}, "df": 5}}}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Root": {"tf": 1.7320508075688772}, "phml.nodes.Root.as_dict": {"tf": 1}, "phml.nodes.Root.html": {"tf": 1}, "phml.nodes.Root.json": {"tf": 1}, "phml.nodes.DocType.as_dict": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.misc.depth": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1.4142135623730951}, "phml.utils.transform.remove_nodes": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1}, "phml.utils.travel.path": {"tf": 1}}, "df": 12}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.isascii": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"phml.nodes.PropertyName.join": {"tf": 1.4142135623730951}}, "df": 1}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.rfind": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"phml.nodes.PropertyName.rindex": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.rjust": {"tf": 1}, "phml.utils.travel.walk": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utils.test.test": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1}, "phml.utils.test.test": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "s": {"docs": {"phml": {"tf": 1}, "phml.ast.AST": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.ast.AST.inspect": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rsplit": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.format": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1}, "phml.parser.PHMLParser": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utils.transform.remove_nodes": {"tf": 1}, "phml.utils.travel.path": {"tf": 1}}, "df": 15}, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.rsplit": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 2.449489742783178}, "phml.file_types": {"tf": 1}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Element.start_tag": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.PropertyName.encode": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.casefold": {"tf": 1}, "phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}, "phml.utils.misc.depth": {"tf": 1}, "phml.utils.test.test": {"tf": 1.4142135623730951}, "phml.utils.transform.map_nodes": {"tf": 1}}, "df": 16, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.format": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.format": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"phml.nodes.PropertyName.istitle": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.Element": {"tf": 1}, "phml.parser.Parser.parse": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"phml.utils.transform.map_nodes": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Text": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.partition": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.index": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rpartition": {"tf": 1.4142135623730951}, "phml.utils.find.ancestor": {"tf": 1}, "phml.utils.find.find": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}}, "df": 11}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"phml.nodes.PropertyName.find": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_before": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.travel.path": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.parser.Parser.parse": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.nodes.Position": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.capitalize": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 1.4142135623730951}, "phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1.4142135623730951}, "phml.utils.find.find_before": {"tf": 1.7320508075688772}, "phml.utils.travel.walk": {"tf": 1}}, "df": 9}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2}, "phml.file_types": {"tf": 1}, "phml.nodes.Position": {"tf": 1.4142135623730951}, "phml.nodes.Point": {"tf": 2}, "phml.parser.Parser": {"tf": 1.4142135623730951}, "phml.parser.Parser.parse": {"tf": 1.4142135623730951}, "phml.parser.Parser.write": {"tf": 1.7320508075688772}, "phml.parser.Parser.stringify": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.parser.Parser": {"tf": 1.4142135623730951}}, "df": 2}}, "l": {"docs": {"phml.nodes.PropertyName.center": {"tf": 1}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1}, "phml.nodes.PropertyName.zfill": {"tf": 1}}, "df": 4}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.utils.transform.filter_nodes": {"tf": 1.4142135623730951}, "phml.utils.transform.remove_nodes": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utils.transform.filter_nodes": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Node.position": {"tf": 1.4142135623730951}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Root": {"tf": 1}, "phml.nodes.Element": {"tf": 2.8284271247461903}, "phml.nodes.Literal.position": {"tf": 1.4142135623730951}, "phml.nodes.Position": {"tf": 1.7320508075688772}, "phml.nodes.Point": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.zfill": {"tf": 1}}, "df": 8, "s": {"docs": {"phml.nodes.Position": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.utils.transform.filter_nodes": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Node": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}, "phml.nodes.PropertyName.isascii": {"tf": 1}, "phml.nodes.PropertyName.islower": {"tf": 1}, "phml.nodes.PropertyName.isupper": {"tf": 1}, "phml.nodes.PropertyName.istitle": {"tf": 1}, "phml.nodes.PropertyName.isspace": {"tf": 1}, "phml.nodes.PropertyName.isdecimal": {"tf": 1}, "phml.nodes.PropertyName.isdigit": {"tf": 1}, "phml.nodes.PropertyName.isnumeric": {"tf": 1}, "phml.nodes.PropertyName.isalpha": {"tf": 1}, "phml.nodes.PropertyName.isalnum": {"tf": 1}, "phml.nodes.PropertyName.isidentifier": {"tf": 1}, "phml.nodes.PropertyName.isprintable": {"tf": 1}}, "df": 15}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"phml": {"tf": 4}, "phml.ast.AST.size": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1.4142135623730951}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Root": {"tf": 1.4142135623730951}, "phml.nodes.Root.tree": {"tf": 1}, "phml.nodes.Root.inspect": {"tf": 1}, "phml.nodes.Root.phml": {"tf": 1.4142135623730951}, "phml.nodes.DocType.tree": {"tf": 1}, "phml.nodes.DocType.inspect": {"tf": 1}, "phml.nodes.DocType.phml": {"tf": 1.4142135623730951}, "phml.nodes.Element": {"tf": 1.4142135623730951}, "phml.nodes.Element.tree": {"tf": 1}, "phml.nodes.Element.inspect": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1.4142135623730951}, "phml.nodes.Literal.position": {"tf": 1.4142135623730951}, "phml.nodes.Comment.inspect": {"tf": 1}, "phml.nodes.Comment.phml": {"tf": 1.4142135623730951}, "phml.nodes.Text.inspect": {"tf": 1}, "phml.nodes.Text.phml": {"tf": 1.4142135623730951}, "phml.nodes.Position": {"tf": 3}, "phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.replace": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.split": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rsplit": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.join": {"tf": 1}, "phml.nodes.PropertyName.capitalize": {"tf": 1}, "phml.nodes.PropertyName.casefold": {"tf": 1}, "phml.nodes.PropertyName.title": {"tf": 1}, "phml.nodes.PropertyName.center": {"tf": 1}, "phml.nodes.PropertyName.count": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.expandtabs": {"tf": 1}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.lower": {"tf": 1}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.splitlines": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.upper": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}, "phml.nodes.PropertyName.removeprefix": {"tf": 1}, "phml.nodes.PropertyName.removesuffix": {"tf": 1}, "phml.nodes.PropertyName.isprintable": {"tf": 1}, "phml.nodes.PropertyName.zfill": {"tf": 1}, "phml.nodes.PropertyName.format": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}, "phml.parser.Parser": {"tf": 1}, "phml.parser.Parser.ast": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utils.transform.map_nodes": {"tf": 1}, "phml.utils.transform.size": {"tf": 1}, "phml.utils.travel.path": {"tf": 2}}, "df": 57, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.Point": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.nodes.Root": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.zfill": {"tf": 1}, "phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}, "phml.utils.test.test": {"tf": 1}, "phml.utils.validate.validate": {"tf": 1}, "phml.utils.validate.parent": {"tf": 1}, "phml.utils.validate.literal": {"tf": 1}}, "df": 13, "e": {"docs": {"phml": {"tf": 1}, "phml.nodes.Point": {"tf": 1}, "phml.nodes.PropertyName.islower": {"tf": 1}, "phml.nodes.PropertyName.isupper": {"tf": 1}, "phml.nodes.PropertyName.isspace": {"tf": 1}, "phml.nodes.PropertyName.isdecimal": {"tf": 1}, "phml.nodes.PropertyName.isdigit": {"tf": 1}, "phml.nodes.PropertyName.isnumeric": {"tf": 1}, "phml.nodes.PropertyName.isalpha": {"tf": 1}, "phml.nodes.PropertyName.isalnum": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}, "phml.utils.travel.path": {"tf": 1}}, "df": 12, "s": {"docs": {"phml.nodes.PropertyName.istitle": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.istitle": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.maketrans": {"tf": 1}, "phml.parser.Parser": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}}, "df": 7}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "r": {"docs": {"phml": {"tf": 2.8284271247461903}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Root": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.PropertyName": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.translate": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isidentifier": {"tf": 1}, "phml.nodes.PropertyName.isprintable": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1.4142135623730951}, "phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 1}, "phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}}, "df": 17, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.nodes.PropertyName.removeprefix": {"tf": 1}, "phml.nodes.PropertyName.removesuffix": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1}}, "df": 5}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.PropertyName.translate": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.maketrans": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}, "b": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Node": {"tf": 1}, "phml.nodes.PropertyName": {"tf": 2.449489742783178}, "phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}}, "df": 4}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.PropertyName.count": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.Parent": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.encode": {"tf": 1.4142135623730951}, "phml.utils.travel.path": {"tf": 1}}, "df": 4, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}, "phml.nodes.PropertyName.removeprefix": {"tf": 1}, "phml.nodes.PropertyName.removesuffix": {"tf": 1}, "phml.nodes.PropertyName.isascii": {"tf": 1}, "phml.nodes.PropertyName.islower": {"tf": 1}, "phml.nodes.PropertyName.isupper": {"tf": 1}, "phml.nodes.PropertyName.istitle": {"tf": 1}, "phml.nodes.PropertyName.isspace": {"tf": 1}, "phml.nodes.PropertyName.isdecimal": {"tf": 1}, "phml.nodes.PropertyName.isdigit": {"tf": 1}, "phml.nodes.PropertyName.isnumeric": {"tf": 1}, "phml.nodes.PropertyName.isalpha": {"tf": 1}, "phml.nodes.PropertyName.isalnum": {"tf": 1}, "phml.nodes.PropertyName.isidentifier": {"tf": 1}, "phml.nodes.PropertyName.isprintable": {"tf": 1}}, "df": 17}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Element.start_tag": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.PropertyName.translate": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.count": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.endswith": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_between": {"tf": 2}, "phml.utils.test.test": {"tf": 1.4142135623730951}}, "df": 10, "[": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml.utils.find.ancestor": {"tf": 1}, "phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.utils.test.test": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"phml.utils.test.test": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.PropertyName.replace": {"tf": 2}, "phml.nodes.PropertyName.count": {"tf": 1}}, "df": 2}}}}}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.replace": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.ast.AST.inspect": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1}, "phml.nodes.PropertyName.count": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.index": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rfind": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rindex": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.startswith": {"tf": 2}, "phml.nodes.PropertyName.endswith": {"tf": 2}, "phml.nodes.PropertyName.isidentifier": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.format": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.format_map": {"tf": 1.4142135623730951}, "phml.utils.misc.depth": {"tf": 1}, "phml.utils.test.test": {"tf": 1.4142135623730951}, "phml.utils.travel.walk": {"tf": 1}}, "df": 16, "o": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.utils.test.test": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}}, "df": 3, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.449489742783178}}, "df": 1}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Literal.position": {"tf": 1}, "phml.nodes.Position": {"tf": 2.23606797749979}, "phml.nodes.Point": {"tf": 2}}, "df": 5}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.Root.phml": {"tf": 1}, "phml.nodes.DocType.phml": {"tf": 1}, "phml.nodes.Element.start_tag": {"tf": 1}, "phml.nodes.Element.end_tag": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1}, "phml.nodes.Comment.phml": {"tf": 1}, "phml.nodes.Text.phml": {"tf": 1}, "phml.nodes.PropertyName": {"tf": 2.23606797749979}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.removeprefix": {"tf": 1}, "phml.nodes.PropertyName.removesuffix": {"tf": 1}, "phml.nodes.PropertyName.format": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}, "phml.parser.Parser.parse": {"tf": 1}, "phml.utils.test.test": {"tf": 1}}, "df": 17, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.ast.AST.to_phml": {"tf": 1}, "phml.ast.AST.to_json": {"tf": 1}, "phml.ast.AST.to_html": {"tf": 1}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Root.html": {"tf": 1}, "phml.nodes.Root.json": {"tf": 1}, "phml.nodes.Root.phml": {"tf": 1}, "phml.nodes.DocType.html": {"tf": 1}, "phml.nodes.DocType.json": {"tf": 1}, "phml.nodes.DocType.phml": {"tf": 1}, "phml.nodes.Element.html": {"tf": 1}, "phml.nodes.Element.json": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1}, "phml.nodes.Literal.html": {"tf": 1}, "phml.nodes.Literal.json": {"tf": 1}, "phml.nodes.Comment.phml": {"tf": 1}, "phml.nodes.Text.phml": {"tf": 1}, "phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.encode": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.split": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.rsplit": {"tf": 2}, "phml.nodes.PropertyName.join": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.capitalize": {"tf": 1}, "phml.nodes.PropertyName.casefold": {"tf": 1}, "phml.nodes.PropertyName.title": {"tf": 1}, "phml.nodes.PropertyName.center": {"tf": 1}, "phml.nodes.PropertyName.count": {"tf": 1}, "phml.nodes.PropertyName.partition": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.lower": {"tf": 1}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.splitlines": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.upper": {"tf": 1}, "phml.nodes.PropertyName.removeprefix": {"tf": 2}, "phml.nodes.PropertyName.removesuffix": {"tf": 2.23606797749979}, "phml.nodes.PropertyName.isascii": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.islower": {"tf": 2.23606797749979}, "phml.nodes.PropertyName.isupper": {"tf": 2.23606797749979}, "phml.nodes.PropertyName.istitle": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.isspace": {"tf": 2.23606797749979}, "phml.nodes.PropertyName.isdecimal": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.isdigit": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.isnumeric": {"tf": 2.23606797749979}, "phml.nodes.PropertyName.isalpha": {"tf": 2.23606797749979}, "phml.nodes.PropertyName.isalnum": {"tf": 2.23606797749979}, "phml.nodes.PropertyName.isidentifier": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isprintable": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.zfill": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.maketrans": {"tf": 1}, "phml.parser.Parser": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}}, "df": 57, "s": {"docs": {"phml.nodes.Literal.value": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.join": {"tf": 1}, "phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1.4142135623730951}}, "df": 10}, "[": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.PropertyName.removeprefix": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.encode": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml.utils.test.test": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}, "phml.nodes.Element.start_tag": {"tf": 1}, "phml.nodes.Position": {"tf": 2}, "phml.nodes.PropertyName.title": {"tf": 1}, "phml.nodes.PropertyName.count": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.find": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.index": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rfind": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rindex": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.startswith": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.endswith": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_between": {"tf": 1.7320508075688772}, "phml.utils.transform.remove_nodes": {"tf": 1}}, "df": 13, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.travel.path": {"tf": 1}, "phml.utils.travel.visit_all_after": {"tf": 1}}, "df": 6}}}, "s": {"docs": {"phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.removeprefix": {"tf": 1}}, "df": 3, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.nodes.PropertyName.startswith": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"phml.utils.transform.filter_nodes": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.expandtabs": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utils.find.find_after": {"tf": 1.7320508075688772}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1.7320508075688772}, "phml.utils.find.find_all_between": {"tf": 1}}, "df": 4, "s": {"docs": {"phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1.4142135623730951}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}}, "df": 4}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.utils.transform.map_nodes": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.utils.transform.map_nodes": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.Element": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"phml": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}, "phml.nodes.PropertyName.isidentifier": {"tf": 1}}, "df": 6}}, "b": {"docs": {"phml.nodes.PropertyName.count": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.find": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.index": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.rfind": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.rindex": {"tf": 1.7320508075688772}}, "df": 5, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.count": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.PropertyName.format": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.format_map": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.casefold": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"phml.nodes.PropertyName.endswith": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.removesuffix": {"tf": 2}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {"phml": {"tf": 2}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.Node": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.maketrans": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Parent": {"tf": 1}, "phml.nodes.Position": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.parser.Parser.parse": {"tf": 1}, "phml.utils.test.test": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1}}, "df": 6}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"phml.nodes.Node": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"phml.nodes.Position": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"phml.nodes.PropertyName": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"phml.nodes.Element.start_tag": {"tf": 1}}, "df": 1}}, "p": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rsplit": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rsplit": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.partition": {"tf": 2.449489742783178}, "phml.nodes.PropertyName.rpartition": {"tf": 2.449489742783178}}, "df": 4}}}}}}}, "t": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.utils.find.ancestor": {"tf": 1.4142135623730951}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.utils.test.test": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"phml.utils.test.test": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Text": {"tf": 1.7320508075688772}, "phml.nodes.Position": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.center": {"tf": 1}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1}}, "df": 3, "s": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.expandtabs": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.center": {"tf": 1}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}}, "df": 6}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml.nodes.PropertyName.capitalize": {"tf": 1}, "phml.nodes.PropertyName.title": {"tf": 1}}, "df": 2}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.rsplit": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.PropertyName.rsplit": {"tf": 1}}, "df": 1}}}}}}}}, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.count": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}}, "df": 5}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.count": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.nodes.Node": {"tf": 1}}, "df": 2}}}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.ast.AST.to_json": {"tf": 1}, "phml.nodes.Node": {"tf": 2}, "phml.nodes.Root.json": {"tf": 1}, "phml.nodes.DocType.json": {"tf": 1}, "phml.nodes.Element.json": {"tf": 1}, "phml.nodes.Literal.json": {"tf": 1}, "phml.parser.Parser": {"tf": 1}, "phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}}, "df": 9}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.PropertyName.join": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.utils.test.test": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1}}, "df": 2}}}}}}}}}, "v": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.6457513110645907}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Root": {"tf": 1}, "phml.nodes.Element": {"tf": 1.4142135623730951}, "phml.nodes.Literal": {"tf": 1}, "phml.nodes.Literal.position": {"tf": 1}, "phml.nodes.Literal.value": {"tf": 1}, "phml.nodes.Text": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rsplit": {"tf": 1.4142135623730951}, "phml.utils.test.test": {"tf": 1}}, "df": 13, "s": {"docs": {"phml.nodes.Node": {"tf": 1}, "phml.nodes.Literal.value": {"tf": 1}, "phml.nodes.PropertyName.encode": {"tf": 1}, "phml.utils.test.test": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.isidentifier": {"tf": 1}, "phml.utils.test.test": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.utils.validate.validate": {"tf": 1}, "phml.utils.validate.parent": {"tf": 1}, "phml.utils.validate.literal": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.parser.Parser.parse": {"tf": 1}}, "df": 2, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Node.type": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1}, "phml.nodes.PropertyName.capitalize": {"tf": 1}, "phml.nodes.PropertyName.casefold": {"tf": 1}, "phml.nodes.PropertyName.title": {"tf": 1}, "phml.nodes.PropertyName.format": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1}}, "df": 6}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"phml.nodes.Root.inspect": {"tf": 1}, "phml.nodes.DocType.inspect": {"tf": 1}, "phml.nodes.Element.inspect": {"tf": 1}, "phml.nodes.Comment.inspect": {"tf": 1}, "phml.nodes.Text.inspect": {"tf": 1}}, "df": 5}}, "a": {"docs": {"phml.nodes.PropertyName.translate": {"tf": 1}}, "df": 1}}}, "a": {"docs": {"phml": {"tf": 4.795831523312719}, "phml.ast.AST.to_phml": {"tf": 1}, "phml.ast.AST.to_json": {"tf": 1}, "phml.ast.AST.to_html": {"tf": 1}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1.7320508075688772}, "phml.nodes.Node.type": {"tf": 1.4142135623730951}, "phml.nodes.Root": {"tf": 2.23606797749979}, "phml.nodes.Root.as_dict": {"tf": 1}, "phml.nodes.Root.json": {"tf": 1}, "phml.nodes.DocType": {"tf": 1}, "phml.nodes.DocType.as_dict": {"tf": 1}, "phml.nodes.DocType.json": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.Element": {"tf": 2.449489742783178}, "phml.nodes.Element.json": {"tf": 1}, "phml.nodes.Literal": {"tf": 1.4142135623730951}, "phml.nodes.Literal.position": {"tf": 1.7320508075688772}, "phml.nodes.Literal.as_dict": {"tf": 1}, "phml.nodes.Literal.json": {"tf": 1}, "phml.nodes.Comment": {"tf": 1}, "phml.nodes.Text": {"tf": 1}, "phml.nodes.Position": {"tf": 1.7320508075688772}, "phml.nodes.Point": {"tf": 2.6457513110645907}, "phml.nodes.PropertyName": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.encode": {"tf": 1}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.join": {"tf": 1}, "phml.nodes.PropertyName.capitalize": {"tf": 1}, "phml.nodes.PropertyName.casefold": {"tf": 1}, "phml.nodes.PropertyName.title": {"tf": 1}, "phml.nodes.PropertyName.center": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.expandtabs": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.partition": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.ljust": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.lower": {"tf": 1}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.splitlines": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.upper": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}, "phml.nodes.PropertyName.removeprefix": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.removesuffix": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.islower": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isupper": {"tf": 1}, "phml.nodes.PropertyName.istitle": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isspace": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isdecimal": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.isdigit": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.isnumeric": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isalpha": {"tf": 1}, "phml.nodes.PropertyName.isalnum": {"tf": 1}, "phml.nodes.PropertyName.isidentifier": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isprintable": {"tf": 1}, "phml.nodes.PropertyName.zfill": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.format": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 2}, "phml.parser.Parser": {"tf": 1}, "phml.parser.Parser.parse": {"tf": 1}, "phml.parser.Parser.write": {"tf": 2}, "phml.parser.Parser.stringify": {"tf": 2}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.misc.depth": {"tf": 1}, "phml.utils.test.test": {"tf": 1.4142135623730951}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1.4142135623730951}, "phml.utils.transform.map_nodes": {"tf": 2.449489742783178}, "phml.utils.travel.path": {"tf": 1.7320508075688772}, "phml.utils.validate.validate": {"tf": 1}, "phml.utils.validate.parent": {"tf": 1}, "phml.utils.validate.literal": {"tf": 1}}, "df": 80, "s": {"docs": {"phml": {"tf": 4}, "phml.ast.AST.to_phml": {"tf": 1}, "phml.ast.AST.to_json": {"tf": 1}, "phml.ast.AST.to_html": {"tf": 1}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Root": {"tf": 1.7320508075688772}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.PropertyName.encode": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.join": {"tf": 1}, "phml.nodes.PropertyName.count": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}, "phml.nodes.PropertyName.isidentifier": {"tf": 1}, "phml.parser.Parser": {"tf": 1.4142135623730951}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1}, "phml.utils.travel.walk": {"tf": 1}, "phml.utils.travel.visit_children": {"tf": 1}}, "df": 23, "t": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.ast.AST": {"tf": 1.4142135623730951}, "phml.ast.AST.size": {"tf": 1}, "phml.ast.AST.to_phml": {"tf": 1}, "phml.ast.AST.to_json": {"tf": 1}, "phml.ast.AST.to_html": {"tf": 1}, "phml.parser.Parser": {"tf": 1.7320508075688772}, "phml.parser.Parser.parser": {"tf": 1}, "phml.parser.Parser.ast": {"tf": 1}, "phml.parser.Parser.parse": {"tf": 1.7320508075688772}, "phml.parser.Parser.write": {"tf": 1.7320508075688772}, "phml.parser.Parser.stringify": {"tf": 1.7320508075688772}, "phml.utils.misc.depth": {"tf": 1}}, "df": 13, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1, "d": {"docs": {"phml.nodes.PropertyName.expandtabs": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Element": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utils.transform.map_nodes": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"phml.nodes.PropertyName.isascii": {"tf": 1.7320508075688772}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Root.html": {"tf": 1}, "phml.nodes.Root.json": {"tf": 1}, "phml.nodes.Element.html": {"tf": 1}, "phml.nodes.Element.json": {"tf": 1}, "phml.nodes.Literal.value": {"tf": 1}, "phml.nodes.PropertyName.replace": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.title": {"tf": 1}, "phml.nodes.PropertyName.expandtabs": {"tf": 1}, "phml.nodes.PropertyName.isascii": {"tf": 1}, "phml.nodes.PropertyName.islower": {"tf": 1}, "phml.nodes.PropertyName.isupper": {"tf": 1}, "phml.nodes.PropertyName.isspace": {"tf": 1}, "phml.nodes.PropertyName.isdecimal": {"tf": 1}, "phml.nodes.PropertyName.isdigit": {"tf": 1}, "phml.nodes.PropertyName.isnumeric": {"tf": 1}, "phml.nodes.PropertyName.isalpha": {"tf": 1}, "phml.nodes.PropertyName.isalnum": {"tf": 1}, "phml.nodes.PropertyName.isprintable": {"tf": 1}, "phml.parser.PHMLParser.__init__": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 1.4142135623730951}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1.7320508075688772}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1.7320508075688772}, "phml.utils.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utils.test.test": {"tf": 2}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}, "phml.utils.travel.path": {"tf": 1}}, "df": 31, "o": {"docs": {}, "df": 0, "w": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"phml": {"tf": 2}, "phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}, "phml.parser.Parser": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}, "g": {"docs": {"phml.parser.Parser": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"phml.nodes.PropertyName.isalnum": {"tf": 1.7320508075688772}}, "df": 1, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"phml.nodes.PropertyName.isalpha": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "t": {"docs": {"phml.nodes.Position": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.nodes.PropertyName.splitlines": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.endswith": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.islower": {"tf": 1}, "phml.nodes.PropertyName.isupper": {"tf": 1}, "phml.nodes.PropertyName.isspace": {"tf": 1}, "phml.nodes.PropertyName.isdecimal": {"tf": 1}, "phml.nodes.PropertyName.isdigit": {"tf": 1}, "phml.nodes.PropertyName.isnumeric": {"tf": 1}, "phml.nodes.PropertyName.isalpha": {"tf": 1}, "phml.nodes.PropertyName.isalnum": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}, "phml.utils.misc.depth": {"tf": 1}, "phml.utils.travel.visit_all_after": {"tf": 1}}, "df": 17, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.8284271247461903}}, "df": 1, "s": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.utils.test.test": {"tf": 1}, "phml.utils.validate.validate": {"tf": 1}, "phml.utils.validate.parent": {"tf": 1}, "phml.utils.validate.literal": {"tf": 1}}, "df": 5}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 3}, "phml.nodes.PropertyName.encode": {"tf": 1}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.count": {"tf": 1}, "phml.nodes.PropertyName.expandtabs": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}, "phml.nodes.PropertyName.splitlines": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.isascii": {"tf": 1}, "phml.nodes.PropertyName.islower": {"tf": 1}, "phml.nodes.PropertyName.isupper": {"tf": 1}, "phml.nodes.PropertyName.isspace": {"tf": 1}, "phml.nodes.PropertyName.isdecimal": {"tf": 1}, "phml.nodes.PropertyName.isdigit": {"tf": 1}, "phml.nodes.PropertyName.isnumeric": {"tf": 1}, "phml.nodes.PropertyName.isalpha": {"tf": 1}, "phml.nodes.PropertyName.isalnum": {"tf": 1}, "phml.nodes.PropertyName.isprintable": {"tf": 1}, "phml.nodes.PropertyName.format": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}, "phml.parser.PHMLParser.__init__": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.misc.depth": {"tf": 1}, "phml.utils.test.test": {"tf": 1.4142135623730951}, "phml.utils.transform.filter_nodes": {"tf": 1}}, "df": 29}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"phml.nodes.Node": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"phml.utils.test.test": {"tf": 1.4142135623730951}}, "df": 1, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1.4142135623730951}, "phml.utils.transform.map_nodes": {"tf": 1}}, "df": 3, "s": {"docs": {"phml.nodes.PropertyName.count": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}}, "df": 6}}}}}}, "s": {"docs": {"phml.nodes.PropertyName.format": {"tf": 1.4142135623730951}, "phml.parser.Parser.parse": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 1}, "phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.test.test": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1}, "phml.utils.travel.path": {"tf": 1}}, "df": 14}}}, "n": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.nodes.Root.inspect": {"tf": 1}, "phml.nodes.Root.html": {"tf": 1}, "phml.nodes.DocType.inspect": {"tf": 1}, "phml.nodes.DocType.html": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Element.inspect": {"tf": 1}, "phml.nodes.Element.html": {"tf": 1}, "phml.nodes.Literal.html": {"tf": 1}, "phml.nodes.Comment.inspect": {"tf": 1}, "phml.nodes.Text.inspect": {"tf": 1}, "phml.nodes.PropertyName.isupper": {"tf": 1}, "phml.nodes.PropertyName.isalpha": {"tf": 1}, "phml.nodes.PropertyName.isalnum": {"tf": 1}, "phml.parser.Parser": {"tf": 1.4142135623730951}, "phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.travel.walk": {"tf": 1}, "phml.utils.travel.visit_children": {"tf": 1}}, "df": 21, "d": {"docs": {"phml": {"tf": 3.605551275463989}, "phml.nodes.Node": {"tf": 1.7320508075688772}, "phml.nodes.Root.html": {"tf": 1}, "phml.nodes.Root.json": {"tf": 1}, "phml.nodes.Root.phml": {"tf": 1}, "phml.nodes.Element.html": {"tf": 1}, "phml.nodes.Element.json": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1}, "phml.nodes.Position": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.encode": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rsplit": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.capitalize": {"tf": 1}, "phml.nodes.PropertyName.title": {"tf": 1}, "phml.nodes.PropertyName.count": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.partition": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.splitlines": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.swapcase": {"tf": 1}, "phml.nodes.PropertyName.removesuffix": {"tf": 1}, "phml.nodes.PropertyName.islower": {"tf": 1}, "phml.nodes.PropertyName.isupper": {"tf": 1}, "phml.nodes.PropertyName.istitle": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isspace": {"tf": 1}, "phml.nodes.PropertyName.isdecimal": {"tf": 1}, "phml.nodes.PropertyName.isdigit": {"tf": 1}, "phml.nodes.PropertyName.isnumeric": {"tf": 1}, "phml.nodes.PropertyName.isalpha": {"tf": 1}, "phml.nodes.PropertyName.isalnum": {"tf": 1}, "phml.nodes.PropertyName.format": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.format_map": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}, "phml.parser.PHMLParser.__init__": {"tf": 1}, "phml.parser.Parser": {"tf": 2.23606797749979}, "phml.parser.Parser.parse": {"tf": 1}, "phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.misc.depth": {"tf": 1}, "phml.utils.test.test": {"tf": 1.7320508075688772}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1.4142135623730951}, "phml.utils.travel.walk": {"tf": 1}, "phml.utils.validate.validate": {"tf": 1}, "phml.utils.validate.parent": {"tf": 1}}, "df": 53}, "y": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.encode": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.join": {"tf": 1}, "phml.parser.Parser": {"tf": 1}, "phml.utils.test.test": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1}}, "df": 8, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.utils.find.ancestor": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"phml.utils.travel.path": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utils.find.find_before": {"tf": 1.4142135623730951}}, "df": 1}}}, "y": {"docs": {"phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utils.test.test": {"tf": 1.4142135623730951}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}}, "df": 5}}}}, "d": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"phml": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {"phml.nodes.PropertyName.join": {"tf": 1.4142135623730951}}, "df": 1, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.utils.test.test": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Node": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}}, "df": 5}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml.parser.PHMLParser.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 3.605551275463989}, "phml.nodes.Root": {"tf": 1}, "phml.nodes.DocType.phml": {"tf": 1.4142135623730951}, "phml.nodes.Element": {"tf": 2.23606797749979}, "phml.nodes.Element.start_tag": {"tf": 1.4142135623730951}, "phml.nodes.Element.end_tag": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Element.html": {"tf": 1}, "phml.nodes.Element.json": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1.4142135623730951}, "phml.nodes.Text": {"tf": 1}, "phml.parser.PHMLParser.cur": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utils.test.test": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1.4142135623730951}, "phml.utils.transform.remove_nodes": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1.7320508075688772}}, "df": 17, "s": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.nodes.Root.phml": {"tf": 1}, "phml.nodes.Element.end_tag": {"tf": 1}, "phml.nodes.Position": {"tf": 1}}, "df": 4}, "\u2019": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.Element": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {"phml": {"tf": 2.6457513110645907}}, "df": 1}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.449489742783178}, "phml.utils.transform.map_nodes": {"tf": 1}}, "df": 2}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}, "phml.nodes.Node": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName": {"tf": 1}}, "df": 1, "d": {"docs": {"phml": {"tf": 1}, "phml.parser.Parser": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.expandtabs": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.DocType": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Comment": {"tf": 1}, "phml.nodes.Text": {"tf": 1}, "phml.nodes.PropertyName.join": {"tf": 1}}, "df": 7}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.parser.Parser": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.Position": {"tf": 1}, "phml.utils.test.test": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml.utils.find.find_all_between": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"phml.utils.transform.remove_nodes": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}, "phml.parser.Parser": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"phml": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.PropertyName.join": {"tf": 1}, "phml.nodes.PropertyName.title": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}, "phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.test.test": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1.4142135623730951}, "phml.utils.travel.path": {"tf": 1}}, "df": 17}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}}, "d": {"docs": {"phml.nodes.Element.end_tag": {"tf": 1.4142135623730951}, "phml.nodes.Position": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.count": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.find": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.index": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rfind": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rindex": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.endswith": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_between": {"tf": 1.7320508075688772}}, "df": 12, "s": {"docs": {"phml.nodes.PropertyName.endswith": {"tf": 1}, "phml.nodes.PropertyName.removesuffix": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.nodes.PropertyName.endswith": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utils.find.find_all_between": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.PropertyName": {"tf": 2}, "phml.nodes.PropertyName.encode": {"tf": 2.23606797749979}}, "df": 2}}}, "e": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"phml.nodes.Node.type": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.nodes.PropertyName.removesuffix": {"tf": 1}, "phml.nodes.PropertyName.isascii": {"tf": 1}, "phml.nodes.PropertyName.isprintable": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}}, "df": 11}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.encode": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"phml.nodes.PropertyName": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.encode": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.PropertyName.maketrans": {"tf": 1}, "phml.utils.test.test": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.encode": {"tf": 1}, "phml.parser.Parser": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 1.4142135623730951}}, "df": 4, "r": {"docs": {"phml": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}}, "df": 2}}}, "d": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Root": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 2.449489742783178}, "phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.encode": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.center": {"tf": 1}, "phml.nodes.PropertyName.expandtabs": {"tf": 1}, "phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.format": {"tf": 1}, "phml.nodes.PropertyName.format_map": {"tf": 1}}, "df": 14}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.maketrans": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"phml": {"tf": 2}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.parser.Parser.parse": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Parent": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.Literal": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {"phml.nodes.Position": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.translate": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.maketrans": {"tf": 1.4142135623730951}, "phml.parser.PHMLParser.__init__": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.PropertyName.splitlines": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.translate": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.istitle": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {"phml": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.capitalize": {"tf": 1}, "phml.nodes.PropertyName.istitle": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.swapcase": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.upper": {"tf": 1}, "phml.nodes.PropertyName.isupper": {"tf": 1.7320508075688772}}, "df": 3, "d": {"docs": {"phml.nodes.PropertyName.title": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"phml.parser.Parser": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"phml.ast.AST": {"tf": 1}}, "df": 1}}}}}}, "+": {"0": {"0": {"0": {"0": {"docs": {"phml.nodes.PropertyName.isascii": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "7": {"docs": {}, "df": 0, "f": {"docs": {"phml.nodes.PropertyName.isascii": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1.7320508075688772}}, "df": 1}, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}, "l": {"docs": {}, "df": 0, "k": {"docs": {"phml.utils.find.find": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml": {"tf": 3.605551275463989}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.PropertyName.encode": {"tf": 1}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.title": {"tf": 1}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.endswith": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.removeprefix": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.removesuffix": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.zfill": {"tf": 1}, "phml.parser.Parser": {"tf": 1.4142135623730951}, "phml.parser.Parser.parse": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}}, "df": 17, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 2.449489742783178}, "phml.nodes.Element.start_tag": {"tf": 1}, "phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rsplit": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1.7320508075688772}, "phml.parser.Parser.parse": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1}}, "df": 10}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.nodes.PropertyName.center": {"tf": 1}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1}, "phml.nodes.PropertyName.zfill": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {"phml.parser.Parser": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.nodes.PropertyName.isspace": {"tf": 1.7320508075688772}}, "df": 7}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"phml": {"tf": 1}, "phml.nodes.PropertyName.encode": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}, "phml.parser.Parser.parse": {"tf": 1}}, "df": 6}, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.nodes.PropertyName.title": {"tf": 1}, "phml.nodes.PropertyName.expandtabs": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}, "phml.utils.test.test": {"tf": 1}, "phml.utils.travel.path": {"tf": 1}}, "df": 9}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.Position": {"tf": 1}, "phml.nodes.PropertyName.isidentifier": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.join": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 2}}, "df": 1}}, "k": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.PropertyName.rsplit": {"tf": 1}}, "df": 1}}, "d": {"docs": {"phml.nodes.PropertyName.title": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.nodes.PropertyName.title": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1.7320508075688772}}, "df": 1}}}}, "e": {"docs": {"phml": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1}, "phml.nodes.PropertyName.encode": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.parser.Parser.write": {"tf": 1.4142135623730951}, "phml.parser.Parser.stringify": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}}, "df": 2}}}}}}}, "y": {"docs": {"phml.nodes.PropertyName.maketrans": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "u": {"docs": {"phml": {"tf": 3.4641016151377544}, "phml.parser.Parser": {"tf": 1.4142135623730951}, "phml.utils.misc.depth": {"tf": 1.4142135623730951}}, "df": 3, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.449489742783178}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.Root.tree": {"tf": 1}, "phml.nodes.DocType": {"tf": 1}, "phml.nodes.DocType.tree": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Element.tree": {"tf": 1}, "phml.nodes.Text": {"tf": 1}}, "df": 6}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 3.3166247903554}, "phml.ast.AST": {"tf": 1}, "phml.nodes.Node": {"tf": 1.4142135623730951}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Root": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.PropertyName.encode": {"tf": 1}, "phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}, "phml.parser.Parser": {"tf": 2}, "phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}, "phml.utils.test.test": {"tf": 1}}, "df": 13}, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.PropertyName.isidentifier": {"tf": 1}, "phml.parser.Parser": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}, "phml.nodes.PropertyName.join": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.utils.test.test": {"tf": 1.4142135623730951}, "phml.utils.transform.map_nodes": {"tf": 1.7320508075688772}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.capitalize": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.capitalize": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.title": {"tf": 1}, "phml.nodes.PropertyName.istitle": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.PropertyName.casefold": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"phml.nodes.PropertyName.title": {"tf": 1}, "phml.nodes.PropertyName.islower": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isupper": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.istitle": {"tf": 1.7320508075688772}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.parser.PHMLParser": {"tf": 1}, "phml.parser.Parser.parser": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.parser.PHMLParser.cur": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.utils.find.find": {"tf": 1.7320508075688772}, "phml.utils.find.find_after": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_after": {"tf": 1.7320508075688772}, "phml.utils.find.find_before": {"tf": 1.7320508075688772}, "phml.utils.find.find_all_before": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_between": {"tf": 1.7320508075688772}, "phml.utils.transform.filter_nodes": {"tf": 2}, "phml.utils.transform.remove_nodes": {"tf": 1.7320508075688772}}, "df": 9, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1.7320508075688772}}, "df": 1}}, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.isprintable": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.Literal": {"tf": 1}, "phml.nodes.PropertyName.partition": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rpartition": {"tf": 1.4142135623730951}}, "df": 5}}}, "s": {"docs": {"phml": {"tf": 1}, "phml.ast.AST": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}}, "df": 4}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}, "phml.nodes.Root": {"tf": 1}, "phml.nodes.Parent": {"tf": 1.4142135623730951}, "phml.nodes.Element": {"tf": 1.4142135623730951}}, "df": 4}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Root.as_dict": {"tf": 1}, "phml.nodes.Root.html": {"tf": 1}, "phml.nodes.Root.json": {"tf": 1}, "phml.nodes.DocType.as_dict": {"tf": 1}, "phml.nodes.DocType.html": {"tf": 1}, "phml.nodes.DocType.json": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Element.html": {"tf": 1}, "phml.nodes.Element.json": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}, "phml.nodes.Literal.html": {"tf": 1}, "phml.nodes.Literal.json": {"tf": 1}, "phml.nodes.PropertyName.swapcase": {"tf": 1}, "phml.parser.PHMLParser.__init__": {"tf": 1}, "phml.parser.Parser": {"tf": 1.4142135623730951}, "phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1.4142135623730951}}, "df": 17, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Node": {"tf": 1}, "phml.nodes.PropertyName.lower": {"tf": 1}, "phml.nodes.PropertyName.upper": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1}, "phml.parser.PHMLParser.__init__": {"tf": 1}}, "df": 5}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.join": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.isascii": {"tf": 1}}, "df": 2, "c": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {"phml": {"tf": 1}, "phml.nodes.Element": {"tf": 1.4142135623730951}}, "df": 2, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Comment": {"tf": 1.4142135623730951}, "phml.nodes.Comment.phml": {"tf": 1.4142135623730951}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.utils.find.ancestor": {"tf": 1.4142135623730951}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.PropertyName.casefold": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.PropertyName.startswith": {"tf": 1}, "phml.nodes.PropertyName.endswith": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {"phml.utils.find.find_all_before": {"tf": 1.4142135623730951}}, "df": 1}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Position": {"tf": 1}, "phml.nodes.Point": {"tf": 1.4142135623730951}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.expandtabs": {"tf": 1}, "phml.nodes.PropertyName.lower": {"tf": 1}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.nodes.PropertyName.upper": {"tf": 1}, "phml.nodes.PropertyName.removeprefix": {"tf": 1}, "phml.nodes.PropertyName.removesuffix": {"tf": 1}}, "df": 9}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.replace": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.count": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.parser.PHMLParser.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Comment": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.Position": {"tf": 1.4142135623730951}, "phml.nodes.Point": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.capitalize": {"tf": 1}, "phml.nodes.PropertyName.center": {"tf": 1}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.islower": {"tf": 1}, "phml.nodes.PropertyName.isupper": {"tf": 1}, "phml.nodes.PropertyName.isspace": {"tf": 1}, "phml.nodes.PropertyName.isdecimal": {"tf": 1}, "phml.nodes.PropertyName.isdigit": {"tf": 1}, "phml.nodes.PropertyName.isnumeric": {"tf": 1}, "phml.nodes.PropertyName.isalpha": {"tf": 1}, "phml.nodes.PropertyName.isalnum": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1.7320508075688772}, "phml.parser.PHMLParser.__init__": {"tf": 1}}, "df": 19, "s": {"docs": {"phml.nodes.PropertyName.title": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.expandtabs": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.nodes.PropertyName.swapcase": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.isascii": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.islower": {"tf": 1}, "phml.nodes.PropertyName.isupper": {"tf": 1}, "phml.nodes.PropertyName.istitle": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.isspace": {"tf": 1}, "phml.nodes.PropertyName.isdecimal": {"tf": 1}, "phml.nodes.PropertyName.isdigit": {"tf": 1}, "phml.nodes.PropertyName.isnumeric": {"tf": 1}, "phml.nodes.PropertyName.isalpha": {"tf": 1}, "phml.nodes.PropertyName.isalnum": {"tf": 1}, "phml.nodes.PropertyName.isprintable": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1.4142135623730951}, "phml.parser.PHMLParser.__init__": {"tf": 1}}, "df": 20}}}}}}, "s": {"docs": {"phml.nodes.PropertyName.lstrip": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rstrip": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.strip": {"tf": 1.4142135623730951}}, "df": 3}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "s": {"docs": {"phml.parser.PHMLParser.__init__": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Root": {"tf": 1}, "phml.utils.travel.path": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Root.html": {"tf": 1}, "phml.nodes.Root.json": {"tf": 1}, "phml.nodes.Root.phml": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.Element": {"tf": 1.4142135623730951}, "phml.nodes.Element.html": {"tf": 1}, "phml.nodes.Element.json": {"tf": 1}, "phml.nodes.Element.phml": {"tf": 1}, "phml.nodes.Text": {"tf": 1}, "phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}, "phml.utils.transform.remove_nodes": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1.4142135623730951}, "phml.utils.travel.visit_children": {"tf": 1}}, "df": 15}}}}}, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.utils.travel.walk": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}}, "df": 3, "s": {"docs": {"phml.utils.test.test": {"tf": 2}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName": {"tf": 1}, "phml.parser.Parser": {"tf": 1}}, "df": 2, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.Element": {"tf": 1}, "phml.nodes.PropertyName.isidentifier": {"tf": 1}, "phml.parser.Parser": {"tf": 1.4142135623730951}, "phml.parser.Parser.parser": {"tf": 1}}, "df": 4, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Element": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.Element.start_tag": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.center": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"phml": {"tf": 1}, "phml.ast.AST.inspect": {"tf": 1}, "phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}}, "df": 4}}}, "o": {"docs": {"phml": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Root": {"tf": 1}, "phml.nodes.Root.phml": {"tf": 1}, "phml.nodes.Literal.position": {"tf": 1}}, "df": 5, "s": {"docs": {"phml.nodes.Root.phml": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.DocType": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.DocType": {"tf": 1.7320508075688772}, "phml.nodes.DocType.html": {"tf": 1}, "phml.nodes.DocType.json": {"tf": 1}, "phml.nodes.DocType.phml": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "m": {"docs": {"phml.nodes.DocType": {"tf": 1}, "phml.nodes.Element": {"tf": 1.4142135623730951}, "phml.nodes.Comment": {"tf": 1}, "phml.nodes.Text": {"tf": 1}}, "df": 4}, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Element": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.center": {"tf": 1}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utils.travel.path": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Node.type": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1, "d": {"docs": {"phml.utils.find.find": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {"phml": {"tf": 1}, "phml.nodes.PropertyName.isidentifier": {"tf": 1}, "phml.utils.transform.map_nodes": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"phml": {"tf": 1}, "phml.nodes.PropertyName": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.rsplit": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.center": {"tf": 1}, "phml.nodes.PropertyName.ljust": {"tf": 1}, "phml.nodes.PropertyName.rjust": {"tf": 1}, "phml.parser.PHMLParser.__init__": {"tf": 1}}, "df": 8, "s": {"docs": {"phml.nodes.PropertyName": {"tf": 1.4142135623730951}, "phml.parser.Parser.write": {"tf": 1}, "phml.parser.Parser.stringify": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 2}, "phml.utils.test.test": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.PropertyName.isdecimal": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.translate": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.utils.misc.depth": {"tf": 1}, "phml.utils.travel.walk": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Root.as_dict": {"tf": 1}, "phml.nodes.DocType.as_dict": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}, "phml.utils.test.test": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.maketrans": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Element": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.PropertyName.isdigit": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"phml.nodes.PropertyName.isdigit": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.ast.AST.size": {"tf": 1}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.join": {"tf": 1}, "phml.nodes.PropertyName.count": {"tf": 1}, "phml.utils.transform.size": {"tf": 1}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"phml.nodes.PropertyName.isnumeric": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.isalnum": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.zfill": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.Node": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName": {"tf": 1}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.join": {"tf": 1}}, "df": 4}, "x": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.Root": {"tf": 1}, "phml.nodes.PropertyName.zfill": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_before": {"tf": 1}}, "df": 5, "w": {"docs": {"phml": {"tf": 2}}, "df": 1}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Node": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1.4142135623730951}, "phml.nodes.Node.type": {"tf": 1.4142135623730951}, "phml.nodes.Root.as_dict": {"tf": 1}, "phml.nodes.Root.tree": {"tf": 1}, "phml.nodes.Root.inspect": {"tf": 1}, "phml.nodes.Root.html": {"tf": 1}, "phml.nodes.Root.json": {"tf": 1}, "phml.nodes.DocType": {"tf": 1}, "phml.nodes.DocType.as_dict": {"tf": 1}, "phml.nodes.DocType.tree": {"tf": 1}, "phml.nodes.DocType.inspect": {"tf": 1}, "phml.nodes.DocType.html": {"tf": 1}, "phml.nodes.DocType.json": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Element.tree": {"tf": 1}, "phml.nodes.Element.inspect": {"tf": 1}, "phml.nodes.Element.html": {"tf": 1}, "phml.nodes.Element.json": {"tf": 1}, "phml.nodes.Literal": {"tf": 1}, "phml.nodes.Literal.position": {"tf": 1.4142135623730951}, "phml.nodes.Literal.as_dict": {"tf": 1}, "phml.nodes.Literal.html": {"tf": 1}, "phml.nodes.Literal.json": {"tf": 1}, "phml.nodes.Comment.inspect": {"tf": 1}, "phml.nodes.Text.inspect": {"tf": 1}, "phml.nodes.Position": {"tf": 1.7320508075688772}, "phml.parser.Parser.ast": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 1.7320508075688772}, "phml.utils.find.find": {"tf": 2}, "phml.utils.find.find_after": {"tf": 2}, "phml.utils.find.find_all_after": {"tf": 1.7320508075688772}, "phml.utils.find.find_before": {"tf": 2.8284271247461903}, "phml.utils.find.find_all_before": {"tf": 2.23606797749979}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.misc.depth": {"tf": 1}, "phml.utils.test.test": {"tf": 3.3166247903554}, "phml.utils.transform.filter_nodes": {"tf": 1.7320508075688772}, "phml.utils.transform.remove_nodes": {"tf": 1.7320508075688772}, "phml.utils.transform.map_nodes": {"tf": 3.4641016151377544}, "phml.utils.travel.path": {"tf": 2.449489742783178}, "phml.utils.travel.walk": {"tf": 1}, "phml.utils.travel.visit_all_after": {"tf": 1}, "phml.utils.validate.validate": {"tf": 1}, "phml.utils.validate.parent": {"tf": 1}, "phml.utils.validate.literal": {"tf": 1}}, "df": 47, "s": {"docs": {"phml.ast.AST.size": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.Literal.value": {"tf": 1}, "phml.parser.Parser": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 2}, "phml.utils.find.find": {"tf": 1.4142135623730951}, "phml.utils.find.find_after": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_after": {"tf": 1.7320508075688772}, "phml.utils.find.find_before": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_before": {"tf": 2.23606797749979}, "phml.utils.find.find_all_between": {"tf": 2.23606797749979}, "phml.utils.test.test": {"tf": 1.4142135623730951}, "phml.utils.transform.filter_nodes": {"tf": 2}, "phml.utils.transform.remove_nodes": {"tf": 1.7320508075688772}, "phml.utils.transform.size": {"tf": 1}, "phml.utils.travel.path": {"tf": 2}}, "df": 16}}}, "t": {"docs": {"phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Literal.position": {"tf": 1}, "phml.nodes.Position": {"tf": 1.7320508075688772}, "phml.nodes.PropertyName.expandtabs": {"tf": 1}, "phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.nodes.PropertyName.splitlines": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.nodes.PropertyName.removesuffix": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 1}, "phml.utils.find.find": {"tf": 1}, "phml.utils.travel.path": {"tf": 1}}, "df": 16, "e": {"docs": {"phml.nodes.Element.start_tag": {"tf": 1}, "phml.nodes.PropertyName.split": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.PropertyName.count": {"tf": 1}, "phml.nodes.PropertyName.find": {"tf": 1}, "phml.nodes.PropertyName.index": {"tf": 1}, "phml.nodes.PropertyName.rfind": {"tf": 1}, "phml.nodes.PropertyName.rindex": {"tf": 1}}, "df": 5}}}}}}, "n": {"docs": {"phml.nodes.Node.type": {"tf": 1}, "phml.nodes.PropertyName.count": {"tf": 1}}, "df": 2, "e": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}, "phml.nodes.PropertyName.rsplit": {"tf": 1}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.maketrans": {"tf": 1.4142135623730951}, "phml.utils.find.ancestor": {"tf": 1}, "phml.utils.find.find": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1}, "phml.utils.find.find_all_after": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1}, "phml.utils.find.find_all_between": {"tf": 1.7320508075688772}, "phml.utils.test.test": {"tf": 1.7320508075688772}}, "df": 14}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Element": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.PropertyName.encode": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.PropertyName.split": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 3.605551275463989}, "phml.nodes.DocType": {"tf": 1}, "phml.nodes.Element": {"tf": 1.4142135623730951}, "phml.nodes.Element.start_tag": {"tf": 1}, "phml.nodes.Comment": {"tf": 1}, "phml.nodes.Text": {"tf": 1.4142135623730951}}, "df": 6}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1, "d": {"docs": {"phml": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Literal.position": {"tf": 1}, "phml.nodes.Position": {"tf": 1}}, "df": 4}}}}}}}, "t": {"docs": {"phml.ast.AST.size": {"tf": 1}, "phml.ast.AST.to_phml": {"tf": 1}, "phml.ast.AST.to_json": {"tf": 1}, "phml.ast.AST.to_html": {"tf": 1}, "phml.utils.find.ancestor": {"tf": 1}, "phml.utils.find.find_after": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_after": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_between": {"tf": 1}, "phml.utils.misc.depth": {"tf": 1}, "phml.utils.transform.size": {"tf": 1}, "phml.utils.travel.path": {"tf": 1}}, "df": 11, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.PropertyName": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"phml.nodes.PropertyName.translate": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.PropertyName": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.replace": {"tf": 1}, "phml.nodes.PropertyName.join": {"tf": 1}, "phml.nodes.PropertyName.expandtabs": {"tf": 1}, "phml.nodes.PropertyName.partition": {"tf": 1}, "phml.nodes.PropertyName.lstrip": {"tf": 1}, "phml.nodes.PropertyName.rstrip": {"tf": 1}, "phml.nodes.PropertyName.rpartition": {"tf": 1}, "phml.nodes.PropertyName.splitlines": {"tf": 1}, "phml.nodes.PropertyName.strip": {"tf": 1}, "phml.nodes.PropertyName.translate": {"tf": 1}, "phml.nodes.PropertyName.removeprefix": {"tf": 1}, "phml.nodes.PropertyName.removesuffix": {"tf": 1}, "phml.nodes.PropertyName.zfill": {"tf": 1}, "phml.parser.Parser.parse": {"tf": 1}, "phml.utils.find.find_before": {"tf": 1.4142135623730951}, "phml.utils.find.find_all_before": {"tf": 1.4142135623730951}, "phml.utils.misc.depth": {"tf": 1}, "phml.utils.test.test": {"tf": 1.4142135623730951}, "phml.utils.transform.filter_nodes": {"tf": 1.4142135623730951}, "phml.utils.transform.remove_nodes": {"tf": 1}, "phml.utils.travel.path": {"tf": 1.4142135623730951}, "phml.utils.travel.visit_all_after": {"tf": 1}}, "df": 23}, "s": {"docs": {"phml.utils.travel.path": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 3.4641016151377544}, "phml.nodes.Element": {"tf": 2}, "phml.utils.transform.map_nodes": {"tf": 2}}, "df": 3}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}, "phml.utils.transform.filter_nodes": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.PropertyName.splitlines": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.PropertyName.isidentifier": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"phml.nodes.PropertyName.maketrans": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}}, "df": 1, "s": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.PropertyName.format": {"tf": 1.4142135623730951}, "phml.parser.Parser": {"tf": 1}}, "df": 3}}}}}}, "x": {"docs": {"phml.nodes.PropertyName.maketrans": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.PropertyName.encode": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.PropertyName.zfill": {"tf": 1}}, "df": 1}}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();