window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"phml": {"fullname": "phml", "modulename": "phml", "type": "module", "doc": "<h1 id=\"python-hypertext-markup-language-phml\">Python Hypertext Markup Language (phml)</h1>\n\n<!-- Header Badges -->\n\n<div align=\"center\">\n\n![version](assets/badges/version.svg)\n[![License](assets/badges/license.svg)](https://github.com/Tired-Fox/phml/blob/main/LICENSE)\n[![Release](https://img.shields.io/github/v/release/tired-fox/phml.svg?style=flat-square&color=9cf)](https://github.com/Tired-Fox/phml/releases)\n![Maintained](assets/badges/maintained.svg)\n\n![testing](assets/badges/tests.svg)\n![test coverage](assets/badges/coverage.svg)\n\n</div>\n\n<!-- End Badges -->\n\n<h2 id=\"overview\">Overview</h2>\n\n<p>The idea behind the creation of Python in Hypertext Markup Language (phml), is to allow for web page generation with direct access to python. This language takes inspiration directly from frameworks like Vue.js, Astro.js, Solid.js, and SvelteKit. There is conditional rendering, components, python elements, inline/embedded python blocks, and slot, named slots, and much more. Now let's dive into more the language.</p>\n\n<h3 id=\"python-element\">Python Element</h3>\n\n<p>Let's start with the new <code>python</code> element. Python is a whitespace language. As such, phml\nhas the challenge of maintaining the indentation in an appropriate way as to preserve the intended whitespace. The key focus is the indended whitespace. While this can be tricky the first line with content serves as a reference. The amount of indentation for the first line is removed from each line and the remaining whitespace is left alone. For example if there is a python block that looks like this.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">&lt;</span><span class=\"nt\">python</span><span class=\"p\">&gt;</span> message = &quot;hello world&quot; if &quot;hello&quot; in message: print(message) <span class=\"p\">&lt;/</span><span class=\"nt\">python</span><span class=\"p\">&gt;</span>\n</code></pre>\n</div>\n\n<p>The resulting python code would look like this.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;hello world&quot;</span>\n<span class=\"k\">if</span> <span class=\"s2\">&quot;hello&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">message</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>So now we can write python code, now what? You can define functions and variables\nhow you normally would and they are now available to the scope of the entire file. Consider the following example; You can define function called <code>URL</code> in the <code>python</code> element and it can be accessed in any other part of the file. So the code would look like this:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">&lt;</span><span class=\"nt\">python</span><span class=\"p\">&gt;</span>\n  def URL(link: str) -&gt; str: links = { &quot;youtube&quot;: &quot;https://youtube.com&quot; } if\n  link in links: return links[link] else: return &quot;&quot;\n<span class=\"p\">&lt;/</span><span class=\"nt\">python</span><span class=\"p\">&gt;</span>\n\n...\n\n<span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">&quot;{URL(&#39;youtube&#39;)}&quot;</span><span class=\"p\">&gt;</span>Youtube<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n</code></pre>\n</div>\n\n<p>phml combines all <code>python</code> elements and treats them as one python file. This is of the likes of the <code>script</code> or <code>style</code> tags. With the fact that you can write any code in the python element and used it anywhere else in the file you of the full power of the python programming language at your desposal.</p>\n\n<h3 id=\"inline-python-and-python-attributes\">Inline Python and Python Attributes</h3>\n\n<p>Next up is inline python blocks. These are represented with <code>{{}}</code> in text elements. Any text in-between the brackets will be processed as python. This is mostly useful when you want to inject a value from python. Assume that there is a variable defined in the <code>python</code> element called <code>message</code>\nand it contains <code>Hello World!</code>. Now this variable can be used like this, <code>&lt;p&gt;{{ message }}&lt;/p&gt;</code>,\nwhich renders to, <code>&lt;p&gt;Hello World!&lt;/p&gt;</code>.</p>\n\n<blockquote>\n  <p>Note: Inline python blocks are only rendered in a Text element or inside an html attribute.</p>\n</blockquote>\n\n<p>Conditional rendering with <code>@if</code>, <code>@elif</code>, and <code>@else</code> is an extremely helpful tool in phml.\n<code>@if</code> can be used alone and the python inside it's value must be truthy for the element to be rendered. <code>@elif</code> requires an element with a <code>@if</code> or <code>@elif</code> attribute immediately before it, and it's condition is rendered the same as <code>@if</code> but only rendered if a <code>@if</code> or <code>@elif</code> first fails. <code>@else</code> requires there to be either a <code>@if</code> or a <code>@else</code> immediately before it. It only renders if the previous element's condition fails. If <code>@elif</code> or <code>@else</code> is on an element, but the previous element isn't a <code>@if</code> or <code>@elif</code> then an exception will occur. Most importantly, the first element in a chain of conditions must be a <code>@if</code>.</p>\n\n<p>Other than conditions, there is also a built in for loop element. The format looks something like <code>&lt;For :each=\"item in collection&gt;\"</code> and it duplicates it's children at the node position of the <code>For</code> element. The <code>For</code> element requires there to be an <code>each</code> attribute for it to be rendered. You can consider the value of this element as pythons equivelent to <code>for item in collection:</code> as this is what the <code>each</code> attribute expands out to. The attributes defined in the <code>each</code> element, <code>item</code> from the previous example, is exposed to the children of the for loop. The attributes from the iteration are scoped recursively through the children. All conditionals work for the the <code>For</code> element. An added feature is when a <code>For</code> iteration has an error or iterates zero times, the <code>@elif</code> or <code>@else</code> following the <code>For</code> is used instead. This means that a <code>For</code> failing or generating zero is like a failed <code>@if</code> and can be treated as such. Below is an example of how a <code>For</code> element could be used.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">&lt;</span><span class=\"nt\">ul</span>\n  <span class=\"err\">&lt;</span><span class=\"na\">For</span> <span class=\"na\">:each</span><span class=\"o\">=</span><span class=\"s\">&quot;i in range(3)&quot;</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>{i}<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">For</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">li</span> <span class=\"err\">@</span><span class=\"na\">else</span><span class=\"p\">&gt;</span>No items in range<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n</code></pre>\n</div>\n\n<p>The compiled html will be:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">&lt;</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>1<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>2<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>3<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n</code></pre>\n</div>\n\n<p>Python attributes are shortcuts for using inline python blocks in html attributes. Normally, in phml, you would inject python logic into an attribute similar to this <code>src=\"{url('youtube')}\"</code>. If you would like to make the whole attribute value a python expression you may prefix any attribute with a <code>:</code>. This keeps the attribute name the same after the prefix, but tells the parser that the entire value should be processed as python. So the previous example with <code>URL</code> can also be expressed as <code>&lt;a :href=\"URL('youtube')&gt;Youtube&lt;/a&gt;\"</code>.</p>\n\n<h3 id=\"components\">Components</h3>\n\n<p>PHML includes a powerful component system. The components are partial phml files and are added to the core compiler. After adding the component whenever an element with the same name as the component is found, it is replaced. Components have scoped <code>python</code> elements, while all <code>style</code> and <code>script</code> elements are global to the file they are injected into. Components require that there is only one element, that isn't a <code>python</code>, <code>script</code>, or <code>style</code> tag, to be present. A sample component can look something like the example below.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"cm\">&lt;!-- Component.phml --&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span># content goes here<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">python</span><span class=\"p\">&gt;</span> # python code goes here <span class=\"p\">&lt;/</span><span class=\"nt\">python</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">style</span><span class=\"p\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"c\">/* styles go here */</span><span class=\"w\"></span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">style</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"c1\">// js goes here</span><span class=\"w\"></span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n</code></pre>\n</div>\n\n<p>Components can be added to the compiler by using <code>HypertextManager.add('path/to/component.phml')</code>. You can define a components name when adding it to the compiler like this <code>HypertextManager.add(('Component', 'path/to/component.phml'))</code>, or you can just let the compiler figure it out for you. Each directory in the path given along with the file name are combine to create the components name. So if you pass a component path that is <code>path/to/component.phml</code> it will create a components name of <code>Path.To.Component</code> which is then used as <code>&lt;Path.To.Component /&gt;</code>. The compiler will try to parse and understand the component name and make it Pascal case. So if you have a file name of <code>CoMP_onEnt.phml</code> it will result in <code>CoMPOnEnt</code>. It uses <code>_</code> as a seperator between words along with capital letters. It will also recognize an all caps word bordering a new word with a capital letter.</p>\n\n<p>Great now you have components. But what if you have a few components that are siblings and you don't want them to be nested in a parent element. PHML provides a <code>&lt;&gt;</code> element which is a placeholder element. All children are treated as they are at the root of the component.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"cm\">&lt;!-- file.phml --&gt;</span>\n...\n<span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">Component</span> <span class=\"p\">/&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n...\n<span class=\"cm\">&lt;!-- Component.phml --&gt;</span>\n<span class=\"err\">&lt;</span>&gt;\n<span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Hello<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>World<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n<span class=\"err\">&lt;</span>&gt;\n</code></pre>\n</div>\n\n<p>will result in the following rendered html</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"cm\">&lt;!-- file.html --&gt;</span>\n...\n<span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Hello<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>World<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n...\n</code></pre>\n</div>\n\n<p>Now how do you pass information to component to use in rendering? That is where the <code>Props</code> variable comes in. The <code>Props</code> variable is a dictionary defined in the components <code>python</code> element. This defines what attributes on the component are props along with their default values.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"cm\">&lt;!-- component.phml --&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">python</span><span class=\"p\">&gt;</span> Props = { message: &quot;&quot; } <span class=\"p\">&lt;/</span><span class=\"nt\">python</span><span class=\"p\">&gt;</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>{{ message }}<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n\n<span class=\"cm\">&lt;!-- file.phml --&gt;</span>\n...\n<span class=\"p\">&lt;</span><span class=\"nt\">Component</span> <span class=\"na\">message</span><span class=\"o\">=</span><span class=\"s\">&quot;Hello World!&quot;</span> <span class=\"p\">/&gt;</span>\n...\n</code></pre>\n</div>\n\n<p>Both normal attribute values and python attributes can be used for props. The above example really only works for self closing components. What if you want to pass children to the component? That is where slots come in.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">&lt;</span><span class=\"nt\">python</span><span class=\"p\">&gt;</span> Props = { message: &quot;&quot; } <span class=\"p\">&lt;/</span><span class=\"nt\">python</span><span class=\"p\">&gt;</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;callout&quot;</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">p</span> <span class=\"err\">@</span><span class=\"na\">if</span><span class=\"o\">=</span><span class=\"s\">&quot;message is not None&quot;</span><span class=\"p\">&gt;</span>{{ message }}<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">slot</span> <span class=\"p\">/&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</code></pre>\n</div>\n\n<p>The <code>Slot</code> element must be capitalized. When a <code>Slot</code> element is present any children inside of a component are inserted in place of it. If no children exist then the slot is just removed. What about having multiple slots and having certain components go to certain slot. PHML covers this with the <code>slot</code> and <code>name</code> attribute. The slot attribute holds the name of the slot that the child element should be placed in. The name attribute goes on the <code>Slot</code> element itself giving it it's name. There may only be one <code>Slot</code> of every name including the default <code>Slot</code> with no name attribute. An example of this will look something like this.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"cm\">&lt;!-- component.phml --&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">slot</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;top&quot;</span> <span class=\"p\">/&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">slot</span> <span class=\"p\">/&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">slot</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;bottom&quot;</span> <span class=\"p\">/&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n\n<span class=\"cm\">&lt;!-- file.phml --&gt;</span>\n...\n<span class=\"p\">&lt;</span><span class=\"nt\">Component</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">p</span> <span class=\"na\">slot</span><span class=\"o\">=</span><span class=\"s\">&quot;bottom&quot;</span><span class=\"p\">&gt;</span>Bottom<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">p</span> <span class=\"na\">slot</span><span class=\"o\">=</span><span class=\"s\">&quot;top&quot;</span><span class=\"p\">&gt;</span>Top<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n  Middle\n<span class=\"p\">&lt;/</span><span class=\"nt\">Component</span><span class=\"p\">&gt;</span>\n...\n\n<span class=\"cm\">&lt;!-- file.html --&gt;</span>\n...\n<span class=\"p\">&lt;</span><span class=\"nt\">p</span> <span class=\"na\">slot</span><span class=\"o\">=</span><span class=\"s\">&quot;top&quot;</span><span class=\"p\">&gt;</span>Top<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\nMiddle\n<span class=\"p\">&lt;</span><span class=\"nt\">p</span> <span class=\"na\">slot</span><span class=\"o\">=</span><span class=\"s\">&quot;bottom&quot;</span><span class=\"p\">&gt;</span>Bottom<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n...\n</code></pre>\n</div>\n\n<h3 id=\"markdown-optional\">Markdown (Optional)</h3>\n\n<p>PHML also has very basic markdown support. The <code>Markdown</code> element can be used to render markdown in place of the element itself. The markdown component is an optional feature of phml. To enable the feature you can run <code>pip3 install phml[markdown]</code> or <code>pip3 install markdown</code>, then use the component in a phml file. The markdown component can only reference/render a markdown file. To do so, use the <code>:src</code>/<code>src</code> attribute to specify the path to the markdown file, relative to the current file. If phml is rendering from a parsed dict or str, then the current working directory is used.</p>\n\n<p>The markdown component uses a few default extensions while parsing. First it uses <code>codehilite</code> and <code>fenced_code</code> for highlighting code blocks, this also requires a css file generated with <code>pygmentize</code>. Lastly, it will use <code>tables</code> to add the ability to parse markdown tables. This makes the markdown close to a github flavor. </p>\n\n<p>Users may need to add additional markdown extension or to configure them. That is where the <code>:extras</code>/<code>extras</code> and <code>:configs</code> attributes come in. The <code>:extras</code> attribute is a list of string names of the markdown extensions to add. The <code>extras</code> attribute, also <code>:extras</code>, is a space seperated string of the extension names. To configure the extensions the python attribute <code>:configs</code> is used. The attribute must be a dict of the format <code>{ '&lt;extension&gt;': {</code><option><code>: &lt;value&gt; } }</code>. The options and available values are found in the <code>markdown</code> modules <a href=\"https://python-markdown.github.io/extensions/\">documentation</a>.</p>\n\n<p>When the markdown is compiled, the resulting html elements are nested in an <code>article</code> element. All attributes that are not <code>src</code>, <code>extras</code>, or <code>:config</code> on the markdown component are added to the parent <code>article</code> element and are left unprocessed. This means that python attributes other than <code>:config</code> or <code>:extras</code> on the markdown component are left \"as is\".</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"cm\">&lt;!-- file.phml --&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">Markdown</span>\n  <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">&quot;../markdown/file.md&quot;</span>\n  <span class=\"na\">extras</span><span class=\"o\">=</span><span class=\"s\">&quot;smarty footnotes&quot;</span>\n  <span class=\"na\">:configs</span><span class=\"o\">=</span><span class=\"s\">&quot;{</span>\n<span class=\"s\">     &quot;</span><span class=\"na\">footnotes</span><span class=\"err\">&quot;</span><span class=\"na\">:</span> <span class=\"err\">{</span>\n       <span class=\"err\">&quot;</span><span class=\"na\">BACKLINK_TEXT</span><span class=\"err\">&quot;</span><span class=\"na\">:</span> <span class=\"err\">&quot;$&quot;</span>           \n     <span class=\"err\">}</span>\n  <span class=\"err\">}&quot;</span>\n<span class=\"p\">&gt;</span>\n</code></pre>\n</div>\n\n<hr />\n\n<blockquote>\n  <p>:warning: This language is in early development stages. Everything is currently subject to change. All forms of feedback are encouraged.</p>\n</blockquote>\n\n<p><br>\nFor more information, check out the <a href=\"https://tired-fox.github.io/phml/phml.html\">API Docs</a></p>\n\n<h2 id=\"basic-usage\">Basic Usage</h2>\n\n<p>The current version is able to parse phml using an html parser. This creates a phml ast which then can be converted back to phml or to json.</p>\n\n<p><strong>Use</strong></p>\n\n<p>First import the core parser and compiler, <code>from phml import HypertextManager</code>. Then you can do the following:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">phml</span> <span class=\"o\">=</span> <span class=\"n\">HypertextManager</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">&quot;path/to/file.phml&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">())</span>\n</code></pre>\n</div>\n\n<p>There is method chaining so most if not all methods can be chained. The obvious exception being any method that returns a value.</p>\n\n<p>By default <code>HypertextManager.render()</code> will return the <code>html</code> string. If you want to get a <code>json</code> string you may pass <code>Formats.JSON</code>. <code>HypertextManager.render(file_type=Formats.JSON)</code>.</p>\n\n<p>If you want to write to a file you can call <code>phml.write(\"path/to/output/file.phml\")</code>. Same with <code>render</code> it defaults to html. You can change this the same way as <code>render</code>. <code>core.write(\"path/to/otuput/file.json\", file_type=Formats.JSON)</code>.</p>\n\n<p>For both <code>render</code> and <code>write</code> you will first need to call <code>phml.load(\"path/to/source/file.phml\")</code>. This parses the source file and stores the ast in the parser. <code>render</code> and <code>write</code> then use that ast to create the desired output. Optionally if you already have a phml or html string or a properly formatted dict you can call <code>core.parse(data)</code> which will parse that information similar to <code>load</code>.</p>\n\n<p>Every time <code>phml.parse</code> or <code>phml.load</code> is called it will overwrite the stored ast variable.</p>\n\n<p>There are many more features such as globally exposed variables, components, slots, exposing python files to be used in phml files, etc...</p>\n\n<p>For more information check out the <a href=\"https://tired-fox.github.io/phml/phml.html\">API Docs</a></p>\n\n<!-- Footer Badges -->\n\n<p><br></p>\n\n<div align=\"center\">\n\n![Made with Python](assets/badges/made_with_python.svg)\n![Built with love](assets/badges/built_with_love.svg)\n\n</div>\n\n<!-- End Badges -->\n"}, "phml.Version": {"fullname": "phml.Version", "modulename": "phml", "qualname": "Version", "type": "class", "doc": "<p>Version object for phml.</p>\n\n<p>{Major}.{Minor}.{Alpha}</p>\n\n<h6 id=\"alpha\">Alpha</h6>\n\n<blockquote>\n  <p>Includes all bugfixes and small feature changes that go into the\n  iterations of a task.</p>\n</blockquote>\n\n<h6 id=\"minor\">Minor</h6>\n\n<blockquote>\n  <p>All alpha changes pulled together into a task version release.</p>\n</blockquote>\n\n<h6 id=\"major\">Major</h6>\n\n<blockquote>\n  <p>All minor changes pulled together into a collection of tasks into a\n  milestone/goal release.</p>\n</blockquote>\n"}, "phml.Version.__init__": {"fullname": "phml.Version.__init__", "modulename": "phml", "qualname": "Version.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Major</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">Minor</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>, </span><span class=\"param\"><span class=\"n\">Alpha</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span></span>)</span>"}, "phml.builder": {"fullname": "phml.builder", "modulename": "phml.builder", "type": "module", "doc": "<p>phml.utilities.builder</p>\n\n<p>This module serves as a utility to make building elements and ast's easier.</p>\n"}, "phml.builder.p": {"fullname": "phml.builder.p", "modulename": "phml.builder", "qualname": "p", "type": "function", "doc": "<p>Generic factory for creating phml nodes.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">selector</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">AST</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span>:</span></span>", "funcdef": "def"}, "phml.compiler": {"fullname": "phml.compiler", "modulename": "phml.compiler", "type": "module", "doc": "<p></p>\n"}, "phml.compiler.HypertextMarkupCompiler": {"fullname": "phml.compiler.HypertextMarkupCompiler", "modulename": "phml.compiler", "qualname": "HypertextMarkupCompiler", "type": "class", "doc": "<p></p>\n"}, "phml.compiler.HypertextMarkupCompiler.__init__": {"fullname": "phml.compiler.HypertextMarkupCompiler.__init__", "modulename": "phml.compiler", "qualname": "HypertextMarkupCompiler.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "phml.compiler.HypertextMarkupCompiler.compile": {"fullname": "phml.compiler.HypertextMarkupCompiler.compile", "modulename": "phml.compiler", "qualname": "HypertextMarkupCompiler.compile", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span>,</span><span class=\"param\">\t<span class=\"n\">_components</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"o\">.</span><span class=\"n\">ComponentManager</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span>:</span></span>", "funcdef": "def"}, "phml.compiler.HypertextMarkupCompiler.render": {"fullname": "phml.compiler.HypertextMarkupCompiler.render", "modulename": "phml.compiler", "qualname": "HypertextMarkupCompiler.render", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span>,</span><span class=\"param\">\t<span class=\"n\">_compress</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.compiler.comp_step": {"fullname": "phml.compiler.comp_step", "modulename": "phml.compiler", "qualname": "comp_step", "type": "function", "doc": "<p>Wrapper for compilation steps. This wraps a function that takes a parent node,\nthe current context, and component manager. The function is expected to mutate the children nodes.\nIt is also expected that the function is not recursive and only mutates the direct children of the node\npassed in.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>Node (Parent):</strong>  The parent node that is the current scope</li>\n<li><strong>components (ComponentManager):</strong>  The manager instance for the components</li>\n<li><strong>context (dict[str, Any]):</strong>  Additional global context from parent objects</li>\n</ul>\n\n<h6 id=\"note\">Note</h6>\n\n<blockquote>\n  <p>There may be any combination of arguments, keyword only arguments, or catch alls with <em>arg and *</em>kwarg.\n  This wrapper will predictably and automatically pass the arguments that are specified.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"o\">.</span><span class=\"n\">ComponentManager</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.components": {"fullname": "phml.components", "modulename": "phml.components", "type": "module", "doc": "<p></p>\n"}, "phml.components.ComponentType": {"fullname": "phml.components.ComponentType", "modulename": "phml.components", "qualname": "ComponentType", "type": "class", "doc": "<p></p>\n", "bases": "typing.TypedDict"}, "phml.components.ComponentManager": {"fullname": "phml.components.ComponentManager", "modulename": "phml.components", "qualname": "ComponentManager", "type": "class", "doc": "<p></p>\n"}, "phml.components.ComponentManager.__init__": {"fullname": "phml.components.ComponentManager.__init__", "modulename": "phml.components", "qualname": "ComponentManager.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "phml.components.ComponentManager.generate_name": {"fullname": "phml.components.ComponentManager.generate_name", "modulename": "phml.components", "qualname": "ComponentManager.generate_name", "type": "function", "doc": "<p>Generate a component name based on it's path. Optionally strip part of the path\nfrom the beginning.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">ignore</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.components.ComponentManager.get_cache": {"fullname": "phml.components.ComponentManager.get_cache", "modulename": "phml.components", "qualname": "ComponentManager.get_cache", "type": "function", "doc": "<p>Get the current cache of component scripts and styles</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"o\">.</span><span class=\"n\">ComponentCacheType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.components.ComponentManager.cache": {"fullname": "phml.components.ComponentManager.cache", "modulename": "phml.components", "qualname": "ComponentManager.cache", "type": "function", "doc": "<p>Add a cache for a specific component. Will only add the cache if\nthe component is new and unique.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"o\">.</span><span class=\"n\">ComponentType</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.components.ComponentManager.parse": {"fullname": "phml.components.ComponentManager.parse", "modulename": "phml.components", "qualname": "ComponentManager.parse", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"o\">.</span><span class=\"n\">ComponentType</span>:</span></span>", "funcdef": "def"}, "phml.components.ComponentManager.add": {"fullname": "phml.components.ComponentManager.add", "modulename": "phml.components", "qualname": "ComponentManager.add", "type": "function", "doc": "<p>Add a component to the component manager with a file path. Also, componetes can be added to\nthe component manager with a name and str or an already parsed component dict.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>file (str):</strong>  The file path to the component.</li>\n<li><strong>ignore (str):</strong>  The path prefix to remove before creating the comopnent name.</li>\n<li><strong>name (str):</strong>  The name of the component. This is the index/key in the component manager.\nThis is also the name of the element in phml. Ex: <code>Some.Component</code> == <code>&lt;Some.Component /&gt;</code></li>\n<li><strong>data (str | ComponentType):</strong>  This is the data that is assigned in the manager. It can be a string\nrepresentation of the component, or an already parsed component type dict.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"o\">.</span><span class=\"n\">ComponentType</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ignore</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.components.ComponentManager.keys": {"fullname": "phml.components.ComponentManager.keys", "modulename": "phml.components", "qualname": "ComponentManager.keys", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.components.ComponentManager.values": {"fullname": "phml.components.ComponentManager.values", "modulename": "phml.components", "qualname": "ComponentManager.values", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.components.ComponentManager.remove": {"fullname": "phml.components.ComponentManager.remove", "modulename": "phml.components", "qualname": "ComponentManager.remove", "type": "function", "doc": "<p>Remove a comopnent from the manager with a specific tag/name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.components.ComponentManager.validate": {"fullname": "phml.components.ComponentManager.validate", "modulename": "phml.components", "qualname": "ComponentManager.validate", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"o\">.</span><span class=\"n\">ComponentType</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.components.tokenize_name": {"fullname": "phml.components.tokenize_name", "modulename": "phml.components", "qualname": "tokenize_name", "type": "function", "doc": "<p>Generates name tokens <code>some name tokanized</code> from a filename.\nAssumes filenames is one of:</p>\n\n<ul>\n<li>snakecase - some_file_name</li>\n<li>camel case - someFileName</li>\n<li>pascal case - SomeFileName</li>\n</ul>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>name (str):</strong>  File name without extension</li>\n<li><strong>normalize (bool):</strong>  Make all tokens fully lowercase. Defaults to True</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>list[str]: List of word tokens.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">normalize</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">title_case</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.core": {"fullname": "phml.core", "modulename": "phml.core", "type": "module", "doc": "<p></p>\n"}, "phml.core.HypertextManager": {"fullname": "phml.core.HypertextManager", "modulename": "phml.core", "qualname": "HypertextManager", "type": "class", "doc": "<p></p>\n"}, "phml.core.HypertextManager.__init__": {"fullname": "phml.core.HypertextManager.__init__", "modulename": "phml.core", "qualname": "HypertextManager.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "phml.core.HypertextManager.parser": {"fullname": "phml.core.HypertextManager.parser", "modulename": "phml.core", "qualname": "HypertextManager.parser", "type": "variable", "doc": "<p>PHML parser.</p>\n", "annotation": ": phml.parser.HypertextMarkupParser"}, "phml.core.HypertextManager.compiler": {"fullname": "phml.core.HypertextManager.compiler", "modulename": "phml.core", "qualname": "HypertextManager.compiler", "type": "variable", "doc": "<p>PHML compiler to HTML.</p>\n", "annotation": ": phml.compiler.HypertextMarkupCompiler"}, "phml.core.HypertextManager.components": {"fullname": "phml.core.HypertextManager.components", "modulename": "phml.core", "qualname": "HypertextManager.components", "type": "variable", "doc": "<p>PHML component parser and manager.</p>\n", "annotation": ": phml.components.ComponentManager"}, "phml.core.HypertextManager.context": {"fullname": "phml.core.HypertextManager.context", "modulename": "phml.core", "qualname": "HypertextManager.context", "type": "variable", "doc": "<p>PHML global variables to expose to each phml file compiled with this instance.\nThis is the highest scope and is overridden by more specific scoped variables.</p>\n", "annotation": ": dict[str, typing.Any]"}, "phml.core.HypertextManager.open": {"fullname": "phml.core.HypertextManager.open", "modulename": "phml.core", "qualname": "HypertextManager.open", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_from</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span>,</span><span class=\"param\">\t<span class=\"n\">_to</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">HypertextManager</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.core.HypertextManager.add_module": {"fullname": "phml.core.HypertextManager.add_module", "modulename": "phml.core", "qualname": "HypertextManager.add_module", "type": "function", "doc": "<p>Pass and imported a python file as a module. The modules are imported and added\nto phml's cached imports. These modules are <strong>ONLY</strong> exposed to the python elements.\nTo use them in the python elements or the other scopes in the files you must use the python\nimport syntax <code>import &lt;module&gt;</code> or <code>from &lt;module&gt; import &lt;...objects&gt;</code>. PHML will parse\nthe imports first and remove them from the python elements. It then checks it's cache of\npython modules that have been imported and adds those imported modules to the local context\nfor each embedded python execution.</p>\n\n<h6 id=\"note\">Note</h6>\n\n<blockquote>\n  <ul>\n  <li><p>All imports will have a <code>.</code> prefixed to the module name. For example <code>current/file.py</code> gets the module\n  name <code>.current.file</code>. This helps seperate and indicate what imports are injected with this method.\n  Module import syntax will retain it's value, For example suppose the module <code>..module.name.here</code>\n  is added. It is in directory <code>module/</code> which is in a sibling directory to <code>current/</code>. The path\n  would look like <code>parent/ -&gt; module/ -&gt; name/ -&gt; here.py</code> and the module would keep the name of\n  <code>..module.name.here</code>.</p></li>\n  <li><p>All paths are resolved with the cwd in mind.</p></li>\n  </ul>\n</blockquote>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>module (str):</strong>  Absolute or relative path to a module, or module syntax reference to a module.</li>\n<li><strong>name (str):</strong>  Optional name for the module after it is imported.</li>\n<li><strong>imports (list[str]):</strong>  Optional list of objects to import from the module. Turns the import to\n<code>from &lt;module&gt; import &lt;...objects&gt;</code> from <code>import &lt;module&gt;</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>str: Name of the imported module. The key to use for indexing imported modules</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">module</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">imports</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">NoReturn</span>:</span></span>", "funcdef": "def"}, "phml.core.HypertextManager.remove_module": {"fullname": "phml.core.HypertextManager.remove_module", "modulename": "phml.core", "qualname": "HypertextManager.remove_module", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">module</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">imports</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.core.HypertextManager.ast": {"fullname": "phml.core.HypertextManager.ast", "modulename": "phml.core", "qualname": "HypertextManager.ast", "type": "variable", "doc": "<p>The current ast that has been parsed. Defaults to None.</p>\n", "annotation": ": phml.nodes.AST"}, "phml.core.HypertextManager.load": {"fullname": "phml.core.HypertextManager.load", "modulename": "phml.core", "qualname": "HypertextManager.load", "type": "function", "doc": "<p>Loads the contents of a file and sets the core objects ast\nto the results after parsing.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.core.HypertextManager.parse": {"fullname": "phml.core.HypertextManager.parse", "modulename": "phml.core", "qualname": "HypertextManager.parse", "type": "function", "doc": "<p>Parse a given phml string or dict into a phml ast.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Instance of the core object for method chaining.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.core.HypertextManager.format": {"fullname": "phml.core.HypertextManager.format", "modulename": "phml.core", "qualname": "HypertextManager.format", "type": "function", "doc": "<p>Format a phml str or file.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>code (str, optional):</strong>  The phml str to format.</li>\n</ul>\n\n<h6 id=\"kwargs\">Kwargs</h6>\n\n<blockquote>\n  <p>file (str, optional): Path to a phml file. Can be used instead of\n      <code>code</code> to parse and format a phml file.\n  compress (bool, optional): Flag to compress the file and remove new lines. Defaults to False.</p>\n</blockquote>\n\n<h6 id=\"note\">Note</h6>\n\n<blockquote>\n  <p>If both <code>code</code> and <code>file</code> are passed in then both will be formatted with the formatted <code>code</code>\n  bing returned as a string and the formatted <code>file</code> being written to the files original location.</p>\n</blockquote>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>str: When a phml str is passed in\n  None: When a file path is passed in. Instead the resulting formatted string is written back to the file.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">code</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">compress</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "phml.core.HypertextManager.compile": {"fullname": "phml.core.HypertextManager.compile", "modulename": "phml.core", "qualname": "HypertextManager.compile", "type": "function", "doc": "<p>Compile the python blocks, python attributes, and phml components and return the resulting ast.\nThe resulting ast replaces the core objects ast.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span>:</span></span>", "funcdef": "def"}, "phml.core.HypertextManager.render": {"fullname": "phml.core.HypertextManager.render", "modulename": "phml.core", "qualname": "HypertextManager.render", "type": "function", "doc": "<p>Renders the phml ast into an html string. If currently in a context manager\nthe resulting string will also be output to an associated file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">_compress</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "phml.core.HypertextManager.write": {"fullname": "phml.core.HypertextManager.write", "modulename": "phml.core", "qualname": "HypertextManager.write", "type": "function", "doc": "<p>Render and write the current ast to a file.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>path (str):</strong>  The output path for the rendered html.</li>\n<li><strong>compress (bool):</strong>  Whether to compress the output. Defaults to False.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span>,</span><span class=\"param\">\t<span class=\"n\">_compress</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.core.HypertextManager.add": {"fullname": "phml.core.HypertextManager.add", "modulename": "phml.core", "qualname": "HypertextManager.add", "type": "function", "doc": "<p>Add a component to the component manager. The components are used by the compiler\nwhen generating html files from phml.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"o\">.</span><span class=\"n\">ComponentType</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ignore</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.core.HypertextManager.remove": {"fullname": "phml.core.HypertextManager.remove", "modulename": "phml.core", "qualname": "HypertextManager.remove", "type": "function", "doc": "<p>Remove a component from the component manager based on the components name/tag.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.core.HypertextManager.expose": {"fullname": "phml.core.HypertextManager.expose", "modulename": "phml.core", "qualname": "HypertextManager.expose", "type": "function", "doc": "<p>Expose global variables to each phml file compiled with this instance.\nThis data is the highest scope and will be overridden by more specific\nscoped variables with equivelant names.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">_context</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.core.HypertextManager.redact": {"fullname": "phml.core.HypertextManager.redact", "modulename": "phml.core", "qualname": "HypertextManager.redact", "type": "function", "doc": "<p>Remove global variable from this instance.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">keys</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.embedded": {"fullname": "phml.embedded", "modulename": "phml.embedded", "type": "module", "doc": "<p>Embedded has all the logic for processing python elements, attributes, and text blocks.</p>\n"}, "phml.embedded.EmbeddedTryCatch": {"fullname": "phml.embedded.EmbeddedTryCatch", "modulename": "phml.embedded", "qualname": "EmbeddedTryCatch", "type": "class", "doc": "<p>Context manager around embedded python execution. Will parse the traceback\nand the content being executed to create a detailed error message. The final\nerror message is raised in a custom EmbeddedPythonException.</p>\n"}, "phml.embedded.EmbeddedTryCatch.__init__": {"fullname": "phml.embedded.EmbeddedTryCatch.__init__", "modulename": "phml.embedded", "qualname": "EmbeddedTryCatch.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">pos</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "phml.embedded.EmbeddedPythonException": {"fullname": "phml.embedded.EmbeddedPythonException", "modulename": "phml.embedded", "qualname": "EmbeddedPythonException", "type": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "builtins.Exception"}, "phml.embedded.EmbeddedPythonException.__init__": {"fullname": "phml.embedded.EmbeddedPythonException.__init__", "modulename": "phml.embedded", "qualname": "EmbeddedPythonException.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span>, </span><span class=\"param\"><span class=\"n\">content</span>, </span><span class=\"param\"><span class=\"n\">pos</span>, </span><span class=\"param\"><span class=\"n\">exc_val</span>, </span><span class=\"param\"><span class=\"n\">exc_tb</span></span>)</span>"}, "phml.embedded.EmbeddedPythonException.format_line": {"fullname": "phml.embedded.EmbeddedPythonException.format_line", "modulename": "phml.embedded", "qualname": "EmbeddedPythonException.format_line", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">line</span>, </span><span class=\"param\"><span class=\"n\">c_width</span>, </span><span class=\"param\"><span class=\"n\">leading</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39; &#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.embedded.EmbeddedPythonException.generate_exception_lines": {"fullname": "phml.embedded.EmbeddedPythonException.generate_exception_lines", "modulename": "phml.embedded", "qualname": "EmbeddedPythonException.generate_exception_lines", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">lines</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.embedded.parse_import_values": {"fullname": "phml.embedded.parse_import_values", "modulename": "phml.embedded", "qualname": "parse_import_values", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">_import</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "phml.embedded.ImportStruct": {"fullname": "phml.embedded.ImportStruct", "modulename": "phml.embedded", "qualname": "ImportStruct", "type": "class", "doc": "<p></p>\n", "bases": "typing.TypedDict"}, "phml.embedded.ImportStruct.values": {"fullname": "phml.embedded.ImportStruct.values", "modulename": "phml.embedded", "qualname": "ImportStruct.values", "type": "function", "doc": "<p>D.values() -> an object providing a view on D's values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.embedded.Module": {"fullname": "phml.embedded.Module", "modulename": "phml.embedded", "qualname": "Module", "type": "class", "doc": "<p>Object used to access the gobal imports. Readonly data.</p>\n"}, "phml.embedded.Module.__init__": {"fullname": "phml.embedded.Module.__init__", "modulename": "phml.embedded", "qualname": "Module.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">module</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">imports</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "phml.embedded.Module.collect": {"fullname": "phml.embedded.Module.collect", "modulename": "phml.embedded", "qualname": "Module.collect", "type": "function", "doc": "<p>Collect the imports and return the single import or a tuple of multiple imports.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "phml.embedded.EmbeddedImport": {"fullname": "phml.embedded.EmbeddedImport", "modulename": "phml.embedded", "qualname": "EmbeddedImport", "type": "class", "doc": "<p>Data representation of an import.</p>\n"}, "phml.embedded.EmbeddedImport.__init__": {"fullname": "phml.embedded.EmbeddedImport.__init__", "modulename": "phml.embedded", "qualname": "EmbeddedImport.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">module</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">push</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, "phml.embedded.EmbeddedImport.module": {"fullname": "phml.embedded.EmbeddedImport.module", "modulename": "phml.embedded", "qualname": "EmbeddedImport.module", "type": "variable", "doc": "<p>Package where the import(s) are from.</p>\n", "annotation": ": str"}, "phml.embedded.EmbeddedImport.objects": {"fullname": "phml.embedded.EmbeddedImport.objects", "modulename": "phml.embedded", "qualname": "EmbeddedImport.objects", "type": "variable", "doc": "<p>The imported objects.</p>\n", "annotation": ": list[str]"}, "phml.embedded.EmbeddedImport.data": {"fullname": "phml.embedded.EmbeddedImport.data", "modulename": "phml.embedded", "qualname": "EmbeddedImport.data", "type": "variable", "doc": "<p>The actual imports stored by a name to value mapping.</p>\n", "annotation": ": dict[str, typing.Any]"}, "phml.embedded.Embedded": {"fullname": "phml.embedded.Embedded", "modulename": "phml.embedded", "qualname": "Embedded", "type": "class", "doc": "<p>Logic for parsing and storing locals and imports of dynamic python code.</p>\n"}, "phml.embedded.Embedded.__init__": {"fullname": "phml.embedded.Embedded.__init__", "modulename": "phml.embedded", "qualname": "Embedded.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "phml.embedded.Embedded.context": {"fullname": "phml.embedded.Embedded.context", "modulename": "phml.embedded", "qualname": "Embedded.context", "type": "variable", "doc": "<p>Variables and locals found in the python code block.</p>\n", "annotation": ": dict[str, typing.Any]"}, "phml.embedded.Embedded.imports": {"fullname": "phml.embedded.Embedded.imports", "modulename": "phml.embedded", "qualname": "Embedded.imports", "type": "variable", "doc": "<p>Imports needed for the python in this scope. Imports are stored in the module globally\nto reduce duplicate imports.</p>\n", "annotation": ": list[phml.embedded.EmbeddedImport]"}, "phml.embedded.Embedded.split_contexts": {"fullname": "phml.embedded.Embedded.split_contexts", "modulename": "phml.embedded", "qualname": "Embedded.split_contexts", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">embedded</span><span class=\"o\">.</span><span class=\"n\">EmbeddedImport</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "phml.embedded.Embedded.parse_data": {"fullname": "phml.embedded.Embedded.parse_data", "modulename": "phml.embedded", "qualname": "Embedded.parse_data", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.embedded.update_ast_node_pos": {"fullname": "phml.embedded.update_ast_node_pos", "modulename": "phml.embedded", "qualname": "update_ast_node_pos", "type": "function", "doc": "<p>Assign lineno, end_lineno, col_offset, and end_col_offset\nfrom a source python ast node to a destination python ast node.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dest</span>, </span><span class=\"param\"><span class=\"n\">source</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.embedded.exec_embedded": {"fullname": "phml.embedded.exec_embedded", "modulename": "phml.embedded", "qualname": "exec_embedded", "type": "function", "doc": "<p>Execute embedded python and return the extracted value. This is the last\nassignment in the embedded python. The embedded python must have the last line as a value\nor an assignment.</p>\n\n<h6 id=\"note\">Note</h6>\n\n<blockquote>\n  <p>No local or global variables will be retained from the embedded python code.</p>\n</blockquote>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>code (str):</strong>  The embedded python code.</li>\n<li><strong>**context (Any):</strong>  The additional context to provide to the embedded python.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Any: The value of the last assignment or value defined</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">code</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "phml.embedded.exec_embedded_blocks": {"fullname": "phml.embedded.exec_embedded_blocks", "modulename": "phml.embedded", "qualname": "exec_embedded_blocks", "type": "function", "doc": "<p>Execute embedded python inside <code>{{}}</code> blocks. The resulting values are subsituted\nin for the found blocks.</p>\n\n<h6 id=\"note\">Note</h6>\n\n<blockquote>\n  <p>No local or global variables will be retained from the embedded python code.</p>\n</blockquote>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>code (str):</strong>  The embedded python code.</li>\n<li><strong>**context (Any):</strong>  The additional context to provide to the embedded python.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>str: The value of the passed in string with the python blocks replaced.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">code</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.embedded.built_in": {"fullname": "phml.embedded.built_in", "modulename": "phml.embedded.built_in", "type": "module", "doc": "<p></p>\n"}, "phml.helpers": {"fullname": "phml.helpers", "modulename": "phml.helpers", "type": "module", "doc": "<p></p>\n"}, "phml.helpers.build_recursive_context": {"fullname": "phml.helpers.build_recursive_context", "modulename": "phml.helpers", "qualname": "build_recursive_context", "type": "function", "doc": "<p>Build recursive context for the current node.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span>,</span><span class=\"param\">\t<span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.helpers.iterate_nodes": {"fullname": "phml.helpers.iterate_nodes", "modulename": "phml.helpers", "qualname": "iterate_nodes", "type": "function", "doc": "<p>Recursively iterate over nodes and their children.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.helpers.calc_offset": {"fullname": "phml.helpers.calc_offset", "modulename": "phml.helpers", "qualname": "calc_offset", "type": "function", "doc": "<p>Get the leading offset of the first line of the string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "phml.helpers.strip_blank_lines": {"fullname": "phml.helpers.strip_blank_lines", "modulename": "phml.helpers", "qualname": "strip_blank_lines", "type": "function", "doc": "<p>Strip the blank lines at the start and end of a list.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.helpers.normalize_indent": {"fullname": "phml.helpers.normalize_indent", "modulename": "phml.helpers", "qualname": "normalize_indent", "type": "function", "doc": "<p>Normalize the indent between all lines.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>content (str):</strong>  The content to normalize the indent for</li>\n<li><strong>indent (bool):</strong>  The amount of offset to add to each line after normalization.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>str: The normalized string</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.helpers.PHMLTryCatch": {"fullname": "phml.helpers.PHMLTryCatch", "modulename": "phml.helpers", "qualname": "PHMLTryCatch", "type": "class", "doc": "<p>Context manager around core PHML actions. When an exception is raised\nit is caught here and the current file that is being handled is prepended\nto the exception message.</p>\n"}, "phml.helpers.PHMLTryCatch.__init__": {"fullname": "phml.helpers.PHMLTryCatch.__init__", "modulename": "phml.helpers", "qualname": "PHMLTryCatch.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">fallback</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span>)</span>"}, "phml.nodes": {"fullname": "phml.nodes", "modulename": "phml.nodes", "type": "module", "doc": "<p></p>\n"}, "phml.nodes.Missing": {"fullname": "phml.nodes.Missing", "modulename": "phml.nodes", "qualname": "Missing", "type": "class", "doc": "<p></p>\n"}, "phml.nodes.Missing.__init__": {"fullname": "phml.nodes.Missing.__init__", "modulename": "phml.nodes", "qualname": "Missing.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "phml.nodes.p_code": {"fullname": "phml.nodes.p_code", "modulename": "phml.nodes", "qualname": "p_code", "type": "function", "doc": "<p>Get python code representation of phml nodes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.LiteralType": {"fullname": "phml.nodes.LiteralType", "modulename": "phml.nodes", "qualname": "LiteralType", "type": "class", "doc": "<p>Enum where members are also (and must be) strings</p>\n", "bases": "enum.StrEnum"}, "phml.nodes.LiteralType.From": {"fullname": "phml.nodes.LiteralType.From", "modulename": "phml.nodes", "qualname": "LiteralType.From", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.NodeType": {"fullname": "phml.nodes.NodeType", "modulename": "phml.nodes", "qualname": "NodeType", "type": "class", "doc": "<p>Enum where members are also (and must be) strings</p>\n", "bases": "enum.StrEnum"}, "phml.nodes.Point": {"fullname": "phml.nodes.Point", "modulename": "phml.nodes", "qualname": "Point", "type": "class", "doc": "<p>Represents one place in a source file.</p>\n\n<p>The line field (1-indexed integer) represents a line in a source file. The column field\n(1-indexed integer) represents a column in a source file. The offset field (0-indexed integer)\nrepresents a character in a source file.</p>\n"}, "phml.nodes.Point.__init__": {"fullname": "phml.nodes.Point.__init__", "modulename": "phml.nodes", "qualname": "Point.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">line</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">column</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, "phml.nodes.Point.from_dict": {"fullname": "phml.nodes.Point.from_dict", "modulename": "phml.nodes", "qualname": "Point.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Point</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Position": {"fullname": "phml.nodes.Position", "modulename": "phml.nodes", "qualname": "Position", "type": "class", "doc": "<p>Position represents the location of a node in a source file.</p>\n\n<p>The <code>start</code> field of <code>Position</code> represents the place of the first character\nof the parsed source region. The <code>end</code> field of Position represents the place\nof the first character after the parsed source region, whether it exists or not.\nThe value of the <code>start</code> and <code>end</code> fields implement the <code>Point</code> interface.</p>\n\n<p>The <code>indent</code> field of <code>Position</code> represents the start column at each index\n(plus start line) in the source region, for elements that span multiple lines.</p>\n\n<p>If the syntactic unit represented by a node is not present in the source file at\nthe time of parsing, the node is said to be <code>generated</code> and it must not have positional\ninformation.</p>\n"}, "phml.nodes.Position.__init__": {"fullname": "phml.nodes.Position.__init__", "modulename": "phml.nodes", "qualname": "Position.__init__", "type": "function", "doc": "<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>start (Point):</strong>  Starting point of the position.</li>\n<li><strong>end (Point):</strong>  End point of the position.</li>\n<li><strong>indent (int | None):</strong>  The indent amount for the start of the position.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Point</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">end</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Point</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span>)</span>"}, "phml.nodes.Position.from_pos": {"fullname": "phml.nodes.Position.from_pos", "modulename": "phml.nodes", "qualname": "Position.from_pos", "type": "function", "doc": "<p>Create a new position from another position object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pos</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Position</span></span><span class=\"return-annotation\">) -> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Position</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Position.from_dict": {"fullname": "phml.nodes.Position.from_dict", "modulename": "phml.nodes", "qualname": "Position.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Position</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Position.as_dict": {"fullname": "phml.nodes.Position.as_dict", "modulename": "phml.nodes", "qualname": "Position.as_dict", "type": "function", "doc": "<p>Convert the position object to a dict.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Node": {"fullname": "phml.nodes.Node", "modulename": "phml.nodes", "qualname": "Node", "type": "class", "doc": "<p>Base phml node. Defines a type and basic interactions.</p>\n"}, "phml.nodes.Node.__init__": {"fullname": "phml.nodes.Node.__init__", "modulename": "phml.nodes", "qualname": "Node.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_type</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">NodeType</span>,</span><span class=\"param\">\t<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Position</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">in_pre</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, "phml.nodes.Node.as_dict": {"fullname": "phml.nodes.Node.as_dict", "modulename": "phml.nodes", "qualname": "Node.as_dict", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Node.from_dict": {"fullname": "phml.nodes.Node.from_dict", "modulename": "phml.nodes", "qualname": "Node.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"n\">in_pre</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.Node.position": {"fullname": "phml.nodes.Node.position", "modulename": "phml.nodes", "qualname": "Node.position", "type": "variable", "doc": "<p>The position of the node in the parsed phml text.\nIs <code>None</code> if the node was generated.</p>\n", "annotation": ": phml.nodes.Position | None"}, "phml.nodes.Node.type": {"fullname": "phml.nodes.Node.type", "modulename": "phml.nodes", "qualname": "Node.type", "type": "variable", "doc": "<p>The node type. Either root, element, or litera.</p>\n", "annotation": ": str"}, "phml.nodes.Node.pos_as_str": {"fullname": "phml.nodes.Node.pos_as_str", "modulename": "phml.nodes", "qualname": "Node.pos_as_str", "type": "function", "doc": "<p>Return the position formatted as a string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Parent": {"fullname": "phml.nodes.Parent", "modulename": "phml.nodes", "qualname": "Parent", "type": "class", "doc": "<p>Base phml node. Defines a type and basic interactions.</p>\n", "bases": "Node"}, "phml.nodes.Parent.__init__": {"fullname": "phml.nodes.Parent.__init__", "modulename": "phml.nodes", "qualname": "Parent.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_type</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">NodeType</span>,</span><span class=\"param\">\t<span class=\"n\">children</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Position</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">in_pre</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, "phml.nodes.Parent.pop": {"fullname": "phml.nodes.Parent.pop", "modulename": "phml.nodes", "qualname": "Parent.pop", "type": "function", "doc": "<p>Pop a node from the children. Defaults to index 0</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">idx</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Parent.index": {"fullname": "phml.nodes.Parent.index", "modulename": "phml.nodes", "qualname": "Parent.index", "type": "function", "doc": "<p>Get the index of a node in the children.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Parent.append": {"fullname": "phml.nodes.Parent.append", "modulename": "phml.nodes", "qualname": "Parent.append", "type": "function", "doc": "<p>Append a child node to the end of the children.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.Parent.extend": {"fullname": "phml.nodes.Parent.extend", "modulename": "phml.nodes", "qualname": "Parent.extend", "type": "function", "doc": "<p>Extend the children with a list of nodes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">nodes</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.Parent.insert": {"fullname": "phml.nodes.Parent.insert", "modulename": "phml.nodes", "qualname": "Parent.insert", "type": "function", "doc": "<p>Insert a child node or nodes into a specific index of the children.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">nodes</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.Parent.remove": {"fullname": "phml.nodes.Parent.remove", "modulename": "phml.nodes", "qualname": "Parent.remove", "type": "function", "doc": "<p>Remove a child node from the children.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.nodes.Parent.len_as_str": {"fullname": "phml.nodes.Parent.len_as_str", "modulename": "phml.nodes", "qualname": "Parent.len_as_str", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Parent.as_dict": {"fullname": "phml.nodes.Parent.as_dict", "modulename": "phml.nodes", "qualname": "Parent.as_dict", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "phml.nodes.AST": {"fullname": "phml.nodes.AST", "modulename": "phml.nodes", "qualname": "AST", "type": "class", "doc": "<p>Base phml node. Defines a type and basic interactions.</p>\n", "bases": "Parent"}, "phml.nodes.AST.__init__": {"fullname": "phml.nodes.AST.__init__", "modulename": "phml.nodes", "qualname": "AST.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">children</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Position</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">in_pre</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, "phml.nodes.Element": {"fullname": "phml.nodes.Element", "modulename": "phml.nodes", "qualname": "Element", "type": "class", "doc": "<p>Base phml node. Defines a type and basic interactions.</p>\n", "bases": "Parent"}, "phml.nodes.Element.__init__": {"fullname": "phml.nodes.Element.__init__", "modulename": "phml.nodes", "qualname": "Element.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tag</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">attributes</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">children</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Position</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">in_pre</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, "phml.nodes.Element.as_dict": {"fullname": "phml.nodes.Element.as_dict", "modulename": "phml.nodes", "qualname": "Element.as_dict", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Element.from_dict": {"fullname": "phml.nodes.Element.from_dict", "modulename": "phml.nodes", "qualname": "Element.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"n\">in_pre</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Element.tag_path": {"fullname": "phml.nodes.Element.tag_path", "modulename": "phml.nodes", "qualname": "Element.tag_path", "type": "variable", "doc": "<p>Get the list of all the tags to the current element. Inclusive.</p>\n", "annotation": ": list[str]"}, "phml.nodes.Element.pop": {"fullname": "phml.nodes.Element.pop", "modulename": "phml.nodes", "qualname": "Element.pop", "type": "function", "doc": "<p>Pop a specific attribute from the elements attributes. A default value\ncan be provided for when the value is not found, otherwise an error is thrown.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">idx</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">_default</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Missing</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Element.get": {"fullname": "phml.nodes.Element.get", "modulename": "phml.nodes", "qualname": "Element.get", "type": "function", "doc": "<p>Get a specific element attribute. Returns <code>None</code> if not found\nunless <code>_default</code> is defined.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>key (str):</strong>  The name of the attribute to retrieve.</li>\n<li><strong>_default (str|bool):</strong>  The default value to return if the key\nisn't an attribute.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>str|bool|None: str or bool if the attribute exists or a default\n      was provided, else None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">_default</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Missing</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Element.attrs_as_str": {"fullname": "phml.nodes.Element.attrs_as_str", "modulename": "phml.nodes", "qualname": "Element.attrs_as_str", "type": "function", "doc": "<p>Return a str representation of the attributes</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Literal": {"fullname": "phml.nodes.Literal", "modulename": "phml.nodes", "qualname": "Literal", "type": "class", "doc": "<p>Base phml node. Defines a type and basic interactions.</p>\n", "bases": "Node"}, "phml.nodes.Literal.__init__": {"fullname": "phml.nodes.Literal.__init__", "modulename": "phml.nodes", "qualname": "Literal.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Position</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">in_pre</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, "phml.nodes.Literal.as_dict": {"fullname": "phml.nodes.Literal.as_dict", "modulename": "phml.nodes", "qualname": "Literal.as_dict", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Literal.is_text": {"fullname": "phml.nodes.Literal.is_text", "modulename": "phml.nodes", "qualname": "Literal.is_text", "type": "function", "doc": "<p>Check if a node is a literal and a text node.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "phml.nodes.Literal.is_comment": {"fullname": "phml.nodes.Literal.is_comment", "modulename": "phml.nodes", "qualname": "Literal.is_comment", "type": "function", "doc": "<p>Check if a node is a literal and a comment.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "phml.nodes.inspect": {"fullname": "phml.nodes.inspect", "modulename": "phml.nodes", "qualname": "inspect", "type": "function", "doc": "<p>Inspected a given node recursively.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>node (Node):</strong>  Any type of node to inspect.</li>\n<li><strong>color (bool):</strong>  Whether to return a string with ansi encoding. Default False.</li>\n<li><strong>text (bool):</strong>  Whether to include the text from comment and text nodes. Default False.</li>\n</ul>\n\n<h6 id=\"return\">Return</h6>\n\n<blockquote>\n  <p>A formatted multiline string representation of the node and it's children.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span>, </span><span class=\"param\"><span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.parser": {"fullname": "phml.parser", "modulename": "phml.parser", "type": "module", "doc": "<p>Pythonic Hypertext Markup Language (phml) parser.</p>\n"}, "phml.parser.strip": {"fullname": "phml.parser.strip", "modulename": "phml.parser", "qualname": "strip", "type": "function", "doc": "<p>This function takes a possibly multiline string and strips leading and trailing\nblank lines. Given the current tag stack it will not strip the text if it is nested\nin a <code>pre</code> tag.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">cur_tags</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.parser.RE": {"fullname": "phml.parser.RE", "modulename": "phml.parser", "qualname": "RE", "type": "class", "doc": "<p></p>\n"}, "phml.parser.RE.__init__": {"fullname": "phml.parser.RE.__init__", "modulename": "phml.parser", "qualname": "RE.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "phml.parser.RE.tag_start": {"fullname": "phml.parser.RE.tag_start", "modulename": "phml.parser", "qualname": "RE.tag_start", "type": "variable", "doc": "<p>Matches the start of a tag <code>&lt;!name|&lt;/name|&lt;name</code></p>\n", "default_value": " = re.compile(&#x27;(?P&lt;comment&gt;&lt;!--)|&lt;(?!!--)(?P&lt;opening&gt;!|\\\\/)?(?P&lt;name&gt;([\\\\w:\\\\.]+\\\\-?)+)|&lt;(?P&lt;opening2&gt;/)?(?=\\\\s+&gt;|&gt;)&#x27;)"}, "phml.parser.RE.tag_end": {"fullname": "phml.parser.RE.tag_end", "modulename": "phml.parser", "qualname": "RE.tag_end", "type": "variable", "doc": "<p>Matches the end of a tag <code>/&gt;|&gt;</code>.</p>\n", "default_value": " = re.compile(&#x27;(?P&lt;closing&gt;/?)&gt;&#x27;)"}, "phml.parser.RE.comment": {"fullname": "phml.parser.RE.comment", "modulename": "phml.parser", "qualname": "RE.comment", "type": "variable", "doc": "<p>Matches all html style comments <code>&lt;!--Comment--&gt;</code>.</p>\n", "default_value": " = re.compile(&#x27;&lt;!--((?:.|\\\\s)*)--&gt;&#x27;)"}, "phml.parser.RE.attribute": {"fullname": "phml.parser.RE.attribute", "modulename": "phml.parser", "qualname": "RE.attribute", "type": "variable", "doc": "<p>Matches a tags attributes <code>attr|attr=value|attr='value'|attr=\"value\"</code>.</p>\n", "default_value": " = re.compile(&#x27;(?P&lt;name&gt;[\\\\w:\\\\-@]+)(?:=(?P&lt;value&gt;\\\\{(?P&lt;curly&gt;[^\\\\}]*)\\\\/\\\\}|\\\\&quot;(?P&lt;double&gt;[^\\\\&quot;]*)\\\\&quot;|\\&#x27;(?P&lt;single&gt;[^\\&#x27;]*)\\&#x27;|(?P&lt;open&gt;[^&gt;\\&#x27;\\\\&quot;\\\\s]+)))?&#x27;)"}, "phml.parser.HypertextMarkupParser": {"fullname": "phml.parser.HypertextMarkupParser", "modulename": "phml.parser", "qualname": "HypertextMarkupParser", "type": "class", "doc": "<p>Parse html/xml like source code strings.</p>\n"}, "phml.parser.HypertextMarkupParser.__init__": {"fullname": "phml.parser.HypertextMarkupParser.__init__", "modulename": "phml.parser", "qualname": "HypertextMarkupParser.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "phml.parser.HypertextMarkupParser.tag_stack": {"fullname": "phml.parser.HypertextMarkupParser.tag_stack", "modulename": "phml.parser", "qualname": "HypertextMarkupParser.tag_stack", "type": "variable", "doc": "<p>Current stack of tags in order of when they are opened.</p>\n", "default_value": " = []"}, "phml.parser.HypertextMarkupParser.in_pre": {"fullname": "phml.parser.HypertextMarkupParser.in_pre", "modulename": "phml.parser", "qualname": "HypertextMarkupParser.in_pre", "type": "variable", "doc": "<p>Whether the current element context is inside a pre element.</p>\n", "annotation": ": int", "default_value": " = 0"}, "phml.parser.HypertextMarkupParser.is_self_closing": {"fullname": "phml.parser.HypertextMarkupParser.is_self_closing", "modulename": "phml.parser", "qualname": "HypertextMarkupParser.is_self_closing", "type": "function", "doc": "<p>Check if the tag is self closing. Only check if auto_closing is toggled on.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">auto_closing</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "phml.parser.HypertextMarkupParser.parse": {"fullname": "phml.parser.HypertextMarkupParser.parse", "modulename": "phml.parser", "qualname": "HypertextMarkupParser.parse", "type": "function", "doc": "<p>Parse a given html or phml string into it's corresponding phml ast.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>source (str):</strong>  The html or phml source to parse.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>AST: A phml AST representing the parsed code source.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">source</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">auto_close</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">AST</span>:</span></span>", "funcdef": "def"}, "phml.utilities": {"fullname": "phml.utilities", "modulename": "phml.utilities", "type": "module", "doc": "<p>phml.utilities</p>\n\n<p>This is a collection of utility functions that allow for manipulation, traversal,\nand discovery inside a phml.ast.AST.</p>\n"}, "phml.utilities.locate": {"fullname": "phml.utilities.locate", "modulename": "phml.utilities.locate", "type": "module", "doc": "<p>utilities.find</p>\n\n<p>Collection of utilities centered around finding nodes in an ast.</p>\n"}, "phml.utilities.locate.find": {"fullname": "phml.utilities.locate.find", "modulename": "phml.utilities.locate.find", "type": "module", "doc": "<p>phml.utilities.locate.find</p>\n\n<p>Collection of utility methods to find one or many of a specific node.</p>\n"}, "phml.utilities.locate.find.ancestor": {"fullname": "phml.utilities.locate.find.ancestor", "modulename": "phml.utilities.locate.find", "qualname": "ancestor", "type": "function", "doc": "<p>Get the common ancestor between two nodes.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>*nodes (Node):</strong>  A list of any number of nodes</li>\n<li>to find the common ancestor form. Worst case it will</li>\n<li>return the root.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Optional[Node]: The node that is the common\n  ancestor or None if not found.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">nodes</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span></span><span class=\"return-annotation\">) -> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "phml.utilities.locate.find.find": {"fullname": "phml.utilities.locate.find.find", "modulename": "phml.utilities.locate.find", "qualname": "find", "type": "function", "doc": "<p>Walk the nodes children and return the desired node.</p>\n\n<p>Returns the first node that matches the condition.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>start (Parent):</strong>  Starting node.</li>\n<li><strong>condition (Test):</strong>  Condition to check against each node.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Optional[Node]: Returns the found node or None if not found.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "phml.utilities.locate.find.find_all": {"fullname": "phml.utilities.locate.find.find_all", "modulename": "phml.utilities.locate.find", "qualname": "find_all", "type": "function", "doc": "<p>Find all nodes that match the condition.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>start (Root | Element):</strong>  Starting node.</li>\n<li><strong>condition (Test):</strong>  Condition to apply to each node.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>list[Node]: List of found nodes. Empty if no nodes are found.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.utilities.locate.find.find_after": {"fullname": "phml.utilities.locate.find.find_after", "modulename": "phml.utilities.locate.find", "qualname": "find_after", "type": "function", "doc": "<p>Get the first sibling node following the provided node that matches\nthe condition.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>start (Node):</strong>  Node to get sibling from.</li>\n<li><strong>condition (Test):</strong>  Condition to check against each node.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Optional[Node]: Returns the first sibling or None if there\n  are no siblings.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "phml.utilities.locate.find.find_all_after": {"fullname": "phml.utilities.locate.find.find_all_after", "modulename": "phml.utilities.locate.find", "qualname": "find_all_after", "type": "function", "doc": "<p>Get all sibling nodes that match the condition.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>start (Node):</strong>  Node to get siblings from.</li>\n<li><strong>condition (Test):</strong>  Condition to check against each node.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>list[Node]: Returns the all siblings that match the\n  condition or an empty list if none were found.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.utilities.locate.find.find_all_before": {"fullname": "phml.utilities.locate.find.find_all_before", "modulename": "phml.utilities.locate.find", "qualname": "find_all_before", "type": "function", "doc": "<p>Find all nodes that come before the given node.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>start (Node):</strong>  The node to find all previous siblings from.</li>\n<li><strong>condition (Optional[Test]):</strong>  The condition to apply to each node.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>list[Node]: A list of nodes that come before the given node.\n  Empty list if no nodes were found.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.utilities.locate.find.find_before": {"fullname": "phml.utilities.locate.find.find_before", "modulename": "phml.utilities.locate.find", "qualname": "find_before", "type": "function", "doc": "<p>Find the first sibling node before the given node. If a condition is applied\nthen it will be the first sibling node that passes that condition.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>start (Node):</strong>  The node to find the previous sibling from.</li>\n<li><strong>condition (Optional[Test]):</strong>  The test that is applied to each node.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Optional[Node]: The first node before the given node\n  or None if no prior siblings.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "phml.utilities.locate.find.find_all_between": {"fullname": "phml.utilities.locate.find.find_all_between", "modulename": "phml.utilities.locate.find", "qualname": "find_all_between", "type": "function", "doc": "<p>Find all sibling nodes in parent that meet the provided condition from start index\nto end index.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>parent (Parent):</strong>  The parent element to get nodes from.</li>\n<li><strong>start (int, optional):</strong>  The starting index, inclusive. Defaults to 0.</li>\n<li><strong>end (int, optional):</strong>  The ending index, exclusive. Defaults to 0.</li>\n<li><strong>condition (Test, optional):</strong>  Condition to apply to each node. Defaults to None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>list[Node]: List of all matching nodes or an empty list if none were found.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span>,</span><span class=\"param\">\t<span class=\"n\">segment</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.utilities.locate.index": {"fullname": "phml.utilities.locate.index", "modulename": "phml.utilities.locate.index", "type": "module", "doc": "<p></p>\n"}, "phml.utilities.locate.index.Index": {"fullname": "phml.utilities.locate.index.Index", "modulename": "phml.utilities.locate.index", "qualname": "Index", "type": "class", "doc": "<p>Uses the given key or key generator and creates a mutable dict of key value pairs\nthat can be easily indexed.</p>\n\n<p>Nodes that don't match the condition or don't have a valid key are not indexed.</p>\n"}, "phml.utilities.locate.index.Index.__init__": {"fullname": "phml.utilities.locate.index.Index.__init__", "modulename": "phml.utilities.locate.index", "qualname": "Index.__init__", "type": "function", "doc": "<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong><code>key</code> (str | Callable):</strong>  Str represents the attribute to use as an index. Callable</li>\n<li>represents a function to call on each element to generate a key. The returned key</li>\n<li>must be able to be converted to a string. If none then element is skipped.</li>\n<li><strong><code>start</code> (Parent):</strong>  The root or node to start at while indexing</li>\n<li><strong><code>test</code> (Test):</strong>  The test to apply to each node. Only valid/passing nodes</li>\n<li>will be indexed</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "phml.utilities.locate.index.Index.indexed_tree": {"fullname": "phml.utilities.locate.index.Index.indexed_tree", "modulename": "phml.utilities.locate.index", "qualname": "Index.indexed_tree", "type": "variable", "doc": "<p>The indexed collection of elements</p>\n", "annotation": ": dict[typing.Any, list[phml.nodes.Element]]"}, "phml.utilities.locate.index.Index.items": {"fullname": "phml.utilities.locate.index.Index.items", "modulename": "phml.utilities.locate.index", "qualname": "Index.items", "type": "function", "doc": "<p>Get the key value pairs of all indexes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.locate.index.Index.values": {"fullname": "phml.utilities.locate.index.Index.values", "modulename": "phml.utilities.locate.index", "qualname": "Index.values", "type": "function", "doc": "<p>Get all the values in the collection.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.locate.index.Index.keys": {"fullname": "phml.utilities.locate.index.Index.keys", "modulename": "phml.utilities.locate.index", "qualname": "Index.keys", "type": "function", "doc": "<p>Get all the keys in the collection.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.locate.index.Index.add": {"fullname": "phml.utilities.locate.index.Index.add", "modulename": "phml.utilities.locate.index", "qualname": "Index.add", "type": "function", "doc": "<p>Adds element to indexed collection if not already there.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.locate.index.Index.remove": {"fullname": "phml.utilities.locate.index.Index.remove", "modulename": "phml.utilities.locate.index", "qualname": "Index.remove", "type": "function", "doc": "<p>Removes element from indexed collection if there.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.locate.index.Index.get": {"fullname": "phml.utilities.locate.index.Index.get", "modulename": "phml.utilities.locate.index", "qualname": "Index.get", "type": "function", "doc": "<p>Get a specific index from the indexed tree.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">_default</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Missing</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "phml.utilities.locate.index.Index.key_by_tag": {"fullname": "phml.utilities.locate.index.Index.key_by_tag", "modulename": "phml.utilities.locate.index", "qualname": "Index.key_by_tag", "type": "function", "doc": "<p>Builds the key from an elements tag. If the node is not an element\nthen the node's type is returned.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.utilities.locate.select": {"fullname": "phml.utilities.locate.select", "modulename": "phml.utilities.locate.select", "type": "module", "doc": "<p>utilities.select</p>\n\n<p>A collection of utilities around querying for specific\ntypes of data.</p>\n"}, "phml.utilities.locate.select.query": {"fullname": "phml.utilities.locate.select.query", "modulename": "phml.utilities.locate.select", "qualname": "query", "type": "function", "doc": "<p>Same as javascripts querySelector. <code>#</code> indicates an id and <code>.</code>\nindicates a class. If they are used alone they match anything.\nAny tag can be used by itself or with <code>#</code> and/or <code>.</code>. You may use\nany number of class specifiers, but may only use one id specifier per\ntag name. Complex specifiers are accepted are allowed meaning you can\nhave space seperated specifiers indicating nesting or a parent child\nrelationship.</p>\n\n<p>Rules:</p>\n\n<ul>\n<li><code>*</code> = any element</li>\n<li><code>&gt;</code> = direct child of the current element</li>\n<li><code>+</code> = first sibling</li>\n<li><code>~</code> = elements after the current element</li>\n<li><code>.</code> = class</li>\n<li><code>#</code> = id</li>\n<li><code>[attribute]</code> = elements with attribute</li>\n<li><code>[attribute=value]</code> = elements with attribute=value</li>\n<li><code>[attribute~=value]</code> = elements with attribute containing value</li>\n<li><code>[attribute|=value]</code> = elements with attribute=value or attribute starting with value-</li>\n<li><code>[attribute^=value]</code> = elements with an attribute starting with value</li>\n<li><code>[attribute$=value]</code> = elements with an attribute ending with value</li>\n<li><code>[attribute*=value]</code> = elements with an attribute containing value</li>\n</ul>\n\n<p>Examles:</p>\n\n<ul>\n<li><code>.some-example</code> matches the first element with the class <code>some-example</code></li>\n<li><code>#some-example</code> matches the first element with the id <code>some-example</code></li>\n<li><code>li</code> matches the first <code>li</code> element</li>\n<li><code>li.red</code> matches the first <code>li</code> with the class <code>red</code></li>\n<li><code>li#red</code> matches the first <code>li</code> with the id <code>red</code></li>\n<li><code>input[type=\"checkbox\"]</code> matches the first <code>input</code> with the attribute <code>type=\"checkbox\"</code></li>\n<li><code>div.form-control input[type=\"checkbox\"]</code> matches the first <code>input</code> with the\nattribute <code>type=\"checked\"</code> that has a parent <code>div</code> with the class <code>form-control</code>.</li>\n</ul>\n\n<h6 id=\"return\">Return</h6>\n\n<blockquote>\n  <p>Element | None: The first element matching the specifier or None if no element was\n  found.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tree</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span>, </span><span class=\"param\"><span class=\"n\">specifier</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "phml.utilities.locate.select.query_all": {"fullname": "phml.utilities.locate.select.query_all", "modulename": "phml.utilities.locate.select", "qualname": "query_all", "type": "function", "doc": "<p>Same as javascripts querySelectorAll. <code>#</code> indicates an id and <code>.</code>\nindicates a class. If they are used alone they match anything.\nAny tag can be used by itself or with <code>#</code> and/or <code>.</code>. You may use\nany number of class specifiers, but may only use one id specifier per\ntag name. Complex specifiers are accepted are allowed meaning you can\nhave space seperated specifiers indicating nesting or a parent child\nrelationship.</p>\n\n<p>Rules:</p>\n\n<ul>\n<li><code>*</code> = any element</li>\n<li><code>&gt;</code> = direct child of the current element</li>\n<li><code>+</code> = first sibling</li>\n<li><code>~</code> = elements after the current element</li>\n<li><code>.</code> = class</li>\n<li><code>#</code> = id</li>\n<li><code>[attribute]</code> = elements with attribute</li>\n<li><code>[attribute=value]</code> = elements with attribute=value</li>\n<li><code>[attribute~=value]</code> = elements with attribute containing value</li>\n<li><code>[attribute|=value]</code> = elements with attribute=value or attribute starting with value-</li>\n<li><code>[attribute^=value]</code> = elements with an attribute starting with value</li>\n<li><code>[attribute$=value]</code> = elements with an attribute ending with value</li>\n<li><code>[attribute*=value]</code> = elements with an attribute containing value</li>\n</ul>\n\n<p>Examles:</p>\n\n<ul>\n<li><code>.some-example</code> matches the first element with the class <code>some-example</code></li>\n<li><code>#some-example</code> matches the first element with the id <code>some-example</code></li>\n<li><code>li</code> matches the first <code>li</code> element</li>\n<li><code>li.red</code> matches the first <code>li</code> with the class <code>red</code></li>\n<li><code>li#red</code> matches the first <code>li</code> with the id <code>red</code></li>\n<li><code>input[type=\"checkbox\"]</code> matches the first <code>input</code> with the attribute <code>type=\"checkbox\"</code></li>\n<li><code>div.form-control input[type=\"checkbox\"]</code> matches the first <code>input</code> with the\nattribute <code>type=\"checked\"</code> that has a parent <code>div</code> with the class <code>form-control</code>.</li>\n</ul>\n\n<h6 id=\"return\">Return</h6>\n\n<blockquote>\n  <p>list[Element] | None: The all elements matching the specifier or and empty list if no\n  elements were found.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tree</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span>, </span><span class=\"param\"><span class=\"n\">specifier</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.utilities.locate.select.matches": {"fullname": "phml.utilities.locate.select.matches", "modulename": "phml.utilities.locate.select", "qualname": "matches", "type": "function", "doc": "<p>Works the same as the Javascript matches. <code>#</code> indicates an id and <code>.</code>\nindicates a class. If they are used alone they match anything.\nAny tag can be used by itself or with <code>#</code> and/or <code>.</code>. You may use\nany number of class specifiers, but may only use one id specifier per\ntag name. Complex specifiers are not supported. Everything in the specifier\nmust relate to one element/tag.</p>\n\n<p>Rules:</p>\n\n<ul>\n<li><code>.</code> = class</li>\n<li><code>#</code> = id</li>\n<li><code>[attribute]</code> = elements with attribute</li>\n<li><code>[attribute=value]</code> = elements with attribute=value</li>\n<li><code>[attribute~=value]</code> = elements with attribute containing value</li>\n<li><code>[attribute|=value]</code> = elements with attribute=value or attribute starting with value-</li>\n<li><code>[attribute^=value]</code> = elements with an attribute starting with value</li>\n<li><code>[attribute$=value]</code> = elements with an attribute ending with value</li>\n<li><code>[attribute*=value]</code> = elements with an attribute containing value</li>\n</ul>\n\n<p>Examles:</p>\n\n<ul>\n<li><code>.some-example</code> matches the element with the class <code>some-example</code></li>\n<li><code>#some-example</code> matches the element with the id <code>some-example</code></li>\n<li><code>li</code> matches an <code>li</code> element</li>\n<li><code>li.red</code> matches the an <code>li</code> with the class <code>red</code></li>\n<li><code>li#red</code> matches the an <code>li</code> with the id <code>red</code></li>\n<li><code>input[type=\"checkbox\"]</code> matches the <code>input</code> element with the attribute <code>type=\"checkbox\"</code></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span>, </span><span class=\"param\"><span class=\"n\">specifier</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "phml.utilities.locate.select.parse_specifiers": {"fullname": "phml.utilities.locate.select.parse_specifiers", "modulename": "phml.utilities.locate.select", "qualname": "parse_specifiers", "type": "function", "doc": "<p>Rules:</p>\n\n<ul>\n<li><code>*</code> = any element</li>\n<li><code>&gt;</code> = direct child of the current element</li>\n<li><code>+</code> = first sibling</li>\n<li><code>~</code> = elements after the current element</li>\n<li><code>.</code> = class</li>\n<li><code>#</code> = id</li>\n<li><code>[attribute]</code> = elements with attribute</li>\n<li><code>[attribute=value]</code> = elements with attribute=value</li>\n<li><code>[attribute~=value]</code> = elements with attribute containing value</li>\n<li><code>[attribute|=value]</code> = elements with attribute=value or attribute starting with value-</li>\n<li><code>[attribute^=value]</code> = elements with an attribute starting with value</li>\n<li><code>[attribute$=value]</code> = elements with an attribute ending with value</li>\n<li><code>[attribute*=value]</code> = elements with an attribute containing value</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">specifier</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, "phml.utilities.misc": {"fullname": "phml.utilities.misc", "modulename": "phml.utilities.misc", "type": "module", "doc": "<p>phml.utilities.misc</p>\n\n<p>Helpful utilities for different tasks that doesn't have a place in the other categories.</p>\n"}, "phml.utilities.misc.depth": {"fullname": "phml.utilities.misc.depth", "modulename": "phml.utilities.misc", "qualname": "depth", "type": "function", "doc": "<p>Get the depth in the tree for a given node.</p>\n\n<p>-1 means that you passed in the tree itself and you are at the\nast's root.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "phml.utilities.misc.size": {"fullname": "phml.utilities.misc.size", "modulename": "phml.utilities.misc", "qualname": "size", "type": "function", "doc": "<p>Get the number of nodes recursively.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "phml.utilities.misc.classes": {"fullname": "phml.utilities.misc.classes", "modulename": "phml.utilities.misc.classes", "type": "module", "doc": "<p>utilities.misc</p>\n\n<p>A collection of utilities that don't fit in with finding, selecting, testing,\ntransforming, traveling, or validating nodes.</p>\n"}, "phml.utilities.misc.classes.classnames": {"fullname": "phml.utilities.misc.classes.classnames", "modulename": "phml.utilities.misc.classes", "qualname": "classnames", "type": "function", "doc": "<p>Concat a bunch of class names. Can take a str as a class,\nint which is cast to a str to be a class, a dict of conditional classes,\nand a list of all the previous conditions including itself.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<blockquote>\n  <p>Assume that the current class on node is <code>bold</code></p>\n</blockquote>\n\n<ul>\n<li><code>classnames(node, 'flex')</code> yields <code>'bold flex'</code></li>\n<li><code>classnames(node, 13)</code> yields <code>'bold 13'</code></li>\n<li><code>classnames(node, {'shadow': True, 'border': 0})</code> yields <code>'bold shadow'</code></li>\n<li><code>classnames('a', 13, {'b': True}, ['c', {'d': False}])</code> yields <code>'a b c'</code></li>\n</ul>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>node (Element | None):</strong>  Node to apply the classes too. If no node is given</li>\n<li>then the function returns a string.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>str: The concat string of classes after processing.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">conditionals</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "phml.utilities.misc.classes.ClassList": {"fullname": "phml.utilities.misc.classes.ClassList", "modulename": "phml.utilities.misc.classes", "qualname": "ClassList", "type": "class", "doc": "<p>Utility class to manipulate the class list on a node.</p>\n\n<p>Based on the hast-util-class-list:\n<a href=\"https://github.com/brechtcs/hast-util-class-list\">https://github.com/brechtcs/hast-util-class-list</a></p>\n"}, "phml.utilities.misc.classes.ClassList.__init__": {"fullname": "phml.utilities.misc.classes.ClassList.__init__", "modulename": "phml.utilities.misc.classes", "qualname": "ClassList.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span></span>)</span>"}, "phml.utilities.misc.classes.ClassList.toggle": {"fullname": "phml.utilities.misc.classes.ClassList.toggle", "modulename": "phml.utilities.misc.classes", "qualname": "ClassList.toggle", "type": "function", "doc": "<p>Toggle a class in <code>class</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">klasses</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.misc.classes.ClassList.add": {"fullname": "phml.utilities.misc.classes.ClassList.add", "modulename": "phml.utilities.misc.classes", "qualname": "ClassList.add", "type": "function", "doc": "<p>Add one or more classes to <code>class</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">klasses</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.misc.classes.ClassList.replace": {"fullname": "phml.utilities.misc.classes.ClassList.replace", "modulename": "phml.utilities.misc.classes", "qualname": "ClassList.replace", "type": "function", "doc": "<p>Replace a certain class in <code>class</code> with\nanother class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">old_class</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">new_class</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.misc.classes.ClassList.remove": {"fullname": "phml.utilities.misc.classes.ClassList.remove", "modulename": "phml.utilities.misc.classes", "qualname": "ClassList.remove", "type": "function", "doc": "<p>Remove one or more classes from <code>class</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">klasses</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.misc.classes.ClassList.classes": {"fullname": "phml.utilities.misc.classes.ClassList.classes", "modulename": "phml.utilities.misc.classes", "qualname": "ClassList.classes", "type": "variable", "doc": "<p>Return the formatted string of classes.</p>\n", "annotation": ": str"}, "phml.utilities.misc.heading": {"fullname": "phml.utilities.misc.heading", "modulename": "phml.utilities.misc.heading", "type": "module", "doc": "<p>Utility functions that do something with heading tags.</p>\n"}, "phml.utilities.misc.heading.heading_rank": {"fullname": "phml.utilities.misc.heading.heading_rank", "modulename": "phml.utilities.misc.heading", "qualname": "heading_rank", "type": "function", "doc": "<p>Get the rank of the heading element.</p>\n\n<h6 id=\"example\">Example</h6>\n\n<blockquote>\n  <p><code>h2</code> yields <code>2</code></p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "phml.utilities.transform": {"fullname": "phml.utilities.transform", "modulename": "phml.utilities.transform", "type": "module", "doc": "<p>utilities.transform</p>\n\n<p>A collection of utilities focused around transforming an\nast or a specific nodes.</p>\n"}, "phml.utilities.transform.extract": {"fullname": "phml.utilities.transform.extract", "modulename": "phml.utilities.transform.extract", "type": "module", "doc": "<p></p>\n"}, "phml.utilities.transform.extract.to_string": {"fullname": "phml.utilities.transform.extract.to_string", "modulename": "phml.utilities.transform.extract", "qualname": "to_string", "type": "function", "doc": "<p>Get the raw text content of the element. Works similar to\nthe DOMs Node#textContent getter.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>node (Root | Element | Text):</strong>  Node to get the text content from</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>str: Raw inner text without formatting.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "phml.utilities.transform.sanitize": {"fullname": "phml.utilities.transform.sanitize", "modulename": "phml.utilities.transform.sanitize", "type": "module", "doc": "<p>phml.utilities.transform.sanatize</p>\n\n<p>Logic for sanatizing a phml ast.</p>\n"}, "phml.utilities.transform.sanitize.sanatize": {"fullname": "phml.utilities.transform.sanitize.sanatize", "modulename": "phml.utilities.transform.sanitize", "qualname": "sanatize", "type": "function", "doc": "<p>Sanatize elements and attributes in the phml tree. Should be used when using\ndata from an unkown source. It should be used with an AST that has already been\ncompiled to html to no unkown values are unchecked.</p>\n\n<p>By default the sanatization schema uses the github schema and follows the hast\nsanatize utility.</p>\n\n<ul>\n<li><a href=\"https://github.com/syntax-tree/hast-util-sanitize/blob/main/lib/schema.js\">github schema</a></li>\n<li><a href=\"https://github.com/syntax-tree/hast-util-sanitize\">hast sanatize</a></li>\n</ul>\n\n<h6 id=\"note\">Note</h6>\n\n<blockquote>\n  <p>This utility will edit the tree in place.</p>\n</blockquote>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>tree (Parent):</strong>  The root of the tree that will be sanatized.</li>\n<li><strong>schema (Schema, optional):</strong>  User defined schema. Defaults to github schema.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tree</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span>,</span><span class=\"param\">\t<span class=\"n\">schema</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">utilities</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"o\">.</span><span class=\"n\">sanitize</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">Schema</span> <span class=\"o\">=</span> <span class=\"n\">Schema</span><span class=\"p\">(</span><span class=\"n\">strip</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;script&#39;</span><span class=\"p\">],</span> <span class=\"n\">ancestors</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;tbody&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;table&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;tfoot&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;table&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;thead&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;table&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;td&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;table&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;th&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;table&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;tr&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;table&#39;</span><span class=\"p\">]},</span> <span class=\"n\">protocols</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;href&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;http&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;https&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;mailto&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;xmpp&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;irc&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;ircs&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;cite&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;http&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;https&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;src&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;http&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;https&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;longDesc&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;http&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;https&#39;</span><span class=\"p\">]},</span> <span class=\"n\">tag_names</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;h1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;h2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;h3&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;h4&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;h5&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;h6&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;br&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;i&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;strong&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;em&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;a&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;pre&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;code&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;img&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;tt&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;div&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;ins&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;del&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;sup&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;sub&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;p&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;ol&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;ul&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;table&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;thead&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;tbody&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;tfoot&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;blockquote&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dl&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dt&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dd&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;kbd&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;q&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;samp&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;var&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;hr&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;ruby&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rt&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rp&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;li&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;tr&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;td&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;th&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;s&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;strike&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;summary&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;details&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;caption&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;figure&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;figcaption&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abbr&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;bdo&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cite&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dfn&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;mark&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;small&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;span&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;time&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;wbr&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;input&#39;</span><span class=\"p\">],</span> <span class=\"n\">attributes</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;href&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;article&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;class&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;img&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;src&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;longDesc&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;loading&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;input&#39;</span><span class=\"p\">:</span> <span class=\"p\">[(</span><span class=\"s1\">&#39;type&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;checkbox&#39;</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">&#39;disabled&#39;</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)],</span> <span class=\"s1\">&#39;li&#39;</span><span class=\"p\">:</span> <span class=\"p\">[(</span><span class=\"s1\">&#39;class&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;task-list-item&#39;</span><span class=\"p\">)],</span> <span class=\"s1\">&#39;div&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;itemScope&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;itemType&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;blockquote&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;cite&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;del&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;cite&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;ins&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;cite&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;q&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;cite&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;*&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;abbr&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;accept&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;acceptCharset&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;accessKey&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;action&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;align&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;alt&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;ariaDescribedBy&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;ariaHidden&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;ariaLabel&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;ariaLabelledBy&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;axis&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;border&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cellPadding&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cellSpacing&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;char&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;charOff&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;charSet&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;checked&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;clear&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cols&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;colSpan&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;color&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;compact&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;coords&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dateTime&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dir&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;disabled&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;encType&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;htmlFor&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;frame&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;headers&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;height&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;hrefLang&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;hSpace&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;isMap&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;id&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;label&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;lang&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;maxLength&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;media&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;method&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;multiple&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;name&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;noHref&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;noShade&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;noWrap&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;open&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;prompt&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;readOnly&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rel&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rev&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rows&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rowSpan&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rules&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;scope&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;selected&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;shape&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;size&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;span&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;start&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;summary&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;tabIndex&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;target&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;title&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;type&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;useMap&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;vAlign&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;value&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;vSpace&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;width&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;itemProp&#39;</span><span class=\"p\">]},</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;input&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;type&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;checkbox&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;disabled&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}})</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.transform.sanitize.Schema": {"fullname": "phml.utilities.transform.sanitize.Schema", "modulename": "phml.utilities.transform.sanitize", "qualname": "Schema", "type": "class", "doc": "<p>Dataclass of information on how to sanatize a phml tree.</p>\n\n<p><code>strip (list[str])</code>: The elements to strip from the tree.\n<code>protocols (dict[str, list])</code>: Collection of element name and allowed protocal value list\n<code>tag_names (list[str])</code>: List of allowed tag names.\n<code>attributes (dict[str, list[str | list[str]]])</code>: Collection of element name and allowed property\nnames.\n<code>required (dict[str, dict[str, str | bool]])</code>: Collection of element names and their required\nproperties and required property values.</p>\n"}, "phml.utilities.transform.sanitize.Schema.__init__": {"fullname": "phml.utilities.transform.sanitize.Schema.__init__", "modulename": "phml.utilities.transform.sanitize", "qualname": "Schema.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">strip</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">ancestors</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">protocols</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">tag_names</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">attributes</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">required</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">bool</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span></span>)</span>"}, "phml.utilities.transform.sanitize.Schema.extend": {"fullname": "phml.utilities.transform.sanitize.Schema.extend", "modulename": "phml.utilities.transform.sanitize", "qualname": "Schema.extend", "type": "function", "doc": "<p>Extend the default schemas values.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong><code>strip (list[str])</code>:</strong>  The elements to strip from the tree.</li>\n<li><strong><code>ancestors (dict[str, list[str]])</code>:</strong>  Key is a element tag and the value is a list of valid\nparent elements.</li>\n<li><strong><code>protocols (dict[str, list[str]])</code>:</strong>  Collection of element names to list of valid protocols (prefixes).</li>\n<li><strong><code>tag_names (list[str])</code>:</strong>  List of allowed tag names.</li>\n<li><strong><code>attributes (dict[str, list[str | list[str]]])</code>:</strong>  Collection of element name and allowed property\nnames.</li>\n<li><strong><code>required (dict[str, dict[str, str | bool]])</code>:</strong>  Collection of element names and their required\nproperties and required property values.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">strip</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ancestors</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">protocols</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tag_names</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">attributes</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]]]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">required</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">bool</span><span class=\"p\">]]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">utilities</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"o\">.</span><span class=\"n\">sanitize</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">Schema</span>:</span></span>", "funcdef": "def"}, "phml.utilities.transform.sanitize.recurse_check_attributes": {"fullname": "phml.utilities.transform.sanitize.recurse_check_attributes", "modulename": "phml.utilities.transform.sanitize", "qualname": "recurse_check_attributes", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span>,</span><span class=\"param\">\t<span class=\"n\">schema</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">utilities</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"o\">.</span><span class=\"n\">sanitize</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">Schema</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.transform.sanitize.recurse_check_required": {"fullname": "phml.utilities.transform.sanitize.recurse_check_required", "modulename": "phml.utilities.transform.sanitize", "qualname": "recurse_check_required", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span>,</span><span class=\"param\">\t<span class=\"n\">schema</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">utilities</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"o\">.</span><span class=\"n\">sanitize</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">Schema</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.transform.sanitize.recurse_strip": {"fullname": "phml.utilities.transform.sanitize.recurse_strip", "modulename": "phml.utilities.transform.sanitize", "qualname": "recurse_strip", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span>, </span><span class=\"param\"><span class=\"n\">schema</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">utilities</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"o\">.</span><span class=\"n\">sanitize</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">Schema</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.transform.sanitize.recurse_check_tag": {"fullname": "phml.utilities.transform.sanitize.recurse_check_tag", "modulename": "phml.utilities.transform.sanitize", "qualname": "recurse_check_tag", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span>,</span><span class=\"param\">\t<span class=\"n\">schema</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">utilities</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"o\">.</span><span class=\"n\">sanitize</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">Schema</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"fullname": "phml.utilities.transform.sanitize.recurse_check_ancestor", "modulename": "phml.utilities.transform.sanitize", "qualname": "recurse_check_ancestor", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span>,</span><span class=\"param\">\t<span class=\"n\">schema</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">utilities</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"o\">.</span><span class=\"n\">sanitize</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">Schema</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.transform.transform": {"fullname": "phml.utilities.transform.transform", "modulename": "phml.utilities.transform.transform", "type": "module", "doc": "<p>phml.utilities.transform.transform</p>\n\n<p>Utility methods that revolve around transforming or manipulating the ast.</p>\n"}, "phml.utilities.transform.transform.filter_nodes": {"fullname": "phml.utilities.transform.transform.filter_nodes", "modulename": "phml.utilities.transform.transform", "qualname": "filter_nodes", "type": "function", "doc": "<p>Take a given tree and filter the nodes with the condition.\nOnly nodes passing the condition stay. If the parent node fails,\nall children are moved up in scope. Depth first</p>\n\n<p>Same as remove_nodes but keeps the nodes that match.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>tree (Parent):</strong>  The tree node to filter.</li>\n<li><strong>condition (Test):</strong>  The condition to apply to each node.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Parent: The given tree after being filtered.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tree</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.transform.transform.remove_nodes": {"fullname": "phml.utilities.transform.transform.remove_nodes", "modulename": "phml.utilities.transform.transform", "qualname": "remove_nodes", "type": "function", "doc": "<p>Take a given tree and remove the nodes that match the condition.\nIf a parent node is removed so is all the children.</p>\n\n<p>Same as filter_nodes except removes nodes that match.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>tree (Parent):</strong>  The parent node to start recursively removing from.</li>\n<li><strong>condition (Test):</strong>  The condition to apply to each node.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tree</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.transform.transform.map_nodes": {"fullname": "phml.utilities.transform.transform.map_nodes", "modulename": "phml.utilities.transform.transform", "qualname": "map_nodes", "type": "function", "doc": "<p>Takes a tree and a callable that returns a node and maps each node.</p>\n\n<p>Signature for the transform function should be as follows:</p>\n\n<ol>\n<li>Takes a single argument that is the node.</li>\n<li>Returns any type of node that is assigned to the original node.</li>\n</ol>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">to_links</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">Element</span><span class=\"p\">(</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">,</span> <span class=\"p\">{},</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"p\">,</span> <span class=\"n\">children</span><span class=\"o\">=</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">children</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;element&quot;</span>\n        <span class=\"k\">else</span> <span class=\"n\">node</span>\n</code></pre>\n</div>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>tree (Parent):</strong>  Tree to transform.</li>\n<li><strong>transform (Callable):</strong>  The Callable that returns a node that is assigned</li>\n<li>to each node.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tree</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span>,</span><span class=\"param\">\t<span class=\"n\">transform</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">],</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.transform.transform.find_and_replace": {"fullname": "phml.utilities.transform.transform.find_and_replace", "modulename": "phml.utilities.transform.transform", "qualname": "find_and_replace", "type": "function", "doc": "<p>Takes a node and replaces text in Literal.Text\nnodes with matching replacements.</p>\n\n<p>First value in each replacement tuple is the regex to match and\nthe second value is what to replace it with. This can either be\na string or a callable that returns a string or a new node. If\na new node is returned then the text element will be split.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">replacements</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Callable</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.transform.transform.shift_heading": {"fullname": "phml.utilities.transform.transform.shift_heading", "modulename": "phml.utilities.transform.transform", "qualname": "shift_heading", "type": "function", "doc": "<p>Shift the heading by the amount specified.</p>\n\n<p>value is clamped between 1 and 6.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span>, </span><span class=\"param\"><span class=\"n\">amount</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.transform.transform.replace_node": {"fullname": "phml.utilities.transform.transform.replace_node", "modulename": "phml.utilities.transform.transform", "qualname": "replace_node", "type": "function", "doc": "<p>Search for a specific node in the tree and replace it with either\na node or list of nodes. If replacement is None the found node is just removed.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>start (Parent):</strong>  The starting point.</li>\n<li><strong>condition (test):</strong>  Test condition to find the correct node.</li>\n<li><strong>replacement (Node | list[Node] | None):</strong>  What to replace the node with.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">replacement</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">all_nodes</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.transform.transform.modify_children": {"fullname": "phml.utilities.transform.transform.modify_children", "modulename": "phml.utilities.transform.transform", "qualname": "modify_children", "type": "function", "doc": "<p>Function wrapper that when called, and passed a Parent node,\nwill apply the wrapped function to each child.</p>\n\n<h6 id=\"the-following-args-are-passed-to-the-wrapped-method\">The following args are passed to the wrapped method</h6>\n\n<blockquote>\n  <p>child (Node): A child of the parent node.\n  index (int): The index of the child in the parent node.\n  parent (Parent): The starting parent node.</p>\n</blockquote>\n\n<p>The wrapped method is expected to return a new or modified node.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span><span class=\"p\">],</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "phml.utilities.travel": {"fullname": "phml.utilities.travel", "modulename": "phml.utilities.travel", "type": "module", "doc": "<p></p>\n"}, "phml.utilities.travel.travel": {"fullname": "phml.utilities.travel.travel", "modulename": "phml.utilities.travel.travel", "type": "module", "doc": "<p>utilities.travel</p>\n\n<p>Collection of utilities that hep with traversing an ast or node tree.</p>\n"}, "phml.utilities.travel.travel.path": {"fullname": "phml.utilities.travel.travel.path", "modulename": "phml.utilities.travel.travel", "qualname": "path", "type": "function", "doc": "<p>Get a list of nodes where each one is a child of\nthe other leading to the node passed in. This gives a\npath to the node.</p>\n\n<p>Does not include given node.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>node (Node):</strong>  Node to find ancestors of.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>list[Node]: List of nodes leading to the given node\n  starting from the root.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.utilities.travel.travel.path_names": {"fullname": "phml.utilities.travel.travel.path_names", "modulename": "phml.utilities.travel.travel", "qualname": "path_names", "type": "function", "doc": "<p>Get a list of nodes where each one is a child of\nthe other leading to the node passed in. This gives a\npath to the node.</p>\n\n<p>Does not include given node.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>node (Node):</strong>  Node to find ancestors of.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>list[str]: List of nodes leading to the given node\n  starting from the root.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "phml.utilities.travel.travel.walk": {"fullname": "phml.utilities.travel.travel.walk", "modulename": "phml.utilities.travel.travel", "qualname": "walk", "type": "function", "doc": "<p>Recursively traverse the node and it's chidlren as an iterator.\nLeft to right depth first.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Parent</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span>:</span></span>", "funcdef": "def"}, "phml.utilities.travel.travel.visit_all_after": {"fullname": "phml.utilities.travel.travel.visit_all_after", "modulename": "phml.utilities.travel.travel", "qualname": "visit_all_after", "type": "function", "doc": "<p>Recursively traverse the tree starting at given node.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span>:</span></span>", "funcdef": "def"}, "phml.utilities.validate": {"fullname": "phml.utilities.validate", "modulename": "phml.utilities.validate", "type": "module", "doc": "<p>utilities.validate</p>\n\n<p>A collection of utilities centered around validating nodes, types,\nvalues on nodes, and any other condition you want to apply to a node\nor ast.</p>\n"}, "phml.utilities.validate.check": {"fullname": "phml.utilities.validate.check", "modulename": "phml.utilities.validate.check", "type": "module", "doc": "<p>phml.utilities.validate.test</p>\n\n<p>Logic that allows nodes to be tested against a series of conditions.</p>\n"}, "phml.utilities.validate.check.check": {"fullname": "phml.utilities.validate.check.check", "modulename": "phml.utilities.validate.check", "qualname": "check", "type": "function", "doc": "<p>Test if a node passes the given test(s).</p>\n\n<h6 id=\"test-types\">Test Types</h6>\n\n<blockquote>\n  <ul>\n  <li><code>None</code>: Just checks that the node is a valid node.</li>\n  <li><code>str</code>: Checks that the node is an element and the condition == node.tag.</li>\n  <li><code>dict</code>: Checks all items are valid attributes on the node.\n  and that the values are strictly equal.</li>\n  <li><code>Callable</code>: Passes the given function the node and it's index, if provided,\n  and checks if the callable returned true.</li>\n  <li><code>list[Test]</code>: Apply all the rules above for each Test in the list.</li>\n  </ul>\n</blockquote>\n\n<p>If the <code>parent</code> arg is passed so should the <code>index</code> arg.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>node (Node):</strong>  Node to test. Can be any phml node.</li>\n<li><strong>test (Test):</strong>  Test to apply to the node. See previous section\nfor more info.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if all tests pass.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span>,</span><span class=\"param\">\t<span class=\"n\">_test</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "phml.utilities.validate.validate": {"fullname": "phml.utilities.validate.validate", "modulename": "phml.utilities.validate.validate", "type": "module", "doc": "<p></p>\n"}, "phml.utilities.validate.validate.validate": {"fullname": "phml.utilities.validate.validate.validate", "modulename": "phml.utilities.validate.validate", "qualname": "validate", "type": "function", "doc": "<p>Validate a node based on attributes and type.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "phml.utilities.validate.validate.generated": {"fullname": "phml.utilities.validate.validate.generated", "modulename": "phml.utilities.validate.validate", "qualname": "generated", "type": "function", "doc": "<p>Checks if a node has been generated. A node is concidered\ngenerated if it does not have a position.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>node (Node):</strong>  Node to check for position with.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>bool: Whether a node has a position or not.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "phml.utilities.validate.validate.is_heading": {"fullname": "phml.utilities.validate.validate.is_heading", "modulename": "phml.utilities.validate.validate", "qualname": "is_heading", "type": "function", "doc": "<p>Check if an element is a heading.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "phml.utilities.validate.validate.is_css_link": {"fullname": "phml.utilities.validate.validate.is_css_link", "modulename": "phml.utilities.validate.validate", "qualname": "is_css_link", "type": "function", "doc": "<p>Check if an element is a <code>link</code> to a css file.</p>\n\n<p>Returns <code>true</code> if <code>node</code> is a <code>&lt;link&gt;</code> element with a <code>rel</code> list that\ncontains <code>'stylesheet'</code> and has no <code>type</code>, an empty <code>type</code>, or <code>'text/css'</code>\nas its <code>type</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "phml.utilities.validate.validate.is_css_style": {"fullname": "phml.utilities.validate.validate.is_css_style", "modulename": "phml.utilities.validate.validate", "qualname": "is_css_style", "type": "function", "doc": "<p>Check if an element is a css <code>style</code> element.</p>\n\n<p>Returns <code>true</code> if <code>node</code> is a <code>&lt;style&gt;</code> element that\nhas no <code>type</code>, an empty <code>type</code>, or <code>'text/css'</code> as its <code>type</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "phml.utilities.validate.validate.is_javascript": {"fullname": "phml.utilities.validate.validate.is_javascript", "modulename": "phml.utilities.validate.validate", "qualname": "is_javascript", "type": "function", "doc": "<p>Check if an element is a javascript <code>script</code> element.</p>\n\n<p>Returns <code>true</code> if <code>node</code> is a <code>&lt;script&gt;</code> element that has a valid JavaScript <code>type</code>, has no\n<code>type</code> and a valid JavaScript <code>language</code>, or has neither.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "phml.utilities.validate.validate.is_element": {"fullname": "phml.utilities.validate.validate.is_element", "modulename": "phml.utilities.validate.validate", "qualname": "is_element", "type": "function", "doc": "<p>Checks if the given node is a certain element.</p>\n\n<p>When providing a str it will check that the elements tag matches.\nIf a list is provided it checks that one of the conditions in the list\npasses.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Node</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">conditions</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "phml.utilities.validate.validate.is_embedded": {"fullname": "phml.utilities.validate.validate.is_embedded", "modulename": "phml.utilities.validate.validate", "qualname": "is_embedded", "type": "function", "doc": "<p>Check to see if an element is an embedded element.</p>\n\n<p>Embedded Elements:</p>\n\n<ul>\n<li>audio</li>\n<li>canvas</li>\n<li>embed</li>\n<li>iframe</li>\n<li>img</li>\n<li>MathML math</li>\n<li>object</li>\n<li>picture</li>\n<li>SVG svg</li>\n<li>video</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if emedded</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "phml.utilities.validate.validate.is_interactive": {"fullname": "phml.utilities.validate.validate.is_interactive", "modulename": "phml.utilities.validate.validate", "qualname": "is_interactive", "type": "function", "doc": "<p>Check if the element is intended for user interaction.</p>\n\n<p>Conditions:</p>\n\n<ul>\n<li>a (if the href attribute is present)</li>\n<li>audio (if the controls attribute is present)</li>\n<li>button, details, embed, iframe, img (if the usemap attribute is present)</li>\n<li>input (if the type attribute is not in the Hidden state)</li>\n<li>label, select, text, area, video (if the controls attribute is present)</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if element is interactive</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "phml.utilities.validate.validate.is_phrasing": {"fullname": "phml.utilities.validate.validate.is_phrasing", "modulename": "phml.utilities.validate.validate", "qualname": "is_phrasing", "type": "function", "doc": "<p>Check if a node is phrasing text according to\n<a href=\"https://html.spec.whatwg.org/#phrasing-content-2\">https://html.spec.whatwg.org/#phrasing-content-2</a>.</p>\n\n<p>Phrasing content is the text of the document, as well as elements that mark up that text at the\nintra-paragraph level. Runs of phrasing content form paragraphs.</p>\n\n<ul>\n<li>area (if it is a descendant of a map element)</li>\n<li>link (if it is allowed in the body)</li>\n<li>meta (if the itemprop attribute is present)</li>\n<li>map, mark, math, audio, b, bdi, bdo, br, button, canvas, cite, code, data, datalist, del, dfn,\nem, embed, i, iframe, img, input, ins, kbd, label, a, abbr, meter, noscript, object, output,\npicture, progress, q, ruby, s, samp, script, select, slot, small, span, strong, sub, sup, svg,\ntemplate, textarea, time, u, var, video, wbr, text (true)</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the element is phrasing text</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">phml</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">Element</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "phml.utilities.validate.validate.is_event_handler": {"fullname": "phml.utilities.validate.validate.is_event_handler", "modulename": "phml.utilities.validate.validate", "qualname": "is_event_handler", "type": "function", "doc": "<p>Takes a attribute name and returns true if\nit starts with <code>on</code> and its length is <code>5</code> or more.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">attribute</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "phml.utilities.validate.validate.blank": {"fullname": "phml.utilities.validate.validate.blank", "modulename": "phml.utilities.validate.validate", "qualname": "blank", "type": "function", "doc": "<p>Takes any value type and returns whether it is blank/None.\nFor strings if the value is stripped and is equal to '' then it is blank.\nOtherwise if len &gt; 0 and is not None then not blank.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>value (Any):</strong>  The value to check if it is blank.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>bool: True if value is blank</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}}, "docInfo": {"phml": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3773}, "phml.Version": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 81}, "phml.Version.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 3}, "phml.builder": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 22}, "phml.builder.p": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 144, "bases": 0, "doc": 9}, "phml.compiler": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.compiler.HypertextMarkupCompiler": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.compiler.HypertextMarkupCompiler.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "phml.compiler.HypertextMarkupCompiler.compile": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 81, "bases": 0, "doc": 3}, "phml.compiler.HypertextMarkupCompiler.render": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 73, "bases": 0, "doc": 3}, "phml.compiler.comp_step": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 142}, "phml.components": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.components.ComponentType": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "phml.components.ComponentManager": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.components.ComponentManager.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "phml.components.ComponentManager.generate_name": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 21}, "phml.components.ComponentManager.get_cache": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 11}, "phml.components.ComponentManager.cache": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 22}, "phml.components.ComponentManager.parse": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 3}, "phml.components.ComponentManager.add": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 138, "bases": 0, "doc": 153}, "phml.components.ComponentManager.keys": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "phml.components.ComponentManager.values": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "phml.components.ComponentManager.remove": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 13}, "phml.components.ComponentManager.validate": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "phml.components.tokenize_name": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 86}, "phml.core": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.core.HypertextManager": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.core.HypertextManager.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "phml.core.HypertextManager.parser": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "phml.core.HypertextManager.compiler": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "phml.core.HypertextManager.components": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "phml.core.HypertextManager.context": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 29}, "phml.core.HypertextManager.open": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 94, "bases": 0, "doc": 3}, "phml.core.HypertextManager.add_module": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 86, "bases": 0, "doc": 361}, "phml.core.HypertextManager.remove_module": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 3}, "phml.core.HypertextManager.ast": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "phml.core.HypertextManager.load": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 20}, "phml.core.HypertextManager.parse": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 32}, "phml.core.HypertextManager.format": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 101, "bases": 0, "doc": 168}, "phml.core.HypertextManager.compile": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 25}, "phml.core.HypertextManager.render": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 28}, "phml.core.HypertextManager.write": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 67, "bases": 0, "doc": 50}, "phml.core.HypertextManager.add": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 138, "bases": 0, "doc": 23}, "phml.core.HypertextManager.remove": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 15}, "phml.core.HypertextManager.expose": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 64, "bases": 0, "doc": 32}, "phml.core.HypertextManager.redact": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 9}, "phml.embedded": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "phml.embedded.EmbeddedTryCatch": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 34}, "phml.embedded.EmbeddedTryCatch.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 99, "bases": 0, "doc": 3}, "phml.embedded.EmbeddedPythonException": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 11}, "phml.embedded.EmbeddedPythonException.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "phml.embedded.EmbeddedPythonException.format_line": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 3}, "phml.embedded.EmbeddedPythonException.generate_exception_lines": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 3}, "phml.embedded.parse_import_values": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 3}, "phml.embedded.ImportStruct": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "phml.embedded.ImportStruct.values": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 14}, "phml.embedded.Module": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "phml.embedded.Module.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 3}, "phml.embedded.Module.collect": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 17}, "phml.embedded.EmbeddedImport": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "phml.embedded.EmbeddedImport.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 75, "bases": 0, "doc": 3}, "phml.embedded.EmbeddedImport.module": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "phml.embedded.EmbeddedImport.objects": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "phml.embedded.EmbeddedImport.data": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "phml.embedded.Embedded": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "phml.embedded.Embedded.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 3}, "phml.embedded.Embedded.context": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "phml.embedded.Embedded.imports": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 22}, "phml.embedded.Embedded.split_contexts": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 56, "bases": 0, "doc": 3}, "phml.embedded.Embedded.parse_data": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "phml.embedded.update_ast_node_pos": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 25}, "phml.embedded.exec_embedded": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 112}, "phml.embedded.exec_embedded_blocks": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 103}, "phml.embedded.built_in": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.helpers": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.helpers.build_recursive_context": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 75, "bases": 0, "doc": 10}, "phml.helpers.iterate_nodes": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 10}, "phml.helpers.calc_offset": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 14}, "phml.helpers.strip_blank_lines": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 15}, "phml.helpers.normalize_indent": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 62}, "phml.helpers.PHMLTryCatch": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 32}, "phml.helpers.PHMLTryCatch.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 3}, "phml.nodes": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.nodes.Missing": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.nodes.Missing.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "phml.nodes.p_code": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 10}, "phml.nodes.LiteralType": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 11}, "phml.nodes.LiteralType.From": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "phml.nodes.NodeType": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 11}, "phml.nodes.Point": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 52}, "phml.nodes.Point.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "phml.nodes.Point.from_dict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "phml.nodes.Position": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 151}, "phml.nodes.Position.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 82, "bases": 0, "doc": 52}, "phml.nodes.Position.from_pos": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 11}, "phml.nodes.Position.from_dict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 3}, "phml.nodes.Position.as_dict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 10}, "phml.nodes.Node": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "phml.nodes.Node.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 113, "bases": 0, "doc": 3}, "phml.nodes.Node.as_dict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "phml.nodes.Node.from_dict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 3}, "phml.nodes.Node.position": {"qualname": 2, "fullname": 4, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 22}, "phml.nodes.Node.type": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "phml.nodes.Node.pos_as_str": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 10}, "phml.nodes.Parent": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 12}, "phml.nodes.Parent.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 146, "bases": 0, "doc": 3}, "phml.nodes.Parent.pop": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 12}, "phml.nodes.Parent.index": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 12}, "phml.nodes.Parent.append": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 13}, "phml.nodes.Parent.extend": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 11}, "phml.nodes.Parent.insert": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 16}, "phml.nodes.Parent.remove": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 10}, "phml.nodes.Parent.len_as_str": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "phml.nodes.Parent.as_dict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "phml.nodes.AST": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 12}, "phml.nodes.AST.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 97, "bases": 0, "doc": 3}, "phml.nodes.Element": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 12}, "phml.nodes.Element.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 184, "bases": 0, "doc": 3}, "phml.nodes.Element.as_dict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "phml.nodes.Element.from_dict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 3}, "phml.nodes.Element.tag_path": {"qualname": 3, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "phml.nodes.Element.pop": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 101, "bases": 0, "doc": 29}, "phml.nodes.Element.get": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 89}, "phml.nodes.Element.attrs_as_str": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 9}, "phml.nodes.Literal": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 12}, "phml.nodes.Literal.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 113, "bases": 0, "doc": 3}, "phml.nodes.Literal.as_dict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "phml.nodes.Literal.is_text": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 14}, "phml.nodes.Literal.is_comment": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 13}, "phml.nodes.inspect": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 89}, "phml.parser": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "phml.parser.strip": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 38}, "phml.parser.RE": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.parser.RE.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "phml.parser.RE.tag_start": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 42, "signature": 0, "bases": 0, "doc": 17}, "phml.parser.RE.tag_end": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 12, "signature": 0, "bases": 0, "doc": 16}, "phml.parser.RE.comment": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 12, "signature": 0, "bases": 0, "doc": 16}, "phml.parser.RE.attribute": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 58, "signature": 0, "bases": 0, "doc": 15}, "phml.parser.HypertextMarkupParser": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "phml.parser.HypertextMarkupParser.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "phml.parser.HypertextMarkupParser.tag_stack": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 14}, "phml.parser.HypertextMarkupParser.in_pre": {"qualname": 3, "fullname": 5, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 13}, "phml.parser.HypertextMarkupParser.is_self_closing": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 18}, "phml.parser.HypertextMarkupParser.parse": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 57}, "phml.utilities": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "phml.utilities.locate": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "phml.utilities.locate.find": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 22}, "phml.utilities.locate.find.ancestor": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 72}, "phml.utilities.locate.find.find": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 119, "bases": 0, "doc": 74}, "phml.utilities.locate.find.find_all": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 119, "bases": 0, "doc": 64}, "phml.utilities.locate.find.find_after": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 132, "bases": 0, "doc": 72}, "phml.utilities.locate.find.find_all_after": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 132, "bases": 0, "doc": 72}, "phml.utilities.locate.find.find_all_before": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 132, "bases": 0, "doc": 78}, "phml.utilities.locate.find.find_before": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 132, "bases": 0, "doc": 92}, "phml.utilities.locate.find.find_all_between": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 180, "bases": 0, "doc": 116}, "phml.utilities.locate.index": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.utilities.locate.index.Index": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 44}, "phml.utilities.locate.index.Index.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 136, "bases": 0, "doc": 105}, "phml.utilities.locate.index.Index.indexed_tree": {"qualname": 3, "fullname": 7, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "phml.utilities.locate.index.Index.items": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 11}, "phml.utilities.locate.index.Index.values": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "phml.utilities.locate.index.Index.keys": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "phml.utilities.locate.index.Index.add": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 12}, "phml.utilities.locate.index.Index.remove": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 10}, "phml.utilities.locate.index.Index.get": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 89, "bases": 0, "doc": 11}, "phml.utilities.locate.index.Index.key_by_tag": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 24}, "phml.utilities.locate.select": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "phml.utilities.locate.select.query": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 399}, "phml.utilities.locate.select.query_all": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 401}, "phml.utilities.locate.select.matches": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 291}, "phml.utilities.locate.select.parse_specifiers": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 140}, "phml.utilities.misc": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 23}, "phml.utilities.misc.depth": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 34}, "phml.utilities.misc.size": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 9}, "phml.utilities.misc.classes": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "phml.utilities.misc.classes.classnames": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 108, "bases": 0, "doc": 197}, "phml.utilities.misc.classes.ClassList": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 29}, "phml.utilities.misc.classes.ClassList.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "phml.utilities.misc.classes.ClassList.toggle": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 10}, "phml.utilities.misc.classes.ClassList.add": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 12}, "phml.utilities.misc.classes.ClassList.replace": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 14}, "phml.utilities.misc.classes.ClassList.remove": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 12}, "phml.utilities.misc.classes.ClassList.classes": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "phml.utilities.misc.heading": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "phml.utilities.misc.heading.heading_rank": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 26}, "phml.utilities.transform": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 20}, "phml.utilities.transform.extract": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.utilities.transform.extract.to_string": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 59}, "phml.utilities.transform.sanitize": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "phml.utilities.transform.sanitize.sanatize": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 2086, "bases": 0, "doc": 133}, "phml.utilities.transform.sanitize.Schema": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 91}, "phml.utilities.transform.sanitize.Schema.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 264, "bases": 0, "doc": 3}, "phml.utilities.transform.sanitize.Schema.extend": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 296, "bases": 0, "doc": 142}, "phml.utilities.transform.sanitize.recurse_check_attributes": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 3}, "phml.utilities.transform.sanitize.recurse_check_required": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 3}, "phml.utilities.transform.sanitize.recurse_strip": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 3}, "phml.utilities.transform.sanitize.recurse_check_tag": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 3}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 3}, "phml.utilities.transform.transform": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 19}, "phml.utilities.transform.transform.filter_nodes": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 100, "bases": 0, "doc": 98}, "phml.utilities.transform.transform.remove_nodes": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 100, "bases": 0, "doc": 76}, "phml.utilities.transform.transform.map_nodes": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 70, "bases": 0, "doc": 201}, "phml.utilities.transform.transform.find_and_replace": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 70}, "phml.utilities.transform.transform.shift_heading": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 20}, "phml.utilities.transform.transform.replace_node": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 168, "bases": 0, "doc": 83}, "phml.utilities.transform.transform.modify_children": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 82}, "phml.utilities.travel": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.utilities.travel.travel": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 19}, "phml.utilities.travel.travel.path": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 81}, "phml.utilities.travel.travel.path_names": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 81}, "phml.utilities.travel.travel.walk": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 19}, "phml.utilities.travel.travel.visit_all_after": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 11}, "phml.utilities.validate": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 32}, "phml.utilities.validate.check": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 21}, "phml.utilities.validate.check.check": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 104, "bases": 0, "doc": 197}, "phml.utilities.validate.validate": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "phml.utilities.validate.validate.validate": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 11}, "phml.utilities.validate.validate.generated": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 62}, "phml.utilities.validate.validate.is_heading": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 10}, "phml.utilities.validate.validate.is_css_link": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 71}, "phml.utilities.validate.validate.is_css_style": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 57}, "phml.utilities.validate.validate.is_javascript": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 58}, "phml.utilities.validate.validate.is_element": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 43}, "phml.utilities.validate.validate.is_embedded": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 65}, "phml.utilities.validate.validate.is_interactive": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 95}, "phml.utilities.validate.validate.is_phrasing": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 163}, "phml.utilities.validate.validate.is_event_handler": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 26}, "phml.utilities.validate.validate.blank": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 78}}, "length": 228, "save": true}, "index": {"qualname": {"root": {"docs": {"phml.Version.__init__": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler.__init__": {"tf": 1}, "phml.components.ComponentManager.__init__": {"tf": 1}, "phml.core.HypertextManager.__init__": {"tf": 1}, "phml.embedded.EmbeddedTryCatch.__init__": {"tf": 1}, "phml.embedded.EmbeddedPythonException.__init__": {"tf": 1}, "phml.embedded.Module.__init__": {"tf": 1}, "phml.embedded.EmbeddedImport.__init__": {"tf": 1}, "phml.embedded.Embedded.__init__": {"tf": 1}, "phml.helpers.PHMLTryCatch.__init__": {"tf": 1}, "phml.nodes.Missing.__init__": {"tf": 1}, "phml.nodes.Point.__init__": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.AST.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.parser.RE.__init__": {"tf": 1}, "phml.parser.HypertextMarkupParser.__init__": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.misc.classes.ClassList.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 1}}, "df": 23, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.Version": {"tf": 1}, "phml.Version.__init__": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.components.ComponentManager.values": {"tf": 1}, "phml.embedded.parse_import_values": {"tf": 1}, "phml.embedded.ImportStruct.values": {"tf": 1}, "phml.utilities.locate.index.Index.values": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.validate": {"tf": 1}, "phml.utilities.validate.validate.validate": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.travel.travel.visit_all_after": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"phml.parser.HypertextMarkupParser.in_pre": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.Version.__init__": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler.__init__": {"tf": 1}, "phml.components.ComponentManager.__init__": {"tf": 1}, "phml.core.HypertextManager.__init__": {"tf": 1}, "phml.embedded.EmbeddedTryCatch.__init__": {"tf": 1}, "phml.embedded.EmbeddedPythonException.__init__": {"tf": 1}, "phml.embedded.Module.__init__": {"tf": 1}, "phml.embedded.EmbeddedImport.__init__": {"tf": 1}, "phml.embedded.Embedded.__init__": {"tf": 1}, "phml.helpers.PHMLTryCatch.__init__": {"tf": 1}, "phml.nodes.Missing.__init__": {"tf": 1}, "phml.nodes.Point.__init__": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.AST.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.parser.RE.__init__": {"tf": 1}, "phml.parser.HypertextMarkupParser.__init__": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.misc.classes.ClassList.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 1}}, "df": 23}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.helpers.normalize_indent": {"tf": 1}}, "df": 1}}, "x": {"docs": {"phml.nodes.Parent.index": {"tf": 1}, "phml.utilities.locate.index.Index": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.index.Index.indexed_tree": {"tf": 1}, "phml.utilities.locate.index.Index.items": {"tf": 1}, "phml.utilities.locate.index.Index.values": {"tf": 1}, "phml.utilities.locate.index.Index.keys": {"tf": 1}, "phml.utilities.locate.index.Index.add": {"tf": 1}, "phml.utilities.locate.index.Index.remove": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}}, "df": 11, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.locate.index.Index.indexed_tree": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Parent.insert": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.inspect": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.validate.validate.is_interactive": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml.embedded.parse_import_values": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.embedded.Embedded.imports": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.embedded.ImportStruct": {"tf": 1}, "phml.embedded.ImportStruct.values": {"tf": 1}}, "df": 2}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.helpers.iterate_nodes": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.locate.index.Index.items": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"phml.nodes.Literal.is_text": {"tf": 1}, "phml.nodes.Literal.is_comment": {"tf": 1}, "phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}, "phml.utilities.validate.validate.is_heading": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}, "phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1}}, "df": 12}}, "p": {"docs": {"phml.builder.p": {"tf": 1}, "phml.nodes.p_code": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.parse": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.embedded.parse_import_values": {"tf": 1}, "phml.embedded.Embedded.parse_data": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}}, "df": 6, "r": {"docs": {"phml.core.HypertextManager.parser": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Parent": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.Parent.pop": {"tf": 1}, "phml.nodes.Parent.index": {"tf": 1}, "phml.nodes.Parent.append": {"tf": 1}, "phml.nodes.Parent.extend": {"tf": 1}, "phml.nodes.Parent.insert": {"tf": 1}, "phml.nodes.Parent.remove": {"tf": 1}, "phml.nodes.Parent.len_as_str": {"tf": 1}, "phml.nodes.Parent.as_dict": {"tf": 1}}, "df": 10}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.nodes.Element.tag_path": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {"phml.embedded.update_ast_node_pos": {"tf": 1}, "phml.nodes.Position.from_pos": {"tf": 1}, "phml.nodes.Node.pos_as_str": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Position": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}, "phml.nodes.Position.from_pos": {"tf": 1}, "phml.nodes.Position.from_dict": {"tf": 1}, "phml.nodes.Position.as_dict": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}}, "df": 6}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Point": {"tf": 1}, "phml.nodes.Point.__init__": {"tf": 1}, "phml.nodes.Point.from_dict": {"tf": 1}}, "df": 3}}}, "p": {"docs": {"phml.nodes.Parent.pop": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}}, "df": 2}}, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"phml.helpers.PHMLTryCatch": {"tf": 1}, "phml.helpers.PHMLTryCatch.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.HypertextMarkupParser.in_pre": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.compiler.HypertextMarkupCompiler": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler.__init__": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler.compile": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler.render": {"tf": 1}}, "df": 4}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.parser.HypertextMarkupParser": {"tf": 1}, "phml.parser.HypertextMarkupParser.__init__": {"tf": 1}, "phml.parser.HypertextMarkupParser.tag_stack": {"tf": 1}, "phml.parser.HypertextMarkupParser.in_pre": {"tf": 1}, "phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}}, "df": 6}}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.core.HypertextManager": {"tf": 1}, "phml.core.HypertextManager.__init__": {"tf": 1}, "phml.core.HypertextManager.parser": {"tf": 1}, "phml.core.HypertextManager.compiler": {"tf": 1}, "phml.core.HypertextManager.components": {"tf": 1}, "phml.core.HypertextManager.context": {"tf": 1}, "phml.core.HypertextManager.open": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.remove_module": {"tf": 1}, "phml.core.HypertextManager.ast": {"tf": 1}, "phml.core.HypertextManager.load": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.compile": {"tf": 1}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.core.HypertextManager.remove": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.core.HypertextManager.redact": {"tf": 1}}, "df": 20}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.misc.heading.heading_rank": {"tf": 1}, "phml.utilities.transform.transform.shift_heading": {"tf": 1}, "phml.utilities.validate.validate.is_heading": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.validate.validate.is_event_handler": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"phml.compiler.comp_step": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.compiler.HypertextMarkupCompiler.compile": {"tf": 1}, "phml.core.HypertextManager.compile": {"tf": 1}}, "df": 2, "r": {"docs": {"phml.core.HypertextManager.compiler": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentType": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.components.ComponentManager": {"tf": 1}, "phml.components.ComponentManager.__init__": {"tf": 1}, "phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.components.ComponentManager.get_cache": {"tf": 1}, "phml.components.ComponentManager.cache": {"tf": 1}, "phml.components.ComponentManager.parse": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.components.ComponentManager.keys": {"tf": 1}, "phml.components.ComponentManager.values": {"tf": 1}, "phml.components.ComponentManager.remove": {"tf": 1}, "phml.components.ComponentManager.validate": {"tf": 1}}, "df": 11}}}}}}}, "s": {"docs": {"phml.core.HypertextManager.components": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Literal.is_comment": {"tf": 1}, "phml.parser.RE.comment": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"phml.core.HypertextManager.context": {"tf": 1}, "phml.embedded.Embedded.context": {"tf": 1}, "phml.helpers.build_recursive_context": {"tf": 1}}, "df": 3, "s": {"docs": {"phml.embedded.Embedded.split_contexts": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.embedded.Module.collect": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.p_code": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.get_cache": {"tf": 1}, "phml.components.ComponentManager.cache": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "c": {"docs": {"phml.helpers.calc_offset": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.misc.classes.classnames": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.misc.classes.ClassList": {"tf": 1}, "phml.utilities.misc.classes.ClassList.__init__": {"tf": 1}, "phml.utilities.misc.classes.ClassList.toggle": {"tf": 1}, "phml.utilities.misc.classes.ClassList.add": {"tf": 1}, "phml.utilities.misc.classes.ClassList.replace": {"tf": 1}, "phml.utilities.misc.classes.ClassList.remove": {"tf": 1}, "phml.utilities.misc.classes.ClassList.classes": {"tf": 1}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.misc.classes.ClassList.classes": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"phml.utilities.transform.sanitize.recurse_check_attributes": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_required": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_tag": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.transform.transform.modify_children": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.RE": {"tf": 1}, "phml.parser.RE.__init__": {"tf": 1}, "phml.parser.RE.tag_start": {"tf": 1}, "phml.parser.RE.tag_end": {"tf": 1}, "phml.parser.RE.comment": {"tf": 1}, "phml.parser.RE.attribute": {"tf": 1}}, "df": 6, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.compiler.HypertextMarkupCompiler.render": {"tf": 1}, "phml.core.HypertextManager.render": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.remove": {"tf": 1}, "phml.core.HypertextManager.remove_module": {"tf": 1}, "phml.core.HypertextManager.remove": {"tf": 1}, "phml.nodes.Parent.remove": {"tf": 1}, "phml.utilities.locate.index.Index.remove": {"tf": 1}, "phml.utilities.misc.classes.ClassList.remove": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}}, "df": 7}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.core.HypertextManager.redact": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml.helpers.build_recursive_context": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"phml.utilities.transform.sanitize.recurse_check_attributes": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_required": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_strip": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_tag": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"tf": 1}}, "df": 5}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.misc.classes.ClassList.replace": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}}, "df": 3}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.transform.sanitize.recurse_check_required": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"phml.utilities.misc.heading.heading_rank": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"phml.compiler.comp_step": {"tf": 1}}, "df": 1}}, "r": {"docs": {"phml.nodes.Node.pos_as_str": {"tf": 1}, "phml.nodes.Parent.len_as_str": {"tf": 1}, "phml.nodes.Element.attrs_as_str": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "p": {"docs": {"phml.helpers.strip_blank_lines": {"tf": 1}, "phml.parser.strip": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_strip": {"tf": 1}}, "df": 3}, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.transform.extract.to_string": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml.parser.RE.tag_start": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"phml.parser.HypertextMarkupParser.tag_stack": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.validate.validate.is_css_style": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.embedded.Embedded.split_contexts": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.locate.select.parse_specifiers": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.misc.size": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"phml.utilities.transform.sanitize.Schema": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}}, "df": 3}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.transform.shift_heading": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.embedded.EmbeddedPythonException.generate_exception_lines": {"tf": 1}}, "df": 2, "d": {"docs": {"phml.utilities.validate.validate.generated": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"phml.components.ComponentManager.get_cache": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.components.tokenize_name": {"tf": 1}}, "df": 2, "s": {"docs": {"phml.utilities.travel.travel.path_names": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml.embedded.update_ast_node_pos": {"tf": 1}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Node.as_dict": {"tf": 1}, "phml.nodes.Node.from_dict": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Node.pos_as_str": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}}, "df": 9, "s": {"docs": {"phml.helpers.iterate_nodes": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}}, "df": 4}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.NodeType": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.helpers.normalize_indent": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {"phml.components.ComponentManager.add": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.utilities.locate.index.Index.add": {"tf": 1}, "phml.utilities.misc.classes.ClassList.add": {"tf": 1}}, "df": 5}}, "s": {"docs": {"phml.nodes.Position.as_dict": {"tf": 1}, "phml.nodes.Node.as_dict": {"tf": 1}, "phml.nodes.Node.pos_as_str": {"tf": 1}, "phml.nodes.Parent.len_as_str": {"tf": 1}, "phml.nodes.Parent.as_dict": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Element.attrs_as_str": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}}, "df": 8, "t": {"docs": {"phml.core.HypertextManager.ast": {"tf": 1}, "phml.embedded.update_ast_node_pos": {"tf": 1}, "phml.nodes.AST": {"tf": 1}, "phml.nodes.AST.__init__": {"tf": 1}}, "df": 4}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Parent.append": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.Element.attrs_as_str": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.RE.attribute": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.utilities.transform.sanitize.recurse_check_attributes": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {"phml.utilities.transform.transform.find_and_replace": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.travel.travel.visit_all_after": {"tf": 1}}, "df": 6}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.travel.travel.visit_all_after": {"tf": 1}}, "df": 3}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.components.ComponentManager.keys": {"tf": 1}, "phml.utilities.locate.index.Index.keys": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"phml.utilities.transform.extract.to_string": {"tf": 1}}, "df": 1, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.tokenize_name": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.misc.classes.ClassList.toggle": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Node.type": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.Element.tag_path": {"tf": 1}, "phml.parser.RE.tag_start": {"tf": 1}, "phml.parser.RE.tag_end": {"tf": 1}, "phml.parser.HypertextMarkupParser.tag_stack": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_tag": {"tf": 1}}, "df": 6}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Literal.is_text": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.locate.index.Index.indexed_tree": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.core.HypertextManager.open": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"phml.embedded.EmbeddedImport.objects": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"phml.helpers.calc_offset": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.remove_module": {"tf": 1}, "phml.embedded.Module": {"tf": 1}, "phml.embedded.Module.__init__": {"tf": 1}, "phml.embedded.Module.collect": {"tf": 1}, "phml.embedded.EmbeddedImport.module": {"tf": 1}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"phml.utilities.transform.transform.modify_children": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.Missing": {"tf": 1}, "phml.nodes.Missing.__init__": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.locate.select.matches": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {"phml.utilities.transform.transform.map_nodes": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"phml.core.HypertextManager.load": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml.embedded.EmbeddedPythonException.format_line": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.embedded.EmbeddedPythonException.generate_exception_lines": {"tf": 1}, "phml.helpers.strip_blank_lines": {"tf": 1}}, "df": 2}}, "k": {"docs": {"phml.utilities.validate.validate.is_css_link": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.Literal": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}, "phml.nodes.Literal.is_text": {"tf": 1}, "phml.nodes.Literal.is_comment": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.LiteralType": {"tf": 1}, "phml.nodes.LiteralType.From": {"tf": 1}}, "df": 2}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Parent.len_as_str": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"phml.core.HypertextManager.format": {"tf": 1}, "phml.embedded.EmbeddedPythonException.format_line": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"phml.nodes.LiteralType.From": {"tf": 1}, "phml.nodes.Point.from_dict": {"tf": 1}, "phml.nodes.Position.from_pos": {"tf": 1}, "phml.nodes.Position.from_dict": {"tf": 1}, "phml.nodes.Node.from_dict": {"tf": 1}, "phml.nodes.Element.from_dict": {"tf": 1}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}}, "df": 8}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.transform.transform.filter_nodes": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.core.HypertextManager.write": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"phml.utilities.travel.travel.walk": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.core.HypertextManager.expose": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.embedded.EmbeddedPythonException.generate_exception_lines": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {"phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Parent.extend": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.embedded.Embedded": {"tf": 1}, "phml.embedded.Embedded.__init__": {"tf": 1}, "phml.embedded.Embedded.context": {"tf": 1}, "phml.embedded.Embedded.imports": {"tf": 1}, "phml.embedded.Embedded.split_contexts": {"tf": 1}, "phml.embedded.Embedded.parse_data": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.utilities.validate.validate.is_embedded": {"tf": 1}}, "df": 9, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"phml.embedded.EmbeddedTryCatch": {"tf": 1}, "phml.embedded.EmbeddedTryCatch.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.embedded.EmbeddedPythonException": {"tf": 1}, "phml.embedded.EmbeddedPythonException.__init__": {"tf": 1}, "phml.embedded.EmbeddedPythonException.format_line": {"tf": 1}, "phml.embedded.EmbeddedPythonException.generate_exception_lines": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml.embedded.EmbeddedImport": {"tf": 1}, "phml.embedded.EmbeddedImport.__init__": {"tf": 1}, "phml.embedded.EmbeddedImport.module": {"tf": 1}, "phml.embedded.EmbeddedImport.objects": {"tf": 1}, "phml.embedded.EmbeddedImport.data": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Element": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Element.from_dict": {"tf": 1}, "phml.nodes.Element.tag_path": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.nodes.Element.attrs_as_str": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}}, "df": 9}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.parser.RE.tag_end": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.validate.validate.is_event_handler": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"phml.embedded.EmbeddedImport.data": {"tf": 1}, "phml.embedded.Embedded.parse_data": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Point.from_dict": {"tf": 1}, "phml.nodes.Position.from_dict": {"tf": 1}, "phml.nodes.Position.as_dict": {"tf": 1}, "phml.nodes.Node.as_dict": {"tf": 1}, "phml.nodes.Node.from_dict": {"tf": 1}, "phml.nodes.Parent.as_dict": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Element.from_dict": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}}, "df": 9}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.utilities.misc.depth": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.embedded.update_ast_node_pos": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"phml.embedded.exec_embedded_blocks": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"phml.helpers.strip_blank_lines": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"phml.helpers.build_recursive_context": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.locate.find.find_all_between": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}}, "df": 1}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}}, "df": 2}}}}}, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.validate.validate.is_javascript": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "fullname": {"root": {"docs": {"phml.Version.__init__": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler.__init__": {"tf": 1}, "phml.components.ComponentManager.__init__": {"tf": 1}, "phml.core.HypertextManager.__init__": {"tf": 1}, "phml.embedded.EmbeddedTryCatch.__init__": {"tf": 1}, "phml.embedded.EmbeddedPythonException.__init__": {"tf": 1}, "phml.embedded.Module.__init__": {"tf": 1}, "phml.embedded.EmbeddedImport.__init__": {"tf": 1}, "phml.embedded.Embedded.__init__": {"tf": 1}, "phml.helpers.PHMLTryCatch.__init__": {"tf": 1}, "phml.nodes.Missing.__init__": {"tf": 1}, "phml.nodes.Point.__init__": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.AST.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.parser.RE.__init__": {"tf": 1}, "phml.parser.HypertextMarkupParser.__init__": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.misc.classes.ClassList.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 1}}, "df": 23, "p": {"docs": {"phml.builder.p": {"tf": 1}, "phml.nodes.p_code": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1}, "phml.Version": {"tf": 1}, "phml.Version.__init__": {"tf": 1}, "phml.builder": {"tf": 1}, "phml.builder.p": {"tf": 1}, "phml.compiler": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler.__init__": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler.compile": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler.render": {"tf": 1}, "phml.compiler.comp_step": {"tf": 1}, "phml.components": {"tf": 1}, "phml.components.ComponentType": {"tf": 1}, "phml.components.ComponentManager": {"tf": 1}, "phml.components.ComponentManager.__init__": {"tf": 1}, "phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.components.ComponentManager.get_cache": {"tf": 1}, "phml.components.ComponentManager.cache": {"tf": 1}, "phml.components.ComponentManager.parse": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.components.ComponentManager.keys": {"tf": 1}, "phml.components.ComponentManager.values": {"tf": 1}, "phml.components.ComponentManager.remove": {"tf": 1}, "phml.components.ComponentManager.validate": {"tf": 1}, "phml.components.tokenize_name": {"tf": 1}, "phml.core": {"tf": 1}, "phml.core.HypertextManager": {"tf": 1}, "phml.core.HypertextManager.__init__": {"tf": 1}, "phml.core.HypertextManager.parser": {"tf": 1}, "phml.core.HypertextManager.compiler": {"tf": 1}, "phml.core.HypertextManager.components": {"tf": 1}, "phml.core.HypertextManager.context": {"tf": 1}, "phml.core.HypertextManager.open": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.remove_module": {"tf": 1}, "phml.core.HypertextManager.ast": {"tf": 1}, "phml.core.HypertextManager.load": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.compile": {"tf": 1}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.core.HypertextManager.remove": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.core.HypertextManager.redact": {"tf": 1}, "phml.embedded": {"tf": 1}, "phml.embedded.EmbeddedTryCatch": {"tf": 1}, "phml.embedded.EmbeddedTryCatch.__init__": {"tf": 1}, "phml.embedded.EmbeddedPythonException": {"tf": 1}, "phml.embedded.EmbeddedPythonException.__init__": {"tf": 1}, "phml.embedded.EmbeddedPythonException.format_line": {"tf": 1}, "phml.embedded.EmbeddedPythonException.generate_exception_lines": {"tf": 1}, "phml.embedded.parse_import_values": {"tf": 1}, "phml.embedded.ImportStruct": {"tf": 1}, "phml.embedded.ImportStruct.values": {"tf": 1}, "phml.embedded.Module": {"tf": 1}, "phml.embedded.Module.__init__": {"tf": 1}, "phml.embedded.Module.collect": {"tf": 1}, "phml.embedded.EmbeddedImport": {"tf": 1}, "phml.embedded.EmbeddedImport.__init__": {"tf": 1}, "phml.embedded.EmbeddedImport.module": {"tf": 1}, "phml.embedded.EmbeddedImport.objects": {"tf": 1}, "phml.embedded.EmbeddedImport.data": {"tf": 1}, "phml.embedded.Embedded": {"tf": 1}, "phml.embedded.Embedded.__init__": {"tf": 1}, "phml.embedded.Embedded.context": {"tf": 1}, "phml.embedded.Embedded.imports": {"tf": 1}, "phml.embedded.Embedded.split_contexts": {"tf": 1}, "phml.embedded.Embedded.parse_data": {"tf": 1}, "phml.embedded.update_ast_node_pos": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.embedded.built_in": {"tf": 1}, "phml.helpers": {"tf": 1}, "phml.helpers.build_recursive_context": {"tf": 1}, "phml.helpers.iterate_nodes": {"tf": 1}, "phml.helpers.calc_offset": {"tf": 1}, "phml.helpers.strip_blank_lines": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1}, "phml.helpers.PHMLTryCatch": {"tf": 1}, "phml.helpers.PHMLTryCatch.__init__": {"tf": 1}, "phml.nodes": {"tf": 1}, "phml.nodes.Missing": {"tf": 1}, "phml.nodes.Missing.__init__": {"tf": 1}, "phml.nodes.p_code": {"tf": 1}, "phml.nodes.LiteralType": {"tf": 1}, "phml.nodes.LiteralType.From": {"tf": 1}, "phml.nodes.NodeType": {"tf": 1}, "phml.nodes.Point": {"tf": 1}, "phml.nodes.Point.__init__": {"tf": 1}, "phml.nodes.Point.from_dict": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}, "phml.nodes.Position.from_pos": {"tf": 1}, "phml.nodes.Position.from_dict": {"tf": 1}, "phml.nodes.Position.as_dict": {"tf": 1}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Node.as_dict": {"tf": 1}, "phml.nodes.Node.from_dict": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Node.pos_as_str": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.Parent.pop": {"tf": 1}, "phml.nodes.Parent.index": {"tf": 1}, "phml.nodes.Parent.append": {"tf": 1}, "phml.nodes.Parent.extend": {"tf": 1}, "phml.nodes.Parent.insert": {"tf": 1}, "phml.nodes.Parent.remove": {"tf": 1}, "phml.nodes.Parent.len_as_str": {"tf": 1}, "phml.nodes.Parent.as_dict": {"tf": 1}, "phml.nodes.AST": {"tf": 1}, "phml.nodes.AST.__init__": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Element.from_dict": {"tf": 1}, "phml.nodes.Element.tag_path": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.nodes.Element.attrs_as_str": {"tf": 1}, "phml.nodes.Literal": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}, "phml.nodes.Literal.is_text": {"tf": 1}, "phml.nodes.Literal.is_comment": {"tf": 1}, "phml.nodes.inspect": {"tf": 1}, "phml.parser": {"tf": 1}, "phml.parser.strip": {"tf": 1}, "phml.parser.RE": {"tf": 1}, "phml.parser.RE.__init__": {"tf": 1}, "phml.parser.RE.tag_start": {"tf": 1}, "phml.parser.RE.tag_end": {"tf": 1}, "phml.parser.RE.comment": {"tf": 1}, "phml.parser.RE.attribute": {"tf": 1}, "phml.parser.HypertextMarkupParser": {"tf": 1}, "phml.parser.HypertextMarkupParser.__init__": {"tf": 1}, "phml.parser.HypertextMarkupParser.tag_stack": {"tf": 1}, "phml.parser.HypertextMarkupParser.in_pre": {"tf": 1}, "phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}, "phml.utilities": {"tf": 1}, "phml.utilities.locate": {"tf": 1}, "phml.utilities.locate.find": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index": {"tf": 1}, "phml.utilities.locate.index.Index": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.index.Index.indexed_tree": {"tf": 1}, "phml.utilities.locate.index.Index.items": {"tf": 1}, "phml.utilities.locate.index.Index.values": {"tf": 1}, "phml.utilities.locate.index.Index.keys": {"tf": 1}, "phml.utilities.locate.index.Index.add": {"tf": 1}, "phml.utilities.locate.index.Index.remove": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}, "phml.utilities.locate.select": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}, "phml.utilities.misc": {"tf": 1}, "phml.utilities.misc.depth": {"tf": 1}, "phml.utilities.misc.size": {"tf": 1}, "phml.utilities.misc.classes": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.misc.classes.ClassList": {"tf": 1}, "phml.utilities.misc.classes.ClassList.__init__": {"tf": 1}, "phml.utilities.misc.classes.ClassList.toggle": {"tf": 1}, "phml.utilities.misc.classes.ClassList.add": {"tf": 1}, "phml.utilities.misc.classes.ClassList.replace": {"tf": 1}, "phml.utilities.misc.classes.ClassList.remove": {"tf": 1}, "phml.utilities.misc.classes.ClassList.classes": {"tf": 1}, "phml.utilities.misc.heading": {"tf": 1}, "phml.utilities.misc.heading.heading_rank": {"tf": 1}, "phml.utilities.transform": {"tf": 1}, "phml.utilities.transform.extract": {"tf": 1}, "phml.utilities.transform.extract.to_string": {"tf": 1}, "phml.utilities.transform.sanitize": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_attributes": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_required": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_strip": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_tag": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"tf": 1}, "phml.utilities.transform.transform": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.transform.transform.shift_heading": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1}, "phml.utilities.travel": {"tf": 1}, "phml.utilities.travel.travel": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}, "phml.utilities.travel.travel.walk": {"tf": 1}, "phml.utilities.travel.travel.visit_all_after": {"tf": 1}, "phml.utilities.validate": {"tf": 1}, "phml.utilities.validate.check": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate": {"tf": 1}, "phml.utilities.validate.validate.validate": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 1}, "phml.utilities.validate.validate.is_heading": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}, "phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 228, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"phml.helpers.PHMLTryCatch": {"tf": 1}, "phml.helpers.PHMLTryCatch.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.parse": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.embedded.parse_import_values": {"tf": 1}, "phml.embedded.Embedded.parse_data": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}}, "df": 6, "r": {"docs": {"phml.core.HypertextManager.parser": {"tf": 1}, "phml.parser": {"tf": 1}, "phml.parser.strip": {"tf": 1}, "phml.parser.RE": {"tf": 1}, "phml.parser.RE.__init__": {"tf": 1}, "phml.parser.RE.tag_start": {"tf": 1}, "phml.parser.RE.tag_end": {"tf": 1}, "phml.parser.RE.comment": {"tf": 1}, "phml.parser.RE.attribute": {"tf": 1}, "phml.parser.HypertextMarkupParser": {"tf": 1}, "phml.parser.HypertextMarkupParser.__init__": {"tf": 1}, "phml.parser.HypertextMarkupParser.tag_stack": {"tf": 1}, "phml.parser.HypertextMarkupParser.in_pre": {"tf": 1}, "phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}}, "df": 15}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Parent": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.Parent.pop": {"tf": 1}, "phml.nodes.Parent.index": {"tf": 1}, "phml.nodes.Parent.append": {"tf": 1}, "phml.nodes.Parent.extend": {"tf": 1}, "phml.nodes.Parent.insert": {"tf": 1}, "phml.nodes.Parent.remove": {"tf": 1}, "phml.nodes.Parent.len_as_str": {"tf": 1}, "phml.nodes.Parent.as_dict": {"tf": 1}}, "df": 10}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.nodes.Element.tag_path": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {"phml.embedded.update_ast_node_pos": {"tf": 1}, "phml.nodes.Position.from_pos": {"tf": 1}, "phml.nodes.Node.pos_as_str": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Position": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}, "phml.nodes.Position.from_pos": {"tf": 1}, "phml.nodes.Position.from_dict": {"tf": 1}, "phml.nodes.Position.as_dict": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}}, "df": 6}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Point": {"tf": 1}, "phml.nodes.Point.__init__": {"tf": 1}, "phml.nodes.Point.from_dict": {"tf": 1}}, "df": 3}}}, "p": {"docs": {"phml.nodes.Parent.pop": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.HypertextMarkupParser.in_pre": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.Version": {"tf": 1}, "phml.Version.__init__": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.components.ComponentManager.values": {"tf": 1}, "phml.embedded.parse_import_values": {"tf": 1}, "phml.embedded.ImportStruct.values": {"tf": 1}, "phml.utilities.locate.index.Index.values": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.validate": {"tf": 1}, "phml.utilities.validate": {"tf": 1}, "phml.utilities.validate.check": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.validate": {"tf": 1.7320508075688772}, "phml.utilities.validate.validate.generated": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_heading": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_css_link": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_css_style": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_javascript": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_element": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_embedded": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_interactive": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.blank": {"tf": 1.4142135623730951}}, "df": 17}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.travel.travel.visit_all_after": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"phml.embedded.built_in": {"tf": 1}, "phml.parser.HypertextMarkupParser.in_pre": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.Version.__init__": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler.__init__": {"tf": 1}, "phml.components.ComponentManager.__init__": {"tf": 1}, "phml.core.HypertextManager.__init__": {"tf": 1}, "phml.embedded.EmbeddedTryCatch.__init__": {"tf": 1}, "phml.embedded.EmbeddedPythonException.__init__": {"tf": 1}, "phml.embedded.Module.__init__": {"tf": 1}, "phml.embedded.EmbeddedImport.__init__": {"tf": 1}, "phml.embedded.Embedded.__init__": {"tf": 1}, "phml.helpers.PHMLTryCatch.__init__": {"tf": 1}, "phml.nodes.Missing.__init__": {"tf": 1}, "phml.nodes.Point.__init__": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.AST.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.parser.RE.__init__": {"tf": 1}, "phml.parser.HypertextMarkupParser.__init__": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.misc.classes.ClassList.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 1}}, "df": 23}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.helpers.normalize_indent": {"tf": 1}}, "df": 1}}, "x": {"docs": {"phml.nodes.Parent.index": {"tf": 1}, "phml.utilities.locate.index": {"tf": 1}, "phml.utilities.locate.index.Index": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.__init__": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.indexed_tree": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.items": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.values": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.keys": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.add": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.remove": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.get": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1.4142135623730951}}, "df": 12, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.locate.index.Index.indexed_tree": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Parent.insert": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.inspect": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.validate.validate.is_interactive": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml.embedded.parse_import_values": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.embedded.Embedded.imports": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.embedded.ImportStruct": {"tf": 1}, "phml.embedded.ImportStruct.values": {"tf": 1}}, "df": 2}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.helpers.iterate_nodes": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.locate.index.Index.items": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"phml.nodes.Literal.is_text": {"tf": 1}, "phml.nodes.Literal.is_comment": {"tf": 1}, "phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}, "phml.utilities.validate.validate.is_heading": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}, "phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1}}, "df": 12}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"phml.helpers.build_recursive_context": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.builder": {"tf": 1}, "phml.builder.p": {"tf": 1}}, "df": 2}}}, "t": {"docs": {"phml.embedded.built_in": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"phml.embedded.exec_embedded_blocks": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"phml.helpers.strip_blank_lines": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.locate.find.find_all_between": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"phml.compiler.comp_step": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.compiler.HypertextMarkupCompiler.compile": {"tf": 1}, "phml.core.HypertextManager.compile": {"tf": 1}}, "df": 2, "r": {"docs": {"phml.compiler": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler.__init__": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler.compile": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler.render": {"tf": 1}, "phml.compiler.comp_step": {"tf": 1}, "phml.core.HypertextManager.compiler": {"tf": 1}}, "df": 7}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"phml.components": {"tf": 1}, "phml.components.ComponentType": {"tf": 1}, "phml.components.ComponentManager": {"tf": 1}, "phml.components.ComponentManager.__init__": {"tf": 1}, "phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.components.ComponentManager.get_cache": {"tf": 1}, "phml.components.ComponentManager.cache": {"tf": 1}, "phml.components.ComponentManager.parse": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.components.ComponentManager.keys": {"tf": 1}, "phml.components.ComponentManager.values": {"tf": 1}, "phml.components.ComponentManager.remove": {"tf": 1}, "phml.components.ComponentManager.validate": {"tf": 1}, "phml.components.tokenize_name": {"tf": 1}, "phml.core.HypertextManager.components": {"tf": 1}}, "df": 15}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentType": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.components.ComponentManager": {"tf": 1}, "phml.components.ComponentManager.__init__": {"tf": 1}, "phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.components.ComponentManager.get_cache": {"tf": 1}, "phml.components.ComponentManager.cache": {"tf": 1}, "phml.components.ComponentManager.parse": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.components.ComponentManager.keys": {"tf": 1}, "phml.components.ComponentManager.values": {"tf": 1}, "phml.components.ComponentManager.remove": {"tf": 1}, "phml.components.ComponentManager.validate": {"tf": 1}}, "df": 11}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Literal.is_comment": {"tf": 1}, "phml.parser.RE.comment": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.core": {"tf": 1}, "phml.core.HypertextManager": {"tf": 1}, "phml.core.HypertextManager.__init__": {"tf": 1}, "phml.core.HypertextManager.parser": {"tf": 1}, "phml.core.HypertextManager.compiler": {"tf": 1}, "phml.core.HypertextManager.components": {"tf": 1}, "phml.core.HypertextManager.context": {"tf": 1}, "phml.core.HypertextManager.open": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.remove_module": {"tf": 1}, "phml.core.HypertextManager.ast": {"tf": 1}, "phml.core.HypertextManager.load": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.compile": {"tf": 1}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.core.HypertextManager.remove": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.core.HypertextManager.redact": {"tf": 1}}, "df": 21}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"phml.core.HypertextManager.context": {"tf": 1}, "phml.embedded.Embedded.context": {"tf": 1}, "phml.helpers.build_recursive_context": {"tf": 1}}, "df": 3, "s": {"docs": {"phml.embedded.Embedded.split_contexts": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.embedded.Module.collect": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.p_code": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.get_cache": {"tf": 1}, "phml.components.ComponentManager.cache": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "c": {"docs": {"phml.helpers.calc_offset": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.misc.classes": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.misc.classes.ClassList": {"tf": 1}, "phml.utilities.misc.classes.ClassList.__init__": {"tf": 1}, "phml.utilities.misc.classes.ClassList.toggle": {"tf": 1}, "phml.utilities.misc.classes.ClassList.add": {"tf": 1}, "phml.utilities.misc.classes.ClassList.replace": {"tf": 1}, "phml.utilities.misc.classes.ClassList.remove": {"tf": 1}, "phml.utilities.misc.classes.ClassList.classes": {"tf": 1.4142135623730951}}, "df": 9}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.misc.classes.classnames": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.misc.classes.ClassList": {"tf": 1}, "phml.utilities.misc.classes.ClassList.__init__": {"tf": 1}, "phml.utilities.misc.classes.ClassList.toggle": {"tf": 1}, "phml.utilities.misc.classes.ClassList.add": {"tf": 1}, "phml.utilities.misc.classes.ClassList.replace": {"tf": 1}, "phml.utilities.misc.classes.ClassList.remove": {"tf": 1}, "phml.utilities.misc.classes.ClassList.classes": {"tf": 1}}, "df": 7}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"phml.utilities.transform.sanitize.recurse_check_attributes": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_required": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_tag": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"tf": 1}, "phml.utilities.validate.check": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1.4142135623730951}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.transform.transform.modify_children": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.compiler.HypertextMarkupCompiler": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler.__init__": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler.compile": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler.render": {"tf": 1}}, "df": 4}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.parser.HypertextMarkupParser": {"tf": 1}, "phml.parser.HypertextMarkupParser.__init__": {"tf": 1}, "phml.parser.HypertextMarkupParser.tag_stack": {"tf": 1}, "phml.parser.HypertextMarkupParser.in_pre": {"tf": 1}, "phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}}, "df": 6}}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.core.HypertextManager": {"tf": 1}, "phml.core.HypertextManager.__init__": {"tf": 1}, "phml.core.HypertextManager.parser": {"tf": 1}, "phml.core.HypertextManager.compiler": {"tf": 1}, "phml.core.HypertextManager.components": {"tf": 1}, "phml.core.HypertextManager.context": {"tf": 1}, "phml.core.HypertextManager.open": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.remove_module": {"tf": 1}, "phml.core.HypertextManager.ast": {"tf": 1}, "phml.core.HypertextManager.load": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.compile": {"tf": 1}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.core.HypertextManager.remove": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.core.HypertextManager.redact": {"tf": 1}}, "df": 20}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"phml.helpers": {"tf": 1}, "phml.helpers.build_recursive_context": {"tf": 1}, "phml.helpers.iterate_nodes": {"tf": 1}, "phml.helpers.calc_offset": {"tf": 1}, "phml.helpers.strip_blank_lines": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1}, "phml.helpers.PHMLTryCatch": {"tf": 1}, "phml.helpers.PHMLTryCatch.__init__": {"tf": 1}}, "df": 8}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.misc.heading": {"tf": 1}, "phml.utilities.misc.heading.heading_rank": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.shift_heading": {"tf": 1}, "phml.utilities.validate.validate.is_heading": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.validate.validate.is_event_handler": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.RE": {"tf": 1}, "phml.parser.RE.__init__": {"tf": 1}, "phml.parser.RE.tag_start": {"tf": 1}, "phml.parser.RE.tag_end": {"tf": 1}, "phml.parser.RE.comment": {"tf": 1}, "phml.parser.RE.attribute": {"tf": 1}}, "df": 6, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.compiler.HypertextMarkupCompiler.render": {"tf": 1}, "phml.core.HypertextManager.render": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.remove": {"tf": 1}, "phml.core.HypertextManager.remove_module": {"tf": 1}, "phml.core.HypertextManager.remove": {"tf": 1}, "phml.nodes.Parent.remove": {"tf": 1}, "phml.utilities.locate.index.Index.remove": {"tf": 1}, "phml.utilities.misc.classes.ClassList.remove": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}}, "df": 7}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.core.HypertextManager.redact": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml.helpers.build_recursive_context": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"phml.utilities.transform.sanitize.recurse_check_attributes": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_required": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_strip": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_tag": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"tf": 1}}, "df": 5}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.misc.classes.ClassList.replace": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}}, "df": 3}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.transform.sanitize.recurse_check_required": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"phml.utilities.misc.heading.heading_rank": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"phml.compiler.comp_step": {"tf": 1}}, "df": 1}}, "r": {"docs": {"phml.nodes.Node.pos_as_str": {"tf": 1}, "phml.nodes.Parent.len_as_str": {"tf": 1}, "phml.nodes.Element.attrs_as_str": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "p": {"docs": {"phml.helpers.strip_blank_lines": {"tf": 1}, "phml.parser.strip": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_strip": {"tf": 1}}, "df": 3}, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.transform.extract.to_string": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml.parser.RE.tag_start": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"phml.parser.HypertextMarkupParser.tag_stack": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.validate.validate.is_css_style": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.embedded.Embedded.split_contexts": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.locate.select.parse_specifiers": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.locate.select": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}}, "df": 5}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.misc.size": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_attributes": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_required": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_strip": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_tag": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"tf": 1}}, "df": 10}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"phml.utilities.transform.sanitize.Schema": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}}, "df": 3}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.transform.shift_heading": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.embedded.EmbeddedPythonException.generate_exception_lines": {"tf": 1}}, "df": 2, "d": {"docs": {"phml.utilities.validate.validate.generated": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"phml.components.ComponentManager.get_cache": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.components.tokenize_name": {"tf": 1}}, "df": 2, "s": {"docs": {"phml.utilities.travel.travel.path_names": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml.embedded.update_ast_node_pos": {"tf": 1}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Node.as_dict": {"tf": 1}, "phml.nodes.Node.from_dict": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Node.pos_as_str": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}}, "df": 9, "s": {"docs": {"phml.helpers.iterate_nodes": {"tf": 1}, "phml.nodes": {"tf": 1}, "phml.nodes.Missing": {"tf": 1}, "phml.nodes.Missing.__init__": {"tf": 1}, "phml.nodes.p_code": {"tf": 1}, "phml.nodes.LiteralType": {"tf": 1}, "phml.nodes.LiteralType.From": {"tf": 1}, "phml.nodes.NodeType": {"tf": 1}, "phml.nodes.Point": {"tf": 1}, "phml.nodes.Point.__init__": {"tf": 1}, "phml.nodes.Point.from_dict": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}, "phml.nodes.Position.from_pos": {"tf": 1}, "phml.nodes.Position.from_dict": {"tf": 1}, "phml.nodes.Position.as_dict": {"tf": 1}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Node.as_dict": {"tf": 1}, "phml.nodes.Node.from_dict": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Node.pos_as_str": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.Parent.pop": {"tf": 1}, "phml.nodes.Parent.index": {"tf": 1}, "phml.nodes.Parent.append": {"tf": 1}, "phml.nodes.Parent.extend": {"tf": 1}, "phml.nodes.Parent.insert": {"tf": 1}, "phml.nodes.Parent.remove": {"tf": 1}, "phml.nodes.Parent.len_as_str": {"tf": 1}, "phml.nodes.Parent.as_dict": {"tf": 1}, "phml.nodes.AST": {"tf": 1}, "phml.nodes.AST.__init__": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Element.from_dict": {"tf": 1}, "phml.nodes.Element.tag_path": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.nodes.Element.attrs_as_str": {"tf": 1}, "phml.nodes.Literal": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}, "phml.nodes.Literal.is_text": {"tf": 1}, "phml.nodes.Literal.is_comment": {"tf": 1}, "phml.nodes.inspect": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}}, "df": 52}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.NodeType": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.helpers.normalize_indent": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {"phml.components.ComponentManager.add": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.utilities.locate.index.Index.add": {"tf": 1}, "phml.utilities.misc.classes.ClassList.add": {"tf": 1}}, "df": 5}}, "s": {"docs": {"phml.nodes.Position.as_dict": {"tf": 1}, "phml.nodes.Node.as_dict": {"tf": 1}, "phml.nodes.Node.pos_as_str": {"tf": 1}, "phml.nodes.Parent.len_as_str": {"tf": 1}, "phml.nodes.Parent.as_dict": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Element.attrs_as_str": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}}, "df": 8, "t": {"docs": {"phml.core.HypertextManager.ast": {"tf": 1}, "phml.embedded.update_ast_node_pos": {"tf": 1}, "phml.nodes.AST": {"tf": 1}, "phml.nodes.AST.__init__": {"tf": 1}}, "df": 4}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Parent.append": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.Element.attrs_as_str": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.RE.attribute": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.utilities.transform.sanitize.recurse_check_attributes": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {"phml.utilities.transform.transform.find_and_replace": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.travel.travel.visit_all_after": {"tf": 1}}, "df": 6}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.travel.travel.visit_all_after": {"tf": 1}}, "df": 3}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.components.ComponentManager.keys": {"tf": 1}, "phml.utilities.locate.index.Index.keys": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"phml.utilities.transform.extract.to_string": {"tf": 1}}, "df": 1, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.tokenize_name": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.misc.classes.ClassList.toggle": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Node.type": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.Element.tag_path": {"tf": 1}, "phml.parser.RE.tag_start": {"tf": 1}, "phml.parser.RE.tag_end": {"tf": 1}, "phml.parser.HypertextMarkupParser.tag_stack": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_tag": {"tf": 1}}, "df": 6}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Literal.is_text": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.locate.index.Index.indexed_tree": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"phml.utilities.transform": {"tf": 1}, "phml.utilities.transform.extract": {"tf": 1}, "phml.utilities.transform.extract.to_string": {"tf": 1}, "phml.utilities.transform.sanitize": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_attributes": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_required": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_strip": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_tag": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"tf": 1}, "phml.utilities.transform.transform": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.map_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.shift_heading": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.replace_node": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.modify_children": {"tf": 1.4142135623730951}}, "df": 21}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"phml.utilities.travel": {"tf": 1}, "phml.utilities.travel.travel": {"tf": 1.4142135623730951}, "phml.utilities.travel.travel.path": {"tf": 1.4142135623730951}, "phml.utilities.travel.travel.path_names": {"tf": 1.4142135623730951}, "phml.utilities.travel.travel.walk": {"tf": 1.4142135623730951}, "phml.utilities.travel.travel.visit_all_after": {"tf": 1.4142135623730951}}, "df": 6}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.core.HypertextManager.open": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"phml.embedded.EmbeddedImport.objects": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"phml.helpers.calc_offset": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.remove_module": {"tf": 1}, "phml.embedded.Module": {"tf": 1}, "phml.embedded.Module.__init__": {"tf": 1}, "phml.embedded.Module.collect": {"tf": 1}, "phml.embedded.EmbeddedImport.module": {"tf": 1}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"phml.utilities.transform.transform.modify_children": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.Missing": {"tf": 1}, "phml.nodes.Missing.__init__": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {"phml.utilities.misc": {"tf": 1}, "phml.utilities.misc.depth": {"tf": 1}, "phml.utilities.misc.size": {"tf": 1}, "phml.utilities.misc.classes": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.misc.classes.ClassList": {"tf": 1}, "phml.utilities.misc.classes.ClassList.__init__": {"tf": 1}, "phml.utilities.misc.classes.ClassList.toggle": {"tf": 1}, "phml.utilities.misc.classes.ClassList.add": {"tf": 1}, "phml.utilities.misc.classes.ClassList.replace": {"tf": 1}, "phml.utilities.misc.classes.ClassList.remove": {"tf": 1}, "phml.utilities.misc.classes.ClassList.classes": {"tf": 1}, "phml.utilities.misc.heading": {"tf": 1}, "phml.utilities.misc.heading.heading_rank": {"tf": 1}}, "df": 14}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.locate.select.matches": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {"phml.utilities.transform.transform.map_nodes": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"phml.core.HypertextManager.load": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.locate": {"tf": 1}, "phml.utilities.locate.find": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index": {"tf": 1}, "phml.utilities.locate.index.Index": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.index.Index.indexed_tree": {"tf": 1}, "phml.utilities.locate.index.Index.items": {"tf": 1}, "phml.utilities.locate.index.Index.values": {"tf": 1}, "phml.utilities.locate.index.Index.keys": {"tf": 1}, "phml.utilities.locate.index.Index.add": {"tf": 1}, "phml.utilities.locate.index.Index.remove": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}, "phml.utilities.locate.select": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}}, "df": 26}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml.embedded.EmbeddedPythonException.format_line": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.embedded.EmbeddedPythonException.generate_exception_lines": {"tf": 1}, "phml.helpers.strip_blank_lines": {"tf": 1}}, "df": 2}}, "k": {"docs": {"phml.utilities.validate.validate.is_css_link": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.Literal": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}, "phml.nodes.Literal.is_text": {"tf": 1}, "phml.nodes.Literal.is_comment": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.LiteralType": {"tf": 1}, "phml.nodes.LiteralType.From": {"tf": 1}}, "df": 2}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Parent.len_as_str": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"phml.core.HypertextManager.format": {"tf": 1}, "phml.embedded.EmbeddedPythonException.format_line": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"phml.nodes.LiteralType.From": {"tf": 1}, "phml.nodes.Point.from_dict": {"tf": 1}, "phml.nodes.Position.from_pos": {"tf": 1}, "phml.nodes.Position.from_dict": {"tf": 1}, "phml.nodes.Node.from_dict": {"tf": 1}, "phml.nodes.Element.from_dict": {"tf": 1}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.locate.find": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_after": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_after": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_before": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_before": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}}, "df": 10}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.transform.transform.filter_nodes": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.core.HypertextManager.write": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"phml.utilities.travel.travel.walk": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.core.HypertextManager.expose": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.embedded.EmbeddedPythonException.generate_exception_lines": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {"phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Parent.extend": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.extract": {"tf": 1}, "phml.utilities.transform.extract.to_string": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.embedded": {"tf": 1}, "phml.embedded.EmbeddedTryCatch": {"tf": 1}, "phml.embedded.EmbeddedTryCatch.__init__": {"tf": 1}, "phml.embedded.EmbeddedPythonException": {"tf": 1}, "phml.embedded.EmbeddedPythonException.__init__": {"tf": 1}, "phml.embedded.EmbeddedPythonException.format_line": {"tf": 1}, "phml.embedded.EmbeddedPythonException.generate_exception_lines": {"tf": 1}, "phml.embedded.parse_import_values": {"tf": 1}, "phml.embedded.ImportStruct": {"tf": 1}, "phml.embedded.ImportStruct.values": {"tf": 1}, "phml.embedded.Module": {"tf": 1}, "phml.embedded.Module.__init__": {"tf": 1}, "phml.embedded.Module.collect": {"tf": 1}, "phml.embedded.EmbeddedImport": {"tf": 1}, "phml.embedded.EmbeddedImport.__init__": {"tf": 1}, "phml.embedded.EmbeddedImport.module": {"tf": 1}, "phml.embedded.EmbeddedImport.objects": {"tf": 1}, "phml.embedded.EmbeddedImport.data": {"tf": 1}, "phml.embedded.Embedded": {"tf": 1.4142135623730951}, "phml.embedded.Embedded.__init__": {"tf": 1.4142135623730951}, "phml.embedded.Embedded.context": {"tf": 1.4142135623730951}, "phml.embedded.Embedded.imports": {"tf": 1.4142135623730951}, "phml.embedded.Embedded.split_contexts": {"tf": 1.4142135623730951}, "phml.embedded.Embedded.parse_data": {"tf": 1.4142135623730951}, "phml.embedded.update_ast_node_pos": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1.4142135623730951}, "phml.embedded.exec_embedded_blocks": {"tf": 1.4142135623730951}, "phml.embedded.built_in": {"tf": 1}, "phml.utilities.validate.validate.is_embedded": {"tf": 1}}, "df": 29, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"phml.embedded.EmbeddedTryCatch": {"tf": 1}, "phml.embedded.EmbeddedTryCatch.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.embedded.EmbeddedPythonException": {"tf": 1}, "phml.embedded.EmbeddedPythonException.__init__": {"tf": 1}, "phml.embedded.EmbeddedPythonException.format_line": {"tf": 1}, "phml.embedded.EmbeddedPythonException.generate_exception_lines": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml.embedded.EmbeddedImport": {"tf": 1}, "phml.embedded.EmbeddedImport.__init__": {"tf": 1}, "phml.embedded.EmbeddedImport.module": {"tf": 1}, "phml.embedded.EmbeddedImport.objects": {"tf": 1}, "phml.embedded.EmbeddedImport.data": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Element": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Element.from_dict": {"tf": 1}, "phml.nodes.Element.tag_path": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.nodes.Element.attrs_as_str": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}}, "df": 9}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.parser.RE.tag_end": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.validate.validate.is_event_handler": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"phml.embedded.EmbeddedImport.data": {"tf": 1}, "phml.embedded.Embedded.parse_data": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Point.from_dict": {"tf": 1}, "phml.nodes.Position.from_dict": {"tf": 1}, "phml.nodes.Position.as_dict": {"tf": 1}, "phml.nodes.Node.as_dict": {"tf": 1}, "phml.nodes.Node.from_dict": {"tf": 1}, "phml.nodes.Parent.as_dict": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Element.from_dict": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}}, "df": 9}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.utilities.misc.depth": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.embedded.update_ast_node_pos": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities": {"tf": 1}, "phml.utilities.locate": {"tf": 1}, "phml.utilities.locate.find": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index": {"tf": 1}, "phml.utilities.locate.index.Index": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.index.Index.indexed_tree": {"tf": 1}, "phml.utilities.locate.index.Index.items": {"tf": 1}, "phml.utilities.locate.index.Index.values": {"tf": 1}, "phml.utilities.locate.index.Index.keys": {"tf": 1}, "phml.utilities.locate.index.Index.add": {"tf": 1}, "phml.utilities.locate.index.Index.remove": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}, "phml.utilities.locate.select": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}, "phml.utilities.misc": {"tf": 1}, "phml.utilities.misc.depth": {"tf": 1}, "phml.utilities.misc.size": {"tf": 1}, "phml.utilities.misc.classes": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.misc.classes.ClassList": {"tf": 1}, "phml.utilities.misc.classes.ClassList.__init__": {"tf": 1}, "phml.utilities.misc.classes.ClassList.toggle": {"tf": 1}, "phml.utilities.misc.classes.ClassList.add": {"tf": 1}, "phml.utilities.misc.classes.ClassList.replace": {"tf": 1}, "phml.utilities.misc.classes.ClassList.remove": {"tf": 1}, "phml.utilities.misc.classes.ClassList.classes": {"tf": 1}, "phml.utilities.misc.heading": {"tf": 1}, "phml.utilities.misc.heading.heading_rank": {"tf": 1}, "phml.utilities.transform": {"tf": 1}, "phml.utilities.transform.extract": {"tf": 1}, "phml.utilities.transform.extract.to_string": {"tf": 1}, "phml.utilities.transform.sanitize": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_attributes": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_required": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_strip": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_tag": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"tf": 1}, "phml.utilities.transform.transform": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.transform.transform.shift_heading": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1}, "phml.utilities.travel": {"tf": 1}, "phml.utilities.travel.travel": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}, "phml.utilities.travel.travel.walk": {"tf": 1}, "phml.utilities.travel.travel.visit_all_after": {"tf": 1}, "phml.utilities.validate": {"tf": 1}, "phml.utilities.validate.check": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate": {"tf": 1}, "phml.utilities.validate.validate.validate": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 1}, "phml.utilities.validate.validate.is_heading": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}, "phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 84}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}}, "df": 2}}}}}, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.validate.validate.is_javascript": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "annotation": {"root": {"docs": {"phml.core.HypertextManager.parser": {"tf": 1}, "phml.core.HypertextManager.compiler": {"tf": 1}, "phml.core.HypertextManager.components": {"tf": 1}, "phml.core.HypertextManager.context": {"tf": 1}, "phml.core.HypertextManager.ast": {"tf": 1}, "phml.embedded.EmbeddedImport.module": {"tf": 1}, "phml.embedded.EmbeddedImport.objects": {"tf": 1}, "phml.embedded.EmbeddedImport.data": {"tf": 1}, "phml.embedded.Embedded.context": {"tf": 1}, "phml.embedded.Embedded.imports": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1.4142135623730951}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Element.tag_path": {"tf": 1}, "phml.parser.HypertextMarkupParser.in_pre": {"tf": 1}, "phml.utilities.locate.index.Index.indexed_tree": {"tf": 1}, "phml.utilities.misc.classes.ClassList.classes": {"tf": 1}}, "df": 16, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"phml.core.HypertextManager.parser": {"tf": 1}, "phml.core.HypertextManager.compiler": {"tf": 1}, "phml.core.HypertextManager.components": {"tf": 1}, "phml.core.HypertextManager.ast": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.core.HypertextManager.parser": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Node.position": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.core.HypertextManager.parser": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.core.HypertextManager.compiler": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.core.HypertextManager.compiler": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"phml.core.HypertextManager.components": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.core.HypertextManager.components": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"phml.core.HypertextManager.context": {"tf": 1}, "phml.embedded.EmbeddedImport.data": {"tf": 1}, "phml.embedded.Embedded.context": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.locate.index.Index.indexed_tree": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.core.HypertextManager.context": {"tf": 1}, "phml.embedded.EmbeddedImport.data": {"tf": 1}, "phml.embedded.Embedded.context": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"phml.core.HypertextManager.context": {"tf": 1}, "phml.embedded.EmbeddedImport.data": {"tf": 1}, "phml.embedded.Embedded.context": {"tf": 1}, "phml.utilities.locate.index.Index.indexed_tree": {"tf": 1}}, "df": 4}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.core.HypertextManager.ast": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.core.HypertextManager.ast": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}, "phml.utilities.locate.index.Index.indexed_tree": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Node.position": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"phml.embedded.EmbeddedImport.module": {"tf": 1}, "phml.nodes.Node.type": {"tf": 1}, "phml.utilities.misc.classes.ClassList.classes": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"phml.embedded.EmbeddedImport.objects": {"tf": 1}, "phml.nodes.Element.tag_path": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"phml.embedded.Embedded.imports": {"tf": 1}, "phml.utilities.locate.index.Index.indexed_tree": {"tf": 1}}, "df": 2}}}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.embedded.Embedded.imports": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml.embedded.Embedded.imports": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.locate.index.Index.indexed_tree": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.parser.HypertextMarkupParser.in_pre": {"tf": 1}}, "df": 1}}}}}, "default_value": {"root": {"0": {"docs": {"phml.parser.HypertextMarkupParser.in_pre": {"tf": 1}}, "df": 1}, "docs": {"phml.parser.RE.tag_start": {"tf": 3.872983346207417}, "phml.parser.RE.tag_end": {"tf": 1.7320508075688772}, "phml.parser.RE.comment": {"tf": 2.23606797749979}, "phml.parser.RE.attribute": {"tf": 4.358898943540674}, "phml.parser.HypertextMarkupParser.tag_stack": {"tf": 1.4142135623730951}, "phml.parser.HypertextMarkupParser.in_pre": {"tf": 1}}, "df": 6, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.RE.tag_start": {"tf": 1}, "phml.parser.RE.tag_end": {"tf": 1}, "phml.parser.RE.comment": {"tf": 1}, "phml.parser.RE.attribute": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.RE.tag_start": {"tf": 1}, "phml.parser.RE.tag_end": {"tf": 1}, "phml.parser.RE.comment": {"tf": 1}, "phml.parser.RE.attribute": {"tf": 1}}, "df": 4}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.parser.RE.tag_start": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.parser.RE.tag_end": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml.parser.RE.attribute": {"tf": 1}}, "df": 1}}}}}, "x": {"2": {"7": {"docs": {"phml.parser.RE.tag_start": {"tf": 1.4142135623730951}, "phml.parser.RE.tag_end": {"tf": 1.4142135623730951}, "phml.parser.RE.comment": {"tf": 1.4142135623730951}, "phml.parser.RE.attribute": {"tf": 2.449489742783178}}, "df": 4}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "p": {"docs": {"phml.parser.RE.tag_start": {"tf": 2}, "phml.parser.RE.tag_end": {"tf": 1}, "phml.parser.RE.attribute": {"tf": 2.449489742783178}}, "df": 3}, "l": {"docs": {}, "df": 0, "t": {"docs": {"phml.parser.RE.tag_start": {"tf": 2.6457513110645907}, "phml.parser.RE.tag_end": {"tf": 1}, "phml.parser.RE.comment": {"tf": 1}, "phml.parser.RE.attribute": {"tf": 2.449489742783178}}, "df": 4}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"phml.parser.RE.tag_start": {"tf": 2.449489742783178}, "phml.parser.RE.tag_end": {"tf": 1.4142135623730951}, "phml.parser.RE.comment": {"tf": 1}, "phml.parser.RE.attribute": {"tf": 2.6457513110645907}}, "df": 4}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.parser.RE.attribute": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"2": {"docs": {"phml.parser.RE.tag_start": {"tf": 1}}, "df": 1}, "docs": {"phml.parser.RE.tag_start": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.RE.tag_start": {"tf": 1}, "phml.parser.RE.attribute": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {"phml.parser.RE.tag_start": {"tf": 1}, "phml.parser.RE.attribute": {"tf": 1}}, "df": 2}, "s": {"docs": {"phml.parser.RE.tag_start": {"tf": 1}, "phml.parser.RE.comment": {"tf": 1}, "phml.parser.RE.attribute": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.RE.attribute": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.RE.attribute": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"phml.parser.RE.attribute": {"tf": 2}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.RE.attribute": {"tf": 1}}, "df": 1}}}}}}}}, "signature": {"root": {"0": {"docs": {"phml.Version.__init__": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler.render": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1}, "phml.nodes.Parent.pop": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}}, "df": 6}, "2": {"docs": {"phml.Version.__init__": {"tf": 1}}, "df": 1}, "3": {"9": {"docs": {"phml.components.ComponentManager.generate_name": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.parse": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.add": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.format": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.add": {"tf": 1.4142135623730951}, "phml.embedded.EmbeddedPythonException.format_line": {"tf": 1.4142135623730951}, "phml.embedded.exec_embedded_blocks": {"tf": 1.4142135623730951}, "phml.helpers.PHMLTryCatch.__init__": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.sanatize": {"tf": 19.6468827043885}}, "df": 9}, "docs": {"phml.Version.__init__": {"tf": 1}}, "df": 1}, "docs": {"phml.Version.__init__": {"tf": 6.782329983125268}, "phml.builder.p": {"tf": 10.908712114635714}, "phml.compiler.HypertextMarkupCompiler.__init__": {"tf": 2}, "phml.compiler.HypertextMarkupCompiler.compile": {"tf": 8.18535277187245}, "phml.compiler.HypertextMarkupCompiler.render": {"tf": 7.810249675906654}, "phml.compiler.comp_step": {"tf": 7.681145747868608}, "phml.components.ComponentManager.__init__": {"tf": 2}, "phml.components.ComponentManager.generate_name": {"tf": 6}, "phml.components.ComponentManager.get_cache": {"tf": 5.477225575051661}, "phml.components.ComponentManager.cache": {"tf": 5.830951894845301}, "phml.components.ComponentManager.parse": {"tf": 6.6332495807108}, "phml.components.ComponentManager.add": {"tf": 10.770329614269007}, "phml.components.ComponentManager.keys": {"tf": 3.1622776601683795}, "phml.components.ComponentManager.values": {"tf": 3.1622776601683795}, "phml.components.ComponentManager.remove": {"tf": 4.242640687119285}, "phml.components.ComponentManager.validate": {"tf": 5.0990195135927845}, "phml.components.tokenize_name": {"tf": 7.615773105863909}, "phml.core.HypertextManager.__init__": {"tf": 2}, "phml.core.HypertextManager.open": {"tf": 8.831760866327848}, "phml.core.HypertextManager.add_module": {"tf": 8.54400374531753}, "phml.core.HypertextManager.remove_module": {"tf": 6.48074069840786}, "phml.core.HypertextManager.load": {"tf": 5.196152422706632}, "phml.core.HypertextManager.parse": {"tf": 5.830951894845301}, "phml.core.HypertextManager.format": {"tf": 9.219544457292887}, "phml.core.HypertextManager.compile": {"tf": 5.477225575051661}, "phml.core.HypertextManager.render": {"tf": 6.48074069840786}, "phml.core.HypertextManager.write": {"tf": 7.54983443527075}, "phml.core.HypertextManager.add": {"tf": 10.770329614269007}, "phml.core.HypertextManager.remove": {"tf": 4.242640687119285}, "phml.core.HypertextManager.expose": {"tf": 7.3484692283495345}, "phml.core.HypertextManager.redact": {"tf": 4.47213595499958}, "phml.embedded.EmbeddedTryCatch.__init__": {"tf": 9.1104335791443}, "phml.embedded.EmbeddedPythonException.__init__": {"tf": 4.898979485566356}, "phml.embedded.EmbeddedPythonException.format_line": {"tf": 5.830951894845301}, "phml.embedded.EmbeddedPythonException.generate_exception_lines": {"tf": 5.5677643628300215}, "phml.embedded.parse_import_values": {"tf": 5.916079783099616}, "phml.embedded.ImportStruct.values": {"tf": 3.1622776601683795}, "phml.embedded.Module.__init__": {"tf": 6.4031242374328485}, "phml.embedded.Module.collect": {"tf": 3.4641016151377544}, "phml.embedded.EmbeddedImport.__init__": {"tf": 8}, "phml.embedded.Embedded.__init__": {"tf": 6.6332495807108}, "phml.embedded.Embedded.split_contexts": {"tf": 6.782329983125268}, "phml.embedded.Embedded.parse_data": {"tf": 4.242640687119285}, "phml.embedded.update_ast_node_pos": {"tf": 3.7416573867739413}, "phml.embedded.exec_embedded": {"tf": 6.782329983125268}, "phml.embedded.exec_embedded_blocks": {"tf": 7.416198487095663}, "phml.helpers.build_recursive_context": {"tf": 7.874007874011811}, "phml.helpers.iterate_nodes": {"tf": 6.082762530298219}, "phml.helpers.calc_offset": {"tf": 4}, "phml.helpers.strip_blank_lines": {"tf": 4}, "phml.helpers.normalize_indent": {"tf": 5.477225575051661}, "phml.helpers.PHMLTryCatch.__init__": {"tf": 6.928203230275509}, "phml.nodes.Missing.__init__": {"tf": 2}, "phml.nodes.p_code": {"tf": 3.4641016151377544}, "phml.nodes.LiteralType.From": {"tf": 4}, "phml.nodes.Point.__init__": {"tf": 4.47213595499958}, "phml.nodes.Point.from_dict": {"tf": 4.898979485566356}, "phml.nodes.Position.__init__": {"tf": 8.246211251235321}, "phml.nodes.Position.from_pos": {"tf": 5.656854249492381}, "phml.nodes.Position.from_dict": {"tf": 5.385164807134504}, "phml.nodes.Position.as_dict": {"tf": 3.4641016151377544}, "phml.nodes.Node.__init__": {"tf": 9.643650760992955}, "phml.nodes.Node.as_dict": {"tf": 3.4641016151377544}, "phml.nodes.Node.from_dict": {"tf": 5.291502622129181}, "phml.nodes.Node.pos_as_str": {"tf": 5.0990195135927845}, "phml.nodes.Parent.__init__": {"tf": 10.954451150103322}, "phml.nodes.Parent.pop": {"tf": 5.830951894845301}, "phml.nodes.Parent.index": {"tf": 5.291502622129181}, "phml.nodes.Parent.append": {"tf": 5.0990195135927845}, "phml.nodes.Parent.extend": {"tf": 4.242640687119285}, "phml.nodes.Parent.insert": {"tf": 6.244997998398398}, "phml.nodes.Parent.remove": {"tf": 5.0990195135927845}, "phml.nodes.Parent.len_as_str": {"tf": 5.0990195135927845}, "phml.nodes.Parent.as_dict": {"tf": 3.4641016151377544}, "phml.nodes.AST.__init__": {"tf": 8.94427190999916}, "phml.nodes.Element.__init__": {"tf": 12.328828005937952}, "phml.nodes.Element.as_dict": {"tf": 3.4641016151377544}, "phml.nodes.Element.from_dict": {"tf": 6.164414002968976}, "phml.nodes.Element.pop": {"tf": 9.1104335791443}, "phml.nodes.Element.get": {"tf": 7.681145747868608}, "phml.nodes.Element.attrs_as_str": {"tf": 5.830951894845301}, "phml.nodes.Literal.__init__": {"tf": 9.643650760992955}, "phml.nodes.Literal.as_dict": {"tf": 3.4641016151377544}, "phml.nodes.Literal.is_text": {"tf": 4.898979485566356}, "phml.nodes.Literal.is_comment": {"tf": 4.898979485566356}, "phml.nodes.inspect": {"tf": 7.211102550927978}, "phml.parser.strip": {"tf": 5.385164807134504}, "phml.parser.RE.__init__": {"tf": 2}, "phml.parser.HypertextMarkupParser.__init__": {"tf": 2}, "phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 5.291502622129181}, "phml.parser.HypertextMarkupParser.parse": {"tf": 6.48074069840786}, "phml.utilities.locate.find.ancestor": {"tf": 6.244997998398398}, "phml.utilities.locate.find.find": {"tf": 9.899494936611665}, "phml.utilities.locate.find.find_all": {"tf": 9.899494936611665}, "phml.utilities.locate.find.find_after": {"tf": 10.44030650891055}, "phml.utilities.locate.find.find_all_after": {"tf": 10.44030650891055}, "phml.utilities.locate.find.find_all_before": {"tf": 10.44030650891055}, "phml.utilities.locate.find.find_before": {"tf": 10.44030650891055}, "phml.utilities.locate.find.find_all_between": {"tf": 12.24744871391589}, "phml.utilities.locate.index.Index.__init__": {"tf": 10.583005244258363}, "phml.utilities.locate.index.Index.items": {"tf": 3.1622776601683795}, "phml.utilities.locate.index.Index.values": {"tf": 3.1622776601683795}, "phml.utilities.locate.index.Index.keys": {"tf": 3.1622776601683795}, "phml.utilities.locate.index.Index.add": {"tf": 5.0990195135927845}, "phml.utilities.locate.index.Index.remove": {"tf": 5.0990195135927845}, "phml.utilities.locate.index.Index.get": {"tf": 8.54400374531753}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 4.898979485566356}, "phml.utilities.locate.select.query": {"tf": 6.708203932499369}, "phml.utilities.locate.select.query_all": {"tf": 6.708203932499369}, "phml.utilities.locate.select.matches": {"tf": 5.656854249492381}, "phml.utilities.locate.select.parse_specifiers": {"tf": 4}, "phml.utilities.misc.depth": {"tf": 3.4641016151377544}, "phml.utilities.misc.size": {"tf": 4.898979485566356}, "phml.utilities.misc.classes.classnames": {"tf": 9.486832980505138}, "phml.utilities.misc.classes.ClassList.__init__": {"tf": 4.47213595499958}, "phml.utilities.misc.classes.ClassList.toggle": {"tf": 4.47213595499958}, "phml.utilities.misc.classes.ClassList.add": {"tf": 4.47213595499958}, "phml.utilities.misc.classes.ClassList.replace": {"tf": 5.0990195135927845}, "phml.utilities.misc.classes.ClassList.remove": {"tf": 4.47213595499958}, "phml.utilities.misc.heading.heading_rank": {"tf": 4.898979485566356}, "phml.utilities.transform.extract.to_string": {"tf": 4.898979485566356}, "phml.utilities.transform.sanitize.sanatize": {"tf": 38.535697735995385}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 14.696938456699069}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 15.652475842498529}, "phml.utilities.transform.sanitize.recurse_check_attributes": {"tf": 7.211102550927978}, "phml.utilities.transform.sanitize.recurse_check_required": {"tf": 7.211102550927978}, "phml.utilities.transform.sanitize.recurse_strip": {"tf": 6.164414002968976}, "phml.utilities.transform.sanitize.recurse_check_tag": {"tf": 7.211102550927978}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"tf": 7.211102550927978}, "phml.utilities.transform.transform.filter_nodes": {"tf": 9.1104335791443}, "phml.utilities.transform.transform.remove_nodes": {"tf": 9.1104335791443}, "phml.utilities.transform.transform.map_nodes": {"tf": 7.615773105863909}, "phml.utilities.transform.transform.find_and_replace": {"tf": 7.745966692414834}, "phml.utilities.transform.transform.shift_heading": {"tf": 5.477225575051661}, "phml.utilities.transform.transform.replace_node": {"tf": 11.74734012447073}, "phml.utilities.transform.transform.modify_children": {"tf": 7.681145747868608}, "phml.utilities.travel.travel.path": {"tf": 6.082762530298219}, "phml.utilities.travel.travel.path_names": {"tf": 5.385164807134504}, "phml.utilities.travel.travel.walk": {"tf": 4.898979485566356}, "phml.utilities.travel.travel.visit_all_after": {"tf": 4.898979485566356}, "phml.utilities.validate.check.check": {"tf": 9.273618495495704}, "phml.utilities.validate.validate.validate": {"tf": 4.898979485566356}, "phml.utilities.validate.validate.generated": {"tf": 4.898979485566356}, "phml.utilities.validate.validate.is_heading": {"tf": 4.898979485566356}, "phml.utilities.validate.validate.is_css_link": {"tf": 4.898979485566356}, "phml.utilities.validate.validate.is_css_style": {"tf": 4.898979485566356}, "phml.utilities.validate.validate.is_javascript": {"tf": 4.898979485566356}, "phml.utilities.validate.validate.is_element": {"tf": 6.244997998398398}, "phml.utilities.validate.validate.is_embedded": {"tf": 4.898979485566356}, "phml.utilities.validate.validate.is_interactive": {"tf": 4.898979485566356}, "phml.utilities.validate.validate.is_phrasing": {"tf": 4.898979485566356}, "phml.utilities.validate.validate.is_event_handler": {"tf": 4}, "phml.utilities.validate.validate.blank": {"tf": 4}}, "df": 153, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.Version.__init__": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}, "x": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.Version.__init__": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.remove_module": {"tf": 1}, "phml.embedded.Module.__init__": {"tf": 1}, "phml.embedded.EmbeddedImport.__init__": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1, "n": {"docs": {"phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Node.from_dict": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.AST.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Element.from_dict": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}}, "df": 7, "t": {"docs": {"phml.Version.__init__": {"tf": 1.7320508075688772}, "phml.builder.p": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler.render": {"tf": 1}, "phml.embedded.EmbeddedTryCatch.__init__": {"tf": 1.4142135623730951}, "phml.embedded.EmbeddedPythonException.generate_exception_lines": {"tf": 1}, "phml.helpers.calc_offset": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1}, "phml.nodes.Point.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Position.__init__": {"tf": 2}, "phml.nodes.Parent.pop": {"tf": 1}, "phml.nodes.Parent.index": {"tf": 1}, "phml.nodes.Parent.insert": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Element.attrs_as_str": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utilities.misc.depth": {"tf": 1}, "phml.utilities.misc.size": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.misc.heading.heading_rank": {"tf": 1}, "phml.utilities.transform.transform.shift_heading": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1}}, "df": 21}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.compiler.HypertextMarkupCompiler.render": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1}, "phml.nodes.Element.attrs_as_str": {"tf": 1}}, "df": 3}}, "x": {"docs": {"phml.nodes.Parent.insert": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.7320508075688772}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.core.HypertextManager.open": {"tf": 1}, "phml.helpers.iterate_nodes": {"tf": 1}, "phml.utilities.travel.travel.walk": {"tf": 1}, "phml.utilities.travel.travel.visit_all_after": {"tf": 1}}, "df": 4}}}}}, "m": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml.embedded.parse_import_values": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.remove_module": {"tf": 1}, "phml.embedded.Module.__init__": {"tf": 1}}, "df": 3}}}}}, "g": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1}}, "d": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1, "x": {"docs": {"phml.nodes.Parent.pop": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "c": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"phml.Version.__init__": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}, "l": {"docs": {"phml.utilities.transform.transform.replace_node": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"phml.builder.p": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.builder.p": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"phml.compiler.HypertextMarkupCompiler.compile": {"tf": 1}, "phml.compiler.comp_step": {"tf": 1}, "phml.core.HypertextManager.compile": {"tf": 1}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1.4142135623730951}, "phml.embedded.Module.collect": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1.4142135623730951}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.helpers.build_recursive_context": {"tf": 1.4142135623730951}, "phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 14}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}}, "df": 3}}}}}}}}, "b": {"docs": {}, "df": 0, "c": {"docs": {"phml.core.HypertextManager.open": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.validate.validate.is_event_handler": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.nodes.Element.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}}, "df": 4}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.transform.shift_heading": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.builder.p": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {"phml.compiler.HypertextMarkupCompiler.compile": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler.render": {"tf": 1}, "phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.components.ComponentManager.get_cache": {"tf": 1}, "phml.components.ComponentManager.cache": {"tf": 1}, "phml.components.ComponentManager.parse": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.components.ComponentManager.keys": {"tf": 1}, "phml.components.ComponentManager.values": {"tf": 1}, "phml.components.ComponentManager.remove": {"tf": 1}, "phml.components.ComponentManager.validate": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.remove_module": {"tf": 1}, "phml.core.HypertextManager.load": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.compile": {"tf": 1}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.core.HypertextManager.remove": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.core.HypertextManager.redact": {"tf": 1}, "phml.embedded.EmbeddedPythonException.format_line": {"tf": 1}, "phml.embedded.EmbeddedPythonException.generate_exception_lines": {"tf": 1}, "phml.embedded.Module.collect": {"tf": 1}, "phml.embedded.Embedded.split_contexts": {"tf": 1}, "phml.embedded.Embedded.parse_data": {"tf": 1}, "phml.nodes.Position.as_dict": {"tf": 1}, "phml.nodes.Node.as_dict": {"tf": 1}, "phml.nodes.Node.pos_as_str": {"tf": 1}, "phml.nodes.Parent.pop": {"tf": 1}, "phml.nodes.Parent.index": {"tf": 1}, "phml.nodes.Parent.append": {"tf": 1}, "phml.nodes.Parent.extend": {"tf": 1}, "phml.nodes.Parent.insert": {"tf": 1}, "phml.nodes.Parent.remove": {"tf": 1}, "phml.nodes.Parent.len_as_str": {"tf": 1}, "phml.nodes.Parent.as_dict": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.nodes.Element.attrs_as_str": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}, "phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}, "phml.utilities.locate.index.Index.items": {"tf": 1}, "phml.utilities.locate.index.Index.values": {"tf": 1}, "phml.utilities.locate.index.Index.keys": {"tf": 1}, "phml.utilities.locate.index.Index.add": {"tf": 1}, "phml.utilities.locate.index.Index.remove": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}, "phml.utilities.misc.classes.ClassList.toggle": {"tf": 1}, "phml.utilities.misc.classes.ClassList.add": {"tf": 1}, "phml.utilities.misc.classes.ClassList.replace": {"tf": 1}, "phml.utilities.misc.classes.ClassList.remove": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}}, "df": 57}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.locate.find.find_all_between": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"phml.builder.p": {"tf": 1.4142135623730951}, "phml.compiler.HypertextMarkupCompiler.render": {"tf": 1}, "phml.compiler.comp_step": {"tf": 1}, "phml.components.ComponentManager.generate_name": {"tf": 1.7320508075688772}, "phml.components.ComponentManager.get_cache": {"tf": 1}, "phml.components.ComponentManager.cache": {"tf": 1}, "phml.components.ComponentManager.parse": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.add": {"tf": 2}, "phml.components.ComponentManager.remove": {"tf": 1}, "phml.components.tokenize_name": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.open": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.add_module": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.remove_module": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.load": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 2}, "phml.core.HypertextManager.remove": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.core.HypertextManager.redact": {"tf": 1}, "phml.embedded.EmbeddedTryCatch.__init__": {"tf": 1.4142135623730951}, "phml.embedded.EmbeddedPythonException.format_line": {"tf": 1}, "phml.embedded.EmbeddedPythonException.generate_exception_lines": {"tf": 1}, "phml.embedded.parse_import_values": {"tf": 2}, "phml.embedded.Module.__init__": {"tf": 1.4142135623730951}, "phml.embedded.EmbeddedImport.__init__": {"tf": 1.7320508075688772}, "phml.embedded.Embedded.__init__": {"tf": 1.4142135623730951}, "phml.embedded.Embedded.split_contexts": {"tf": 1.4142135623730951}, "phml.embedded.Embedded.parse_data": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1.4142135623730951}, "phml.embedded.exec_embedded_blocks": {"tf": 1.7320508075688772}, "phml.helpers.build_recursive_context": {"tf": 1.4142135623730951}, "phml.helpers.calc_offset": {"tf": 1}, "phml.helpers.strip_blank_lines": {"tf": 1.4142135623730951}, "phml.helpers.normalize_indent": {"tf": 1.4142135623730951}, "phml.helpers.PHMLTryCatch.__init__": {"tf": 1.4142135623730951}, "phml.nodes.p_code": {"tf": 1}, "phml.nodes.LiteralType.From": {"tf": 1.4142135623730951}, "phml.nodes.Node.pos_as_str": {"tf": 1}, "phml.nodes.Parent.len_as_str": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Element.pop": {"tf": 1.4142135623730951}, "phml.nodes.Element.get": {"tf": 1.4142135623730951}, "phml.nodes.Element.attrs_as_str": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1.4142135623730951}, "phml.nodes.inspect": {"tf": 1}, "phml.parser.strip": {"tf": 1.7320508075688772}, "phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index.get": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1.7320508075688772}, "phml.utilities.misc.classes.ClassList.toggle": {"tf": 1}, "phml.utilities.misc.classes.ClassList.add": {"tf": 1}, "phml.utilities.misc.classes.ClassList.replace": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes.ClassList.remove": {"tf": 1}, "phml.utilities.transform.extract.to_string": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 3.1622776601683795}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 3.4641016151377544}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1}}, "df": 81, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 11}}, "p": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}}, "df": 3}, "k": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Position.__init__": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.travel.travel.visit_all_after": {"tf": 1}}, "df": 12}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml.embedded.update_ast_node_pos": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}}, "df": 4}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 2}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.recurse_check_attributes": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.recurse_check_required": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.recurse_strip": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.recurse_check_tag": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"tf": 1.7320508075688772}}, "df": 7}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_attributes": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_required": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_strip": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_tag": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"tf": 1}}, "df": 7}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}, "b": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"phml.builder.p": {"tf": 2.23606797749979}, "phml.compiler.HypertextMarkupCompiler.compile": {"tf": 1.7320508075688772}, "phml.compiler.HypertextMarkupCompiler.render": {"tf": 1}, "phml.compiler.comp_step": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.get_cache": {"tf": 1}, "phml.components.ComponentManager.cache": {"tf": 1}, "phml.components.ComponentManager.parse": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.components.ComponentManager.validate": {"tf": 1}, "phml.core.HypertextManager.open": {"tf": 1}, "phml.core.HypertextManager.compile": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.embedded.Embedded.__init__": {"tf": 1}, "phml.embedded.Embedded.split_contexts": {"tf": 1}, "phml.helpers.build_recursive_context": {"tf": 1}, "phml.helpers.iterate_nodes": {"tf": 1.4142135623730951}, "phml.nodes.Point.from_dict": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Position.from_pos": {"tf": 1.4142135623730951}, "phml.nodes.Position.from_dict": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Parent.__init__": {"tf": 2}, "phml.nodes.Parent.pop": {"tf": 1}, "phml.nodes.Parent.index": {"tf": 1}, "phml.nodes.Parent.append": {"tf": 1}, "phml.nodes.Parent.insert": {"tf": 1}, "phml.nodes.Parent.remove": {"tf": 1}, "phml.nodes.AST.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Element.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Element.from_dict": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1.4142135623730951}, "phml.nodes.Element.get": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Literal.is_text": {"tf": 1}, "phml.nodes.Literal.is_comment": {"tf": 1}, "phml.nodes.inspect": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_after": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all_after": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all_before": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_before": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all_between": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index.__init__": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index.add": {"tf": 1}, "phml.utilities.locate.index.Index.remove": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.misc.size": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes.ClassList.__init__": {"tf": 1}, "phml.utilities.misc.heading.heading_rank": {"tf": 1}, "phml.utilities.transform.extract.to_string": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_attributes": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.recurse_check_required": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.recurse_strip": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_tag": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.map_nodes": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.transform.transform.shift_heading": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 2}, "phml.utilities.transform.transform.modify_children": {"tf": 1.7320508075688772}, "phml.utilities.travel.travel.path": {"tf": 1.4142135623730951}, "phml.utilities.travel.travel.path_names": {"tf": 1}, "phml.utilities.travel.travel.walk": {"tf": 1}, "phml.utilities.travel.travel.visit_all_after": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.validate": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 1}, "phml.utilities.validate.validate.is_heading": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}, "phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 87}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.builder.p": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler.compile": {"tf": 1.4142135623730951}, "phml.compiler.HypertextMarkupCompiler.render": {"tf": 1}, "phml.compiler.comp_step": {"tf": 1}, "phml.core.HypertextManager.compile": {"tf": 1}, "phml.helpers.iterate_nodes": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Parent.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Element.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Literal.__init__": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.misc.size": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_required": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_tag": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1}, "phml.utilities.travel.travel.walk": {"tf": 1}}, "df": 28}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.components.ComponentManager.parse": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.core.HypertextManager.open": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.load": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.embedded.EmbeddedTryCatch.__init__": {"tf": 1.4142135623730951}, "phml.embedded.EmbeddedPythonException.__init__": {"tf": 1}, "phml.embedded.Embedded.__init__": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.helpers.PHMLTryCatch.__init__": {"tf": 1.4142135623730951}}, "df": 14, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"phml.components.ComponentManager.add": {"tf": 1}, "phml.core.HypertextManager.open": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.load": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.embedded.EmbeddedTryCatch.__init__": {"tf": 1}, "phml.helpers.PHMLTryCatch.__init__": {"tf": 1}}, "df": 8}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {"phml.embedded.EmbeddedTryCatch.__init__": {"tf": 1}, "phml.embedded.EmbeddedPythonException.__init__": {"tf": 1}, "phml.nodes.Position.from_pos": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Position.from_pos": {"tf": 1.4142135623730951}, "phml.nodes.Position.from_dict": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Parent.__init__": {"tf": 1.4142135623730951}, "phml.nodes.AST.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Element.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Literal.__init__": {"tf": 1.4142135623730951}}, "df": 7}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Point.from_dict": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"phml.embedded.EmbeddedImport.__init__": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Node.from_dict": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.AST.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Element.from_dict": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 8}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}}, "df": 3}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml.builder.p": {"tf": 1.7320508075688772}, "phml.compiler.HypertextMarkupCompiler.compile": {"tf": 1}, "phml.compiler.HypertextMarkupCompiler.render": {"tf": 1}, "phml.helpers.build_recursive_context": {"tf": 1.4142135623730951}, "phml.helpers.iterate_nodes": {"tf": 1.4142135623730951}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.Parent.pop": {"tf": 1}, "phml.nodes.Parent.index": {"tf": 1.4142135623730951}, "phml.nodes.Parent.append": {"tf": 1.4142135623730951}, "phml.nodes.Parent.insert": {"tf": 1}, "phml.nodes.Parent.remove": {"tf": 1.4142135623730951}, "phml.nodes.AST.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Literal.is_text": {"tf": 1.4142135623730951}, "phml.nodes.Literal.is_comment": {"tf": 1.4142135623730951}, "phml.nodes.inspect": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.ancestor": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_after": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all_after": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all_before": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_before": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.index.Index.add": {"tf": 1}, "phml.utilities.locate.index.Index.remove": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.misc.depth": {"tf": 1}, "phml.utilities.misc.size": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.misc.classes.ClassList.__init__": {"tf": 1}, "phml.utilities.misc.heading.heading_rank": {"tf": 1}, "phml.utilities.transform.extract.to_string": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.recurse_check_attributes": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.recurse_check_required": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_strip": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_tag": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.shift_heading": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.modify_children": {"tf": 1.4142135623730951}, "phml.utilities.travel.travel.path": {"tf": 1.4142135623730951}, "phml.utilities.travel.travel.path_names": {"tf": 1.4142135623730951}, "phml.utilities.travel.travel.walk": {"tf": 1}, "phml.utilities.travel.travel.visit_all_after": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1.7320508075688772}, "phml.utilities.validate.validate.validate": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.generated": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_heading": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 62, "s": {"docs": {"phml.builder.p": {"tf": 2.23606797749979}, "phml.compiler.HypertextMarkupCompiler.compile": {"tf": 1.4142135623730951}, "phml.compiler.HypertextMarkupCompiler.render": {"tf": 1}, "phml.compiler.comp_step": {"tf": 1}, "phml.core.HypertextManager.compile": {"tf": 1}, "phml.embedded.Embedded.__init__": {"tf": 1}, "phml.helpers.build_recursive_context": {"tf": 1}, "phml.helpers.iterate_nodes": {"tf": 1.4142135623730951}, "phml.nodes.Point.from_dict": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Position.from_pos": {"tf": 1.4142135623730951}, "phml.nodes.Position.from_dict": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Parent.__init__": {"tf": 2}, "phml.nodes.Parent.pop": {"tf": 1}, "phml.nodes.Parent.index": {"tf": 1}, "phml.nodes.Parent.append": {"tf": 1}, "phml.nodes.Parent.extend": {"tf": 1}, "phml.nodes.Parent.insert": {"tf": 1.4142135623730951}, "phml.nodes.Parent.remove": {"tf": 1}, "phml.nodes.AST.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Element.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Element.from_dict": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1.4142135623730951}, "phml.nodes.Element.get": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Literal.is_text": {"tf": 1}, "phml.nodes.Literal.is_comment": {"tf": 1}, "phml.nodes.inspect": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_after": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all_after": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all_before": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_before": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all_between": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index.__init__": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index.add": {"tf": 1}, "phml.utilities.locate.index.Index.remove": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.misc.size": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes.ClassList.__init__": {"tf": 1}, "phml.utilities.misc.heading.heading_rank": {"tf": 1}, "phml.utilities.transform.extract.to_string": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_attributes": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_required": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_tag": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.map_nodes": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.transform.transform.shift_heading": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 2.23606797749979}, "phml.utilities.transform.transform.modify_children": {"tf": 1.7320508075688772}, "phml.utilities.travel.travel.path": {"tf": 1.4142135623730951}, "phml.utilities.travel.travel.path_names": {"tf": 1}, "phml.utilities.travel.travel.walk": {"tf": 1}, "phml.utilities.travel.travel.visit_all_after": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.validate": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 1}, "phml.utilities.validate.validate.is_heading": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}, "phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 78}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml.builder.p": {"tf": 1.7320508075688772}, "phml.components.ComponentManager.add": {"tf": 2.449489742783178}, "phml.core.HypertextManager.open": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.add_module": {"tf": 2}, "phml.core.HypertextManager.remove_module": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.parse": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.format": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 2.449489742783178}, "phml.core.HypertextManager.expose": {"tf": 1.4142135623730951}, "phml.embedded.EmbeddedTryCatch.__init__": {"tf": 2.449489742783178}, "phml.embedded.Module.__init__": {"tf": 1.4142135623730951}, "phml.embedded.EmbeddedImport.__init__": {"tf": 1.4142135623730951}, "phml.embedded.Embedded.__init__": {"tf": 1.4142135623730951}, "phml.embedded.exec_embedded": {"tf": 1.4142135623730951}, "phml.helpers.PHMLTryCatch.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Position.from_dict": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 2}, "phml.nodes.Parent.__init__": {"tf": 2.23606797749979}, "phml.nodes.AST.__init__": {"tf": 2}, "phml.nodes.Element.__init__": {"tf": 2.8284271247461903}, "phml.nodes.Literal.__init__": {"tf": 2}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_between": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 3.4641016151377544}, "phml.utilities.transform.transform.replace_node": {"tf": 1}}, "df": 35, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.compiler.comp_step": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}}, "df": 7}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.tokenize_name": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.add": {"tf": 1}, "phml.components.tokenize_name": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 7, "s": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"phml.utilities.misc.classes.ClassList.replace": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.builder.p": {"tf": 1}, "phml.components.tokenize_name": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.remove_module": {"tf": 1}, "phml.embedded.EmbeddedPythonException.generate_exception_lines": {"tf": 1}, "phml.embedded.parse_import_values": {"tf": 1}, "phml.embedded.Module.__init__": {"tf": 1}, "phml.embedded.EmbeddedImport.__init__": {"tf": 1}, "phml.embedded.Embedded.split_contexts": {"tf": 1.4142135623730951}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.Parent.extend": {"tf": 1}, "phml.nodes.Parent.insert": {"tf": 1}, "phml.nodes.AST.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.parser.strip": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_before": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 2.23606797749979}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 2.23606797749979}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1.4142135623730951}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}}, "df": 37}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml.embedded.EmbeddedPythonException.format_line": {"tf": 1}, "phml.nodes.Point.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"phml.embedded.EmbeddedPythonException.generate_exception_lines": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.embedded.EmbeddedPythonException.format_line": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 2.449489742783178}}, "df": 4}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.builder.p": {"tf": 1}, "phml.compiler.comp_step": {"tf": 1}, "phml.components.ComponentManager.get_cache": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.helpers.build_recursive_context": {"tf": 1.4142135623730951}, "phml.nodes.Point.from_dict": {"tf": 1}, "phml.nodes.Position.from_dict": {"tf": 1}, "phml.nodes.Position.as_dict": {"tf": 1}, "phml.nodes.Node.as_dict": {"tf": 1}, "phml.nodes.Node.from_dict": {"tf": 1}, "phml.nodes.Parent.as_dict": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Element.as_dict": {"tf": 1}, "phml.nodes.Element.from_dict": {"tf": 1}, "phml.nodes.Literal.as_dict": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 2.23606797749979}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 2.23606797749979}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 32}}, "v": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "r": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"phml.components.ComponentManager.add": {"tf": 1}, "phml.components.ComponentManager.validate": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.helpers.strip_blank_lines": {"tf": 1}, "phml.nodes.Point.from_dict": {"tf": 1}, "phml.nodes.Position.from_dict": {"tf": 1}, "phml.nodes.Node.from_dict": {"tf": 1}, "phml.nodes.Element.from_dict": {"tf": 1}, "phml.parser.strip": {"tf": 1}}, "df": 10}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.embedded.update_ast_node_pos": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}, "t": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}, "d": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}, "f": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}, "c": {"docs": {"phml.embedded.EmbeddedPythonException.format_line": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"phml.compiler.HypertextMarkupCompiler.compile": {"tf": 1.4142135623730951}, "phml.compiler.comp_step": {"tf": 1}, "phml.components.ComponentManager.get_cache": {"tf": 1}, "phml.components.ComponentManager.cache": {"tf": 1}, "phml.components.ComponentManager.parse": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.components.ComponentManager.validate": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}}, "df": 8}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.compiler.HypertextMarkupCompiler.compile": {"tf": 1}, "phml.compiler.comp_step": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.get_cache": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.cache": {"tf": 1}, "phml.components.ComponentManager.parse": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.components.ComponentManager.validate": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}}, "df": 5}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"phml.compiler.HypertextMarkupCompiler.render": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"phml.compiler.HypertextMarkupCompiler.compile": {"tf": 1}, "phml.core.HypertextManager.compile": {"tf": 1}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1.4142135623730951}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.helpers.build_recursive_context": {"tf": 1}}, "df": 8}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.components.ComponentManager.parse": {"tf": 1}, "phml.embedded.EmbeddedTryCatch.__init__": {"tf": 1}, "phml.embedded.EmbeddedPythonException.__init__": {"tf": 1}, "phml.embedded.Embedded.__init__": {"tf": 1}, "phml.embedded.Embedded.split_contexts": {"tf": 1}, "phml.embedded.Embedded.parse_data": {"tf": 1}, "phml.helpers.calc_offset": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}}, "df": 9}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}}, "df": 11, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.misc.classes.classnames": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"phml.utilities.validate.validate.is_element": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"phml.core.HypertextManager.open": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Point.__init__": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.Node.pos_as_str": {"tf": 1}, "phml.nodes.Parent.len_as_str": {"tf": 1}, "phml.nodes.Element.attrs_as_str": {"tf": 1}, "phml.nodes.inspect": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 5}}, "s": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.core.HypertextManager.open": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml.core.HypertextManager.format": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.compiler.comp_step": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 16}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.tokenize_name": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.AST.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {"phml.parser.strip": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"phml.parser.HypertextMarkupParser.parse": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.misc.classes.ClassList.replace": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 2.449489742783178}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}}}}}}, "b": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"phml.compiler.HypertextMarkupCompiler.render": {"tf": 1}, "phml.components.tokenize_name": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.embedded.EmbeddedImport.__init__": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Node.from_dict": {"tf": 1}, "phml.nodes.Node.pos_as_str": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.Parent.len_as_str": {"tf": 1}, "phml.nodes.AST.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Element.from_dict": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.nodes.Element.attrs_as_str": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.nodes.Literal.is_text": {"tf": 1}, "phml.nodes.Literal.is_comment": {"tf": 1}, "phml.nodes.inspect": {"tf": 1.4142135623730951}, "phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1.4142135623730951}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_after": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_after": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_before": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_before": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.replace_node": {"tf": 1.7320508075688772}, "phml.utilities.validate.check.check": {"tf": 1.7320508075688772}, "phml.utilities.validate.validate.validate": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 1}, "phml.utilities.validate.validate.is_heading": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}, "phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 51}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.compiler.HypertextMarkupCompiler.render": {"tf": 1}, "phml.components.tokenize_name": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.embedded.EmbeddedImport.__init__": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Node.from_dict": {"tf": 1}, "phml.nodes.Node.pos_as_str": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.nodes.Parent.len_as_str": {"tf": 1}, "phml.nodes.AST.__init__": {"tf": 1}, "phml.nodes.Element.__init__": {"tf": 1}, "phml.nodes.Element.from_dict": {"tf": 1}, "phml.nodes.Element.attrs_as_str": {"tf": 1}, "phml.nodes.Literal.__init__": {"tf": 1}, "phml.nodes.inspect": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.replace_node": {"tf": 1}}, "df": 18}}, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"phml.helpers.PHMLTryCatch.__init__": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"phml.utilities.transform.sanitize.Schema.__init__": {"tf": 2.449489742783178}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"phml.compiler.comp_step": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.add": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}}, "df": 3}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"phml.core.HypertextManager.open": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"phml.components.ComponentManager.cache": {"tf": 1}, "phml.components.ComponentManager.remove": {"tf": 1}, "phml.core.HypertextManager.remove": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}}, "df": 6, "s": {"docs": {"phml.core.HypertextManager.redact": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.misc.classes.ClassList.toggle": {"tf": 1}, "phml.utilities.misc.classes.ClassList.add": {"tf": 1}, "phml.utilities.misc.classes.ClassList.remove": {"tf": 1}}, "df": 3}}}}}}, "b": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.embedded.EmbeddedPythonException.__init__": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.cache": {"tf": 1}, "phml.nodes.p_code": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 4, "s": {"docs": {"phml.embedded.EmbeddedImport.__init__": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.tokenize_name": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"phml.core.HypertextManager.open": {"tf": 1}}, "df": 1}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.core.HypertextManager.expose": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.helpers.build_recursive_context": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1.4142135623730951}}, "df": 4}}}, "e": {"docs": {"phml.nodes.LiteralType.From": {"tf": 1}, "phml.nodes.Node.__init__": {"tf": 1}, "phml.nodes.Parent.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1.7320508075688772}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.embedded.EmbeddedTryCatch.__init__": {"tf": 1}, "phml.embedded.parse_import_values": {"tf": 1}, "phml.embedded.Embedded.split_contexts": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}}, "df": 8}}}}, "b": {"docs": {"phml.embedded.EmbeddedPythonException.__init__": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.Element.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}}, "df": 4, "s": {"docs": {"phml.parser.strip": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 2.6457513110645907}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.inspect": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.validate.check.check": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1, "u": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.HypertextMarkupParser.parse": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 13}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_attributes": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_required": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_strip": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_tag": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}}, "df": 8}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1}}}}, "h": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1}}}}, "d": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1}, "t": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}, "h": {"1": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}, "2": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}, "3": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}, "4": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}, "5": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}, "6": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.core.HypertextManager.open": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "r": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "f": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 2}}, "df": 1, "s": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 2}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {"phml.embedded.EmbeddedPythonException.__init__": {"tf": 1.4142135623730951}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.embedded.Embedded.__init__": {"tf": 1}, "phml.nodes.Element.from_dict": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.index.Index.add": {"tf": 1}, "phml.utilities.locate.index.Index.remove": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes.ClassList.__init__": {"tf": 1}, "phml.utilities.misc.heading.heading_rank": {"tf": 1}, "phml.utilities.transform.transform.shift_heading": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.validate.validate.is_heading": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1}, "phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 22}}}}}}, "m": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.embedded.Embedded.split_contexts": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml.embedded.Embedded.split_contexts": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Position.__init__": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.embedded.EmbeddedPythonException.format_line": {"tf": 1}, "phml.embedded.EmbeddedPythonException.generate_exception_lines": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 3}}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"phml.embedded.ImportStruct.values": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 13}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_attributes": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_required": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_strip": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_tag": {"tf": 1}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"tf": 1}}, "df": 7}}}}}}}}, "l": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1, "d": {"docs": {"phml.utilities.misc.classes.ClassList.replace": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 2.449489742783178}}, "df": 4}}, "x": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}, "p": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}, "v": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.transform.replace_node": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.utilities.transform.transform.find_and_replace": {"tf": 1}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.components.ComponentType": {"tf": 1}, "phml.embedded.ImportStruct": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.components.ComponentType": {"tf": 1}, "phml.embedded.ImportStruct": {"tf": 1}}, "df": 2}}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"phml.embedded.EmbeddedPythonException": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.embedded.EmbeddedPythonException": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"phml.nodes.LiteralType": {"tf": 1}, "phml.nodes.NodeType": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"phml.nodes.LiteralType": {"tf": 1}, "phml.nodes.NodeType": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Parent": {"tf": 1}, "phml.nodes.Literal": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.AST": {"tf": 1}, "phml.nodes.Element": {"tf": 1}}, "df": 2}}}}}}}}, "doc": {"root": {"0": {"docs": {"phml.nodes.Point": {"tf": 1}, "phml.nodes.Parent.pop": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 5}, "1": {"3": {"docs": {"phml.utilities.misc.classes.classnames": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"phml": {"tf": 1}, "phml.nodes.Point": {"tf": 1.4142135623730951}, "phml.utilities.misc.depth": {"tf": 1}, "phml.utilities.transform.transform.shift_heading": {"tf": 1}}, "df": 4}, "2": {"docs": {"phml": {"tf": 1}, "phml.utilities.misc.heading.heading_rank": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 3}, "3": {"9": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}, "5": {"docs": {"phml.utilities.validate.validate.is_event_handler": {"tf": 1}}, "df": 1}, "6": {"docs": {"phml.utilities.transform.transform.shift_heading": {"tf": 1}}, "df": 1}, "9": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "docs": {"phml": {"tf": 37.69615364994153}, "phml.Version": {"tf": 5.656854249492381}, "phml.Version.__init__": {"tf": 1.7320508075688772}, "phml.builder": {"tf": 2.23606797749979}, "phml.builder.p": {"tf": 1.7320508075688772}, "phml.compiler": {"tf": 1.7320508075688772}, "phml.compiler.HypertextMarkupCompiler": {"tf": 1.7320508075688772}, "phml.compiler.HypertextMarkupCompiler.__init__": {"tf": 1.7320508075688772}, "phml.compiler.HypertextMarkupCompiler.compile": {"tf": 1.7320508075688772}, "phml.compiler.HypertextMarkupCompiler.render": {"tf": 1.7320508075688772}, "phml.compiler.comp_step": {"tf": 5.916079783099616}, "phml.components": {"tf": 1.7320508075688772}, "phml.components.ComponentType": {"tf": 1.7320508075688772}, "phml.components.ComponentManager": {"tf": 1.7320508075688772}, "phml.components.ComponentManager.__init__": {"tf": 1.7320508075688772}, "phml.components.ComponentManager.generate_name": {"tf": 1.7320508075688772}, "phml.components.ComponentManager.get_cache": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.cache": {"tf": 1.7320508075688772}, "phml.components.ComponentManager.parse": {"tf": 1.7320508075688772}, "phml.components.ComponentManager.add": {"tf": 6.324555320336759}, "phml.components.ComponentManager.keys": {"tf": 1.7320508075688772}, "phml.components.ComponentManager.values": {"tf": 1.7320508075688772}, "phml.components.ComponentManager.remove": {"tf": 1.7320508075688772}, "phml.components.ComponentManager.validate": {"tf": 1.7320508075688772}, "phml.components.tokenize_name": {"tf": 6.244997998398398}, "phml.core": {"tf": 1.7320508075688772}, "phml.core.HypertextManager": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.__init__": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.parser": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.compiler": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.components": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.context": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.open": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.add_module": {"tf": 9.486832980505138}, "phml.core.HypertextManager.remove_module": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.ast": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.load": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.parse": {"tf": 3.4641016151377544}, "phml.core.HypertextManager.format": {"tf": 7.3484692283495345}, "phml.core.HypertextManager.compile": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.render": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.write": {"tf": 4.58257569495584}, "phml.core.HypertextManager.add": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.remove": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.expose": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.redact": {"tf": 1.7320508075688772}, "phml.embedded": {"tf": 1.7320508075688772}, "phml.embedded.EmbeddedTryCatch": {"tf": 1.7320508075688772}, "phml.embedded.EmbeddedTryCatch.__init__": {"tf": 1.7320508075688772}, "phml.embedded.EmbeddedPythonException": {"tf": 1.7320508075688772}, "phml.embedded.EmbeddedPythonException.__init__": {"tf": 1.7320508075688772}, "phml.embedded.EmbeddedPythonException.format_line": {"tf": 1.7320508075688772}, "phml.embedded.EmbeddedPythonException.generate_exception_lines": {"tf": 1.7320508075688772}, "phml.embedded.parse_import_values": {"tf": 1.7320508075688772}, "phml.embedded.ImportStruct": {"tf": 1.7320508075688772}, "phml.embedded.ImportStruct.values": {"tf": 1.7320508075688772}, "phml.embedded.Module": {"tf": 1.7320508075688772}, "phml.embedded.Module.__init__": {"tf": 1.7320508075688772}, "phml.embedded.Module.collect": {"tf": 1.7320508075688772}, "phml.embedded.EmbeddedImport": {"tf": 1.7320508075688772}, "phml.embedded.EmbeddedImport.__init__": {"tf": 1.7320508075688772}, "phml.embedded.EmbeddedImport.module": {"tf": 1.7320508075688772}, "phml.embedded.EmbeddedImport.objects": {"tf": 1.7320508075688772}, "phml.embedded.EmbeddedImport.data": {"tf": 1.7320508075688772}, "phml.embedded.Embedded": {"tf": 1.7320508075688772}, "phml.embedded.Embedded.__init__": {"tf": 1.7320508075688772}, "phml.embedded.Embedded.context": {"tf": 1.7320508075688772}, "phml.embedded.Embedded.imports": {"tf": 1.7320508075688772}, "phml.embedded.Embedded.split_contexts": {"tf": 1.7320508075688772}, "phml.embedded.Embedded.parse_data": {"tf": 1.7320508075688772}, "phml.embedded.update_ast_node_pos": {"tf": 1.7320508075688772}, "phml.embedded.exec_embedded": {"tf": 6.164414002968976}, "phml.embedded.exec_embedded_blocks": {"tf": 6.48074069840786}, "phml.embedded.built_in": {"tf": 1.7320508075688772}, "phml.helpers": {"tf": 1.7320508075688772}, "phml.helpers.build_recursive_context": {"tf": 1.7320508075688772}, "phml.helpers.iterate_nodes": {"tf": 1.7320508075688772}, "phml.helpers.calc_offset": {"tf": 1.7320508075688772}, "phml.helpers.strip_blank_lines": {"tf": 1.7320508075688772}, "phml.helpers.normalize_indent": {"tf": 5.291502622129181}, "phml.helpers.PHMLTryCatch": {"tf": 1.7320508075688772}, "phml.helpers.PHMLTryCatch.__init__": {"tf": 1.7320508075688772}, "phml.nodes": {"tf": 1.7320508075688772}, "phml.nodes.Missing": {"tf": 1.7320508075688772}, "phml.nodes.Missing.__init__": {"tf": 1.7320508075688772}, "phml.nodes.p_code": {"tf": 1.7320508075688772}, "phml.nodes.LiteralType": {"tf": 1.4142135623730951}, "phml.nodes.LiteralType.From": {"tf": 1.7320508075688772}, "phml.nodes.NodeType": {"tf": 1.4142135623730951}, "phml.nodes.Point": {"tf": 2.449489742783178}, "phml.nodes.Point.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Point.from_dict": {"tf": 1.7320508075688772}, "phml.nodes.Position": {"tf": 5.477225575051661}, "phml.nodes.Position.__init__": {"tf": 5}, "phml.nodes.Position.from_pos": {"tf": 1.7320508075688772}, "phml.nodes.Position.from_dict": {"tf": 1.7320508075688772}, "phml.nodes.Position.as_dict": {"tf": 1.7320508075688772}, "phml.nodes.Node": {"tf": 1.7320508075688772}, "phml.nodes.Node.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Node.as_dict": {"tf": 1.7320508075688772}, "phml.nodes.Node.from_dict": {"tf": 1.7320508075688772}, "phml.nodes.Node.position": {"tf": 2.23606797749979}, "phml.nodes.Node.type": {"tf": 1.7320508075688772}, "phml.nodes.Node.pos_as_str": {"tf": 1.7320508075688772}, "phml.nodes.Parent": {"tf": 1.7320508075688772}, "phml.nodes.Parent.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Parent.pop": {"tf": 1.4142135623730951}, "phml.nodes.Parent.index": {"tf": 1.7320508075688772}, "phml.nodes.Parent.append": {"tf": 1.7320508075688772}, "phml.nodes.Parent.extend": {"tf": 1.7320508075688772}, "phml.nodes.Parent.insert": {"tf": 1.7320508075688772}, "phml.nodes.Parent.remove": {"tf": 1.7320508075688772}, "phml.nodes.Parent.len_as_str": {"tf": 1.7320508075688772}, "phml.nodes.Parent.as_dict": {"tf": 1.7320508075688772}, "phml.nodes.AST": {"tf": 1.7320508075688772}, "phml.nodes.AST.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Element": {"tf": 1.7320508075688772}, "phml.nodes.Element.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Element.as_dict": {"tf": 1.7320508075688772}, "phml.nodes.Element.from_dict": {"tf": 1.7320508075688772}, "phml.nodes.Element.tag_path": {"tf": 1.7320508075688772}, "phml.nodes.Element.pop": {"tf": 1.7320508075688772}, "phml.nodes.Element.get": {"tf": 5.916079783099616}, "phml.nodes.Element.attrs_as_str": {"tf": 1.4142135623730951}, "phml.nodes.Literal": {"tf": 1.7320508075688772}, "phml.nodes.Literal.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Literal.as_dict": {"tf": 1.7320508075688772}, "phml.nodes.Literal.is_text": {"tf": 1.7320508075688772}, "phml.nodes.Literal.is_comment": {"tf": 1.7320508075688772}, "phml.nodes.inspect": {"tf": 6}, "phml.parser": {"tf": 1.7320508075688772}, "phml.parser.strip": {"tf": 2.23606797749979}, "phml.parser.RE": {"tf": 1.7320508075688772}, "phml.parser.RE.__init__": {"tf": 1.7320508075688772}, "phml.parser.RE.tag_start": {"tf": 2.23606797749979}, "phml.parser.RE.tag_end": {"tf": 2.8284271247461903}, "phml.parser.RE.comment": {"tf": 2.8284271247461903}, "phml.parser.RE.attribute": {"tf": 2.449489742783178}, "phml.parser.HypertextMarkupParser": {"tf": 1.7320508075688772}, "phml.parser.HypertextMarkupParser.__init__": {"tf": 1.7320508075688772}, "phml.parser.HypertextMarkupParser.tag_stack": {"tf": 1.7320508075688772}, "phml.parser.HypertextMarkupParser.in_pre": {"tf": 1.7320508075688772}, "phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1.7320508075688772}, "phml.parser.HypertextMarkupParser.parse": {"tf": 4.898979485566356}, "phml.utilities": {"tf": 2.23606797749979}, "phml.utilities.locate": {"tf": 2.23606797749979}, "phml.utilities.locate.find": {"tf": 2.23606797749979}, "phml.utilities.locate.find.ancestor": {"tf": 5.291502622129181}, "phml.utilities.locate.find.find": {"tf": 5.744562646538029}, "phml.utilities.locate.find.find_all": {"tf": 5.5677643628300215}, "phml.utilities.locate.find.find_after": {"tf": 5.477225575051661}, "phml.utilities.locate.find.find_all_after": {"tf": 5.477225575051661}, "phml.utilities.locate.find.find_all_before": {"tf": 5.477225575051661}, "phml.utilities.locate.find.find_before": {"tf": 5.477225575051661}, "phml.utilities.locate.find.find_all_between": {"tf": 6.48074069840786}, "phml.utilities.locate.index": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index": {"tf": 2.449489742783178}, "phml.utilities.locate.index.Index.__init__": {"tf": 5.916079783099616}, "phml.utilities.locate.index.Index.indexed_tree": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.items": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index.values": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index.keys": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index.add": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index.remove": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index.get": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1.7320508075688772}, "phml.utilities.locate.select": {"tf": 2.23606797749979}, "phml.utilities.locate.select.query": {"tf": 12.649110640673518}, "phml.utilities.locate.select.query_all": {"tf": 12.649110640673518}, "phml.utilities.locate.select.matches": {"tf": 10.677078252031311}, "phml.utilities.locate.select.parse_specifiers": {"tf": 8.18535277187245}, "phml.utilities.misc": {"tf": 2.23606797749979}, "phml.utilities.misc.depth": {"tf": 2.6457513110645907}, "phml.utilities.misc.size": {"tf": 1.7320508075688772}, "phml.utilities.misc.classes": {"tf": 2.23606797749979}, "phml.utilities.misc.classes.classnames": {"tf": 9.219544457292887}, "phml.utilities.misc.classes.ClassList": {"tf": 2.6457513110645907}, "phml.utilities.misc.classes.ClassList.__init__": {"tf": 1.7320508075688772}, "phml.utilities.misc.classes.ClassList.toggle": {"tf": 2.23606797749979}, "phml.utilities.misc.classes.ClassList.add": {"tf": 2.23606797749979}, "phml.utilities.misc.classes.ClassList.replace": {"tf": 2.23606797749979}, "phml.utilities.misc.classes.ClassList.remove": {"tf": 2.23606797749979}, "phml.utilities.misc.classes.ClassList.classes": {"tf": 1.7320508075688772}, "phml.utilities.misc.heading": {"tf": 1.7320508075688772}, "phml.utilities.misc.heading.heading_rank": {"tf": 3.872983346207417}, "phml.utilities.transform": {"tf": 2.23606797749979}, "phml.utilities.transform.extract": {"tf": 1.7320508075688772}, "phml.utilities.transform.extract.to_string": {"tf": 5}, "phml.utilities.transform.sanitize": {"tf": 2.23606797749979}, "phml.utilities.transform.sanitize.sanatize": {"tf": 6.708203932499369}, "phml.utilities.transform.sanitize.Schema": {"tf": 4.795831523312719}, "phml.utilities.transform.sanitize.Schema.__init__": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 7.681145747868608}, "phml.utilities.transform.sanitize.recurse_check_attributes": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.recurse_check_required": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.recurse_strip": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.recurse_check_tag": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.recurse_check_ancestor": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform": {"tf": 2.23606797749979}, "phml.utilities.transform.transform.filter_nodes": {"tf": 5.656854249492381}, "phml.utilities.transform.transform.remove_nodes": {"tf": 4.898979485566356}, "phml.utilities.transform.transform.map_nodes": {"tf": 10.770329614269007}, "phml.utilities.transform.transform.find_and_replace": {"tf": 2.449489742783178}, "phml.utilities.transform.transform.shift_heading": {"tf": 2.449489742783178}, "phml.utilities.transform.transform.replace_node": {"tf": 5.385164807134504}, "phml.utilities.transform.transform.modify_children": {"tf": 4.242640687119285}, "phml.utilities.travel": {"tf": 1.7320508075688772}, "phml.utilities.travel.travel": {"tf": 2.23606797749979}, "phml.utilities.travel.travel.path": {"tf": 5.196152422706632}, "phml.utilities.travel.travel.path_names": {"tf": 5.196152422706632}, "phml.utilities.travel.travel.walk": {"tf": 1.7320508075688772}, "phml.utilities.travel.travel.visit_all_after": {"tf": 1.7320508075688772}, "phml.utilities.validate": {"tf": 2.23606797749979}, "phml.utilities.validate.check": {"tf": 2.23606797749979}, "phml.utilities.validate.check.check": {"tf": 8.48528137423857}, "phml.utilities.validate.validate": {"tf": 1.7320508075688772}, "phml.utilities.validate.validate.validate": {"tf": 1.7320508075688772}, "phml.utilities.validate.validate.generated": {"tf": 4.898979485566356}, "phml.utilities.validate.validate.is_heading": {"tf": 1.7320508075688772}, "phml.utilities.validate.validate.is_css_link": {"tf": 5.5677643628300215}, "phml.utilities.validate.validate.is_css_style": {"tf": 5.0990195135927845}, "phml.utilities.validate.validate.is_javascript": {"tf": 4.69041575982343}, "phml.utilities.validate.validate.is_element": {"tf": 2.449489742783178}, "phml.utilities.validate.validate.is_embedded": {"tf": 6.082762530298219}, "phml.utilities.validate.validate.is_interactive": {"tf": 5.656854249492381}, "phml.utilities.validate.validate.is_phrasing": {"tf": 5.656854249492381}, "phml.utilities.validate.validate.is_event_handler": {"tf": 2.6457513110645907}, "phml.utilities.validate.validate.blank": {"tf": 4.795831523312719}}, "df": 228, "p": {"docs": {"phml": {"tf": 4.898979485566356}}, "df": 1, "y": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1.4142135623730951}}, "df": 1, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 7}, "phml.core.HypertextManager.add_module": {"tf": 2.6457513110645907}, "phml.core.HypertextManager.compile": {"tf": 1.4142135623730951}, "phml.embedded": {"tf": 1}, "phml.embedded.EmbeddedTryCatch": {"tf": 1}, "phml.embedded.Embedded": {"tf": 1}, "phml.embedded.Embedded.context": {"tf": 1}, "phml.embedded.Embedded.imports": {"tf": 1}, "phml.embedded.update_ast_node_pos": {"tf": 1.4142135623730951}, "phml.embedded.exec_embedded": {"tf": 2.449489742783178}, "phml.embedded.exec_embedded_blocks": {"tf": 2.23606797749979}, "phml.nodes.p_code": {"tf": 1}}, "df": 12, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "c": {"docs": {"phml.parser": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}}, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 6.4031242374328485}, "phml.Version": {"tf": 1}, "phml.builder": {"tf": 1}, "phml.builder.p": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.core.HypertextManager.parser": {"tf": 1}, "phml.core.HypertextManager.compiler": {"tf": 1}, "phml.core.HypertextManager.components": {"tf": 1}, "phml.core.HypertextManager.context": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.add_module": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.parse": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.format": {"tf": 2.23606797749979}, "phml.core.HypertextManager.compile": {"tf": 1}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.helpers.PHMLTryCatch": {"tf": 1}, "phml.nodes.p_code": {"tf": 1}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.AST": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Literal": {"tf": 1}, "phml.parser": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 2}, "phml.utilities": {"tf": 1.4142135623730951}, "phml.utilities.locate.find": {"tf": 1}, "phml.utilities.misc": {"tf": 1}, "phml.utilities.transform.sanitize": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema": {"tf": 1}, "phml.utilities.transform.transform": {"tf": 1}, "phml.utilities.validate.check": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 35, "[": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 2}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}, "phml.components.ComponentManager.generate_name": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.449489742783178}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.embedded.EmbeddedTryCatch": {"tf": 1}, "phml.parser.HypertextMarkupParser": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1.4142135623730951}}, "df": 7, "r": {"docs": {"phml": {"tf": 2}, "phml.core.HypertextManager.parser": {"tf": 1}, "phml.core.HypertextManager.components": {"tf": 1}, "phml.parser": {"tf": 1}}, "df": 4}, "d": {"docs": {"phml": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.ast": {"tf": 1}, "phml.nodes.Position": {"tf": 1.4142135623730951}, "phml.nodes.Node.position": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}}, "df": 6}, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}, "phml.core.HypertextManager.load": {"tf": 1}, "phml.embedded.Embedded": {"tf": 1}, "phml.nodes.Position": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.compiler.comp_step": {"tf": 2}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 2}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.map_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 2.449489742783178}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 16}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.components.ComponentManager.generate_name": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.add": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.add_module": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.format": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.write": {"tf": 1.4142135623730951}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}}, "df": 8, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "s": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 2}, "phml.compiler.comp_step": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.compiler.comp_step": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1.7320508075688772}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.utilities.misc.depth": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1.4142135623730951}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 8}, "s": {"docs": {"phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_element": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.transform.transform.filter_nodes": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1}, "phml.components.tokenize_name": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"phml.embedded.EmbeddedImport.module": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.locate.index.Index": {"tf": 1}, "phml.utilities.locate.index.Index.items": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.parser.strip": {"tf": 1}, "phml.parser.HypertextMarkupParser.in_pre": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.Position": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 2}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 4}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 2}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 5}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.add": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 1}, "s": {"docs": {"phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml.compiler.comp_step": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.helpers.PHMLTryCatch": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.7320508075688772}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.locate.find.find_before": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.embedded": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}}, "df": 2, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}, "d": {"docs": {"phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.embedded.ImportStruct.values": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 2.449489742783178}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "y": {"docs": {"phml.utilities.transform.sanitize.Schema": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1.4142135623730951}}, "df": 2}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.transform.sanitize.Schema": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.transform.sanitize.Schema": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1.4142135623730951}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.utilities.transform.sanitize.Schema": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1}, "phml.nodes.Position": {"tf": 2}, "phml.nodes.Position.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Position.from_pos": {"tf": 1.4142135623730951}, "phml.nodes.Position.as_dict": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Node.pos_as_str": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 1.7320508075688772}}, "df": 8, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.Position": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml.parser.strip": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Position": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 2}, "phml.utilities.transform.transform.replace_node": {"tf": 1}}, "df": 3}}}, "p": {"docs": {"phml.nodes.Parent.pop": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.Point": {"tf": 1}, "phml.nodes.Position": {"tf": 1.4142135623730951}, "phml.utilities.misc": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 5, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.Position": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "p": {"3": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.Version": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}}, "df": 3}}}, "h": {"2": {"docs": {"phml.utilities.misc.heading.heading_rank": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.parser": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 2.449489742783178}}, "df": 1}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes.ClassList": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 3.3166247903554}, "phml.core.HypertextManager.compiler": {"tf": 1}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.parser.RE.comment": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 8, "/": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"phml.parser.HypertextMarkupParser": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.ast": {"tf": 1}, "phml.embedded": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1.7320508075688772}}, "df": 10, "t": {"docs": {"phml.utilities.misc.classes.ClassList": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 2}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.core.HypertextManager.add_module": {"tf": 1.4142135623730951}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.utilities.locate.index.Index": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.misc": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 1}}, "df": 9}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.helpers.PHMLTryCatch": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"phml": {"tf": 3}}, "df": 1}}, "p": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1}, "phml.utilities.misc": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2}, "phml.core.HypertextManager.add_module": {"tf": 1.7320508075688772}, "phml.helpers.PHMLTryCatch": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.misc.heading": {"tf": 1}, "phml.utilities.misc.heading.heading_rank": {"tf": 1}, "phml.utilities.transform.transform.shift_heading": {"tf": 1}, "phml.utilities.validate.validate.is_heading": {"tf": 1}}, "df": 4}}}}}, "p": {"docs": {"phml.utilities.travel.travel": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.Schema": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.core.HypertextManager.context": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.validate.validate.is_interactive": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1.4142135623730951}}, "df": 1, "u": {"docs": {}, "df": 0, "p": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.parser": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 4.358898943540674}}, "df": 1, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.builder": {"tf": 1}, "phml.components.tokenize_name": {"tf": 1}}, "df": 3, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"phml": {"tf": 2}, "phml.compiler.comp_step": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.matches": {"tf": 1.4142135623730951}}, "df": 5}, "n": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}, "phml.utilities.locate.find": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.compiler.comp_step": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.add": {"tf": 2}, "phml.components.ComponentManager.remove": {"tf": 1}, "phml.core.HypertextManager.components": {"tf": 1}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.core.HypertextManager.remove": {"tf": 1}, "phml.embedded.EmbeddedTryCatch": {"tf": 1}, "phml.helpers.PHMLTryCatch": {"tf": 1}}, "df": 9}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.transform.transform": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"phml.utilities.misc.classes.ClassList": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.Version": {"tf": 1.4142135623730951}}, "df": 1}}}, "p": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1.4142135623730951}}, "df": 1, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.embedded.EmbeddedImport.data": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"phml.utilities.transform.transform.map_nodes": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.parser.RE.tag_start": {"tf": 1}, "phml.parser.RE.tag_end": {"tf": 1}, "phml.parser.RE.comment": {"tf": 1}, "phml.parser.RE.attribute": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 2.6457513110645907}, "phml.utilities.locate.select.query_all": {"tf": 2.6457513110645907}, "phml.utilities.locate.select.matches": {"tf": 2.6457513110645907}, "phml.utilities.validate.validate.is_element": {"tf": 1}}, "df": 10}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}}, "df": 4}}}}}, "h": {"docs": {"phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "l": {"docs": {"phml.utilities.validate.validate.is_embedded": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 2}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.nodes.LiteralType": {"tf": 1}, "phml.nodes.NodeType": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}}, "df": 8}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.embedded.Module.collect": {"tf": 1}, "phml.nodes.Position": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.inspect": {"tf": 1}, "phml.parser.strip": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.compiler.comp_step": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.compiler.comp_step": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.locate.index.Index": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.core.HypertextManager.context": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.utilities.misc.classes.ClassList.add": {"tf": 1}, "phml.utilities.misc.classes.ClassList.remove": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1}}, "df": 7}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.builder": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 4.58257569495584}, "phml.embedded.Embedded.imports": {"tf": 1}}, "df": 3, "s": {"docs": {"phml": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 2.23606797749979}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.transform.transform.modify_children": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.transform.transform.filter_nodes": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 3.7416573867739413}, "phml.embedded.EmbeddedTryCatch": {"tf": 1.4142135623730951}, "phml.helpers.PHMLTryCatch": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.utilities.misc.depth": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"phml": {"tf": 1}, "phml.utilities.locate.find": {"tf": 1}, "phml.utilities.transform.transform": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.LiteralType": {"tf": 1}, "phml.nodes.NodeType": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.locate.find.find_all_between": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.Version": {"tf": 1.7320508075688772}}, "df": 1}}, "d": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.Version": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {"phml.utilities.misc": {"tf": 1}, "phml.utilities.misc.classes": {"tf": 1}}, "df": 2}}}, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.6457513110645907}, "phml.parser": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.embedded.exec_embedded": {"tf": 1.7320508075688772}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {"phml": {"tf": 3.1622776601683795}, "phml.utilities.locate.select.query": {"tf": 2.23606797749979}, "phml.utilities.locate.select.query_all": {"tf": 2.23606797749979}, "phml.utilities.locate.select.matches": {"tf": 2.23606797749979}}, "df": 4, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 3.3166247903554}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.parser.HypertextMarkupParser": {"tf": 1}}, "df": 3, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.helpers.calc_offset": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1}, "phml.nodes.Point": {"tf": 1.4142135623730951}, "phml.nodes.Position": {"tf": 1}}, "df": 6, "s": {"docs": {"phml.core.HypertextManager.format": {"tf": 1}, "phml.helpers.strip_blank_lines": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.parser.strip": {"tf": 1}}, "df": 5}, "n": {"docs": {}, "df": 0, "o": {"docs": {"phml.embedded.update_ast_node_pos": {"tf": 1.4142135623730951}}, "df": 1}}}, "k": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_css_link": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 3, "s": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}}, "df": 2, "[": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}, "phml.components.tokenize_name": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.helpers.strip_blank_lines": {"tf": 1}, "phml.nodes.Parent.extend": {"tf": 1}, "phml.nodes.Element.tag_path": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.misc.classes.ClassList": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.Schema": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1.4142135623730951}, "phml.utilities.travel.travel.path_names": {"tf": 1.4142135623730951}, "phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1.4142135623730951}}, "df": 22, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"phml.components.tokenize_name": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.utilities.transform.sanitize.Schema": {"tf": 2}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 2.449489742783178}, "phml.utilities.travel.travel.path_names": {"tf": 1}}, "df": 5}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}}, "df": 6}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.locate.select.query_all": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.validate.check.check": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"phml.nodes.Node.type": {"tf": 1}}, "df": 1, "l": {"docs": {"phml.nodes.Literal.is_text": {"tf": 1}, "phml.nodes.Literal.is_comment": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}}, "df": 3}}}}}, "#": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.7320508075688772}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1}}, "df": 1, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.utilities.travel.travel.walk": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.helpers.calc_offset": {"tf": 1}, "phml.parser.strip": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1.4142135623730951}, "phml.utilities.travel.travel.path_names": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.utilities.validate.validate.is_event_handler": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"phml": {"tf": 2}, "phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 2, "s": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}, "p": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"phml": {"tf": 1}, "phml.embedded": {"tf": 1}, "phml.embedded.Embedded": {"tf": 1}, "phml.utilities.transform.sanitize": {"tf": 1}, "phml.utilities.validate.check": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 2}}, "df": 1, "s": {"docs": {"phml.core.HypertextManager.load": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.tokenize_name": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}}, "df": 3, "s": {"docs": {"phml.embedded.Embedded": {"tf": 1}, "phml.embedded.Embedded.context": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.core.HypertextManager.format": {"tf": 1}, "phml.nodes.Position": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"phml.utilities.locate.find": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"phml": {"tf": 9.695359714832659}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 2.449489742783178}, "phml.parser.RE.tag_start": {"tf": 1.7320508075688772}, "phml.parser.RE.comment": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1}}, "df": 8}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.Version": {"tf": 1.4142135623730951}}, "df": 2}}}}, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.core.HypertextManager.redact": {"tf": 1}}, "df": 2, "s": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.context": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.expose": {"tf": 1.4142135623730951}, "phml.embedded.Embedded.context": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}}, "df": 6}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.6457513110645907}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.embedded.EmbeddedImport.data": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 2}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1.4142135623730951}, "phml.nodes.Element.get": {"tf": 1}, "phml.parser.RE.attribute": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index": {"tf": 1}, "phml.utilities.locate.index.Index.items": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 3.605551275463989}, "phml.utilities.locate.select.query_all": {"tf": 3.605551275463989}, "phml.utilities.locate.select.matches": {"tf": 3.605551275463989}, "phml.utilities.locate.select.parse_specifiers": {"tf": 3.605551275463989}, "phml.utilities.transform.sanitize.Schema": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.shift_heading": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 2.23606797749979}}, "df": 20, "s": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.embedded.ImportStruct.values": {"tf": 1.4142135623730951}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.utilities.locate.index.Index.values": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1.4142135623730951}, "phml.utilities.validate": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 9}, "|": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"phml.parser.RE.attribute": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.locate.index.Index": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1.4142135623730951}, "phml.utilities.validate.check.check": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_javascript": {"tf": 1.4142135623730951}}, "df": 4, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.locate.index.Index.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.misc.classes": {"tf": 1}, "phml.utilities.validate": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"phml.utilities.validate": {"tf": 1}, "phml.utilities.validate.check": {"tf": 1}, "phml.utilities.validate.validate.validate": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"phml.embedded.ImportStruct.values": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {"phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {"phml": {"tf": 7.483314773547883}, "phml.Version": {"tf": 2}, "phml.builder": {"tf": 1}, "phml.compiler.comp_step": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.components.ComponentManager.cache": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.add": {"tf": 2}, "phml.components.ComponentManager.remove": {"tf": 1.4142135623730951}, "phml.components.tokenize_name": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 2.449489742783178}, "phml.core.HypertextManager.load": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.format": {"tf": 2.449489742783178}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.core.HypertextManager.remove": {"tf": 1}, "phml.embedded.EmbeddedTryCatch": {"tf": 1.4142135623730951}, "phml.embedded.ImportStruct.values": {"tf": 1}, "phml.embedded.Module.collect": {"tf": 1}, "phml.embedded.EmbeddedImport.data": {"tf": 1}, "phml.embedded.update_ast_node_pos": {"tf": 1.4142135623730951}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.helpers.strip_blank_lines": {"tf": 1}, "phml.nodes.Point": {"tf": 2.6457513110645907}, "phml.nodes.Position": {"tf": 1.7320508075688772}, "phml.nodes.Position.from_pos": {"tf": 1}, "phml.nodes.Position.as_dict": {"tf": 1}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Node.pos_as_str": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.Parent.pop": {"tf": 1}, "phml.nodes.Parent.index": {"tf": 1}, "phml.nodes.Parent.append": {"tf": 1}, "phml.nodes.Parent.extend": {"tf": 1}, "phml.nodes.Parent.insert": {"tf": 1.4142135623730951}, "phml.nodes.Parent.remove": {"tf": 1}, "phml.nodes.AST": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1.4142135623730951}, "phml.nodes.Element.get": {"tf": 1.4142135623730951}, "phml.nodes.Element.attrs_as_str": {"tf": 1}, "phml.nodes.Literal": {"tf": 1}, "phml.nodes.Literal.is_text": {"tf": 1.7320508075688772}, "phml.nodes.Literal.is_comment": {"tf": 1.7320508075688772}, "phml.nodes.inspect": {"tf": 1.7320508075688772}, "phml.parser.strip": {"tf": 1.4142135623730951}, "phml.parser.RE.tag_start": {"tf": 1}, "phml.parser.RE.tag_end": {"tf": 1}, "phml.parser.RE.attribute": {"tf": 1}, "phml.parser.HypertextMarkupParser.in_pre": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1.4142135623730951}, "phml.utilities": {"tf": 1.4142135623730951}, "phml.utilities.locate.find": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.index.Index": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.__init__": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index.get": {"tf": 1}, "phml.utilities.locate.select": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1.7320508075688772}, "phml.utilities.locate.select.query_all": {"tf": 1.7320508075688772}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.misc": {"tf": 1}, "phml.utilities.misc.depth": {"tf": 1}, "phml.utilities.misc.classes": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 3.1622776601683795}, "phml.utilities.misc.classes.ClassList": {"tf": 1}, "phml.utilities.misc.classes.ClassList.toggle": {"tf": 1}, "phml.utilities.misc.classes.ClassList.replace": {"tf": 1}, "phml.utilities.transform": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.map_nodes": {"tf": 2.449489742783178}, "phml.utilities.transform.transform.find_and_replace": {"tf": 2.449489742783178}, "phml.utilities.transform.transform.replace_node": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.modify_children": {"tf": 1.7320508075688772}, "phml.utilities.travel.travel.path": {"tf": 1.7320508075688772}, "phml.utilities.travel.travel.path_names": {"tf": 1.7320508075688772}, "phml.utilities.validate": {"tf": 1.4142135623730951}, "phml.utilities.validate.check": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.validate": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 2.23606797749979}, "phml.utilities.validate.validate.is_heading": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 2}, "phml.utilities.validate.validate.is_css_style": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_javascript": {"tf": 2}, "phml.utilities.validate.validate.is_element": {"tf": 1.7320508075688772}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 2}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1}}, "df": 96, "s": {"docs": {"phml": {"tf": 4.242640687119285}, "phml.builder": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.nodes.Node.pos_as_str": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}, "phml.utilities.travel.travel.walk": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1.4142135623730951}}, "df": 18, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}}, "df": 2, "s": {"docs": {"phml.components.tokenize_name": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"phml.embedded.update_ast_node_pos": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.components.ComponentManager.add": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1.4142135623730951}}, "df": 2}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.embedded.exec_embedded": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.core.HypertextManager.render": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"phml": {"tf": 2}, "phml.builder": {"tf": 1}, "phml.core.HypertextManager.ast": {"tf": 1}, "phml.core.HypertextManager.load": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.core.HypertextManager.compile": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.embedded.update_ast_node_pos": {"tf": 1.4142135623730951}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1.7320508075688772}, "phml.utilities": {"tf": 1.4142135623730951}, "phml.utilities.locate": {"tf": 1}, "phml.utilities.misc.depth": {"tf": 1}, "phml.utilities.transform": {"tf": 1}, "phml.utilities.transform.sanitize": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.transform": {"tf": 1}, "phml.utilities.travel.travel": {"tf": 1}, "phml.utilities.validate": {"tf": 1}}, "df": 19, "r": {"docs": {}, "df": 0, "o": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 2.8284271247461903}, "phml.Version": {"tf": 1.7320508075688772}, "phml.components.tokenize_name": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1.4142135623730951}, "phml.embedded": {"tf": 1}, "phml.embedded.EmbeddedPythonException": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1}, "phml.nodes.Element.tag_path": {"tf": 1}, "phml.parser.RE.comment": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_before": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.items": {"tf": 1}, "phml.utilities.locate.index.Index.values": {"tf": 1}, "phml.utilities.locate.index.Index.keys": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1.7320508075688772}}, "df": 21, "o": {"docs": {}, "df": 0, "w": {"docs": {"phml": {"tf": 1}, "phml.utilities": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.transform.sanitize.Schema": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 5}}, "s": {"docs": {"phml.utilities.validate.check": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"phml.compiler.comp_step": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}}, "df": 4}, "g": {"docs": {"phml": {"tf": 1.7320508075688772}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"phml": {"tf": 2.449489742783178}, "phml.compiler.comp_step": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.nodes.LiteralType": {"tf": 1}, "phml.nodes.NodeType": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.add": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 4}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"phml.Version": {"tf": 1.7320508075688772}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}, "phml.embedded.Module": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.embedded.EmbeddedImport.data": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"phml.helpers.PHMLTryCatch": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"phml": {"tf": 4.123105625617661}, "phml.components.ComponentManager.add": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.render": {"tf": 1.4142135623730951}, "phml.embedded.ImportStruct.values": {"tf": 1}, "phml.embedded.EmbeddedImport": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.helpers.PHMLTryCatch": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.utilities.locate": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query": {"tf": 2}, "phml.utilities.locate.select.query_all": {"tf": 2}, "phml.utilities.locate.select.matches": {"tf": 2.6457513110645907}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1.7320508075688772}, "phml.utilities.transform": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}, "phml.utilities.travel.travel": {"tf": 1}, "phml.utilities.travel.travel.walk": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate.is_heading": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_css_style": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_javascript": {"tf": 1}, "phml.utilities.validate.validate.is_embedded": {"tf": 1.4142135623730951}}, "df": 28, "d": {"docs": {"phml": {"tf": 5.656854249492381}, "phml.Version": {"tf": 1}, "phml.builder": {"tf": 1}, "phml.compiler.comp_step": {"tf": 2}, "phml.components.ComponentManager.get_cache": {"tf": 1}, "phml.components.ComponentManager.cache": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.core.HypertextManager.components": {"tf": 1}, "phml.core.HypertextManager.context": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 2.449489742783178}, "phml.core.HypertextManager.load": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 2}, "phml.core.HypertextManager.compile": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.embedded": {"tf": 1}, "phml.embedded.EmbeddedTryCatch": {"tf": 1}, "phml.embedded.Module.collect": {"tf": 1}, "phml.embedded.Embedded": {"tf": 1.4142135623730951}, "phml.embedded.Embedded.context": {"tf": 1}, "phml.embedded.update_ast_node_pos": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.helpers.iterate_nodes": {"tf": 1}, "phml.helpers.strip_blank_lines": {"tf": 1}, "phml.helpers.PHMLTryCatch": {"tf": 1}, "phml.nodes.LiteralType": {"tf": 1}, "phml.nodes.NodeType": {"tf": 1}, "phml.nodes.Position": {"tf": 1.4142135623730951}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.AST": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Literal": {"tf": 1}, "phml.nodes.Literal.is_text": {"tf": 1}, "phml.nodes.Literal.is_comment": {"tf": 1}, "phml.nodes.inspect": {"tf": 1.4142135623730951}, "phml.parser.strip": {"tf": 1.4142135623730951}, "phml.utilities": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.index.Index": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.misc.depth": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.Schema": {"tf": 2}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 2}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.shift_heading": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1}, "phml.utilities.travel.travel.walk": {"tf": 1}, "phml.utilities.validate": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 2}, "phml.utilities.validate.validate.validate": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.blank": {"tf": 1.7320508075688772}}, "df": 63, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {"phml": {"tf": 2.449489742783178}, "phml.compiler.comp_step": {"tf": 1.4142135623730951}, "phml.embedded.exec_embedded": {"tf": 1.4142135623730951}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.nodes.inspect": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1.7320508075688772}, "phml.utilities.locate.select.query_all": {"tf": 1.7320508075688772}, "phml.utilities.locate.select.matches": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}, "phml.utilities.validate": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1.4142135623730951}}, "df": 14, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.Position.from_pos": {"tf": 1}, "phml.utilities.misc.classes.ClassList.replace": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {"phml.nodes.inspect": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.locate.find.ancestor": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}}, "df": 3}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Parent.append": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1}, "phml.utilities.validate": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1.4142135623730951}}, "df": 10}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.locate.find.find_before": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}, "phml.utilities.transform.transform.shift_heading": {"tf": 1}}, "df": 4}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 4.795831523312719}, "phml.compiler.comp_step": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 2}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.embedded.EmbeddedImport.module": {"tf": 1}, "phml.embedded.Embedded.imports": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.nodes.LiteralType": {"tf": 1}, "phml.nodes.NodeType": {"tf": 1}, "phml.parser.HypertextMarkupParser.tag_stack": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.index.Index": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1.7320508075688772}, "phml.utilities.locate.select.query_all": {"tf": 1.7320508075688772}, "phml.utilities.locate.select.matches": {"tf": 1.4142135623730951}, "phml.utilities.misc.depth": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1.4142135623730951}}, "df": 22, "a": {"docs": {"phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "g": {"docs": {"phml.compiler.comp_step": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"phml.compiler.comp_step": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.components.tokenize_name": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.nodes.inspect": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.transform.extract.to_string": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 36}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.transform.map_nodes": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.compiler.comp_step": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.embedded.EmbeddedTryCatch": {"tf": 1}, "phml.helpers.PHMLTryCatch": {"tf": 1}, "phml.utilities.locate": {"tf": 1}, "phml.utilities.locate.select": {"tf": 1}, "phml.utilities.transform": {"tf": 1}, "phml.utilities.transform.transform": {"tf": 1}, "phml.utilities.validate": {"tf": 1}}, "df": 7}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "t": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.helpers.strip_blank_lines": {"tf": 1}, "phml.nodes.Position": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.misc.depth": {"tf": 1}, "phml.utilities.travel.travel.visit_all_after": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "r": {"docs": {"phml.parser.RE.attribute": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 4.242640687119285}, "phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Element.get": {"tf": 2}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 4.123105625617661}, "phml.utilities.locate.select.query_all": {"tf": 4.123105625617661}, "phml.utilities.locate.select.matches": {"tf": 4}, "phml.utilities.locate.select.parse_specifiers": {"tf": 3.872983346207417}, "phml.utilities.validate.validate.is_interactive": {"tf": 2.23606797749979}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1}}, "df": 11, "s": {"docs": {"phml": {"tf": 3.1622776601683795}, "phml.core.HypertextManager.compile": {"tf": 1}, "phml.embedded": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Element.attrs_as_str": {"tf": 1}, "phml.parser.RE.attribute": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate.validate": {"tf": 1}}, "df": 11}}}}}}, "|": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"phml.parser.RE.attribute": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.components.ComponentManager.cache": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1}, "phml.utilities.misc.classes.ClassList.add": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 2}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1.4142135623730951}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1}, "phml.compiler.comp_step": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}}, "df": 4}}}}}}}, "s": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}, "phml.utilities.locate.index.Index.add": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.load": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}}, "df": 10}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml.compiler.comp_step": {"tf": 1}}, "df": 1}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.validate.check": {"tf": 1}}, "df": 4}}}}}}}, "s": {"docs": {"phml": {"tf": 2.6457513110645907}, "phml.builder": {"tf": 1}, "phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1.7320508075688772}, "phml.embedded.ImportStruct.values": {"tf": 1}, "phml.embedded.EmbeddedImport.module": {"tf": 1}, "phml.nodes.inspect": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}, "phml.utilities.misc.depth": {"tf": 1}, "phml.utilities.travel.travel.walk": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 13, "v": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 2.6457513110645907}, "phml.utilities.validate.validate.is_embedded": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 3, "?": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.transform.shift_heading": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"phml.utilities.misc.classes.classnames": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"phml": {"tf": 2.6457513110645907}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.add": {"tf": 1.4142135623730951}, "phml.components.tokenize_name": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query": {"tf": 2}, "phml.utilities.locate.select.query_all": {"tf": 2}, "phml.utilities.locate.select.matches": {"tf": 2}}, "df": 5, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.utilities.misc.heading": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.tokenize_name": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.embedded.update_ast_node_pos": {"tf": 1}, "phml.nodes.Point": {"tf": 2}, "phml.nodes.Position": {"tf": 2.23606797749979}, "phml.parser.HypertextMarkupParser": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 7}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 4.358898943540674}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 2, "s": {"docs": {"phml": {"tf": 2}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}, "phml.helpers.strip_blank_lines": {"tf": 1}, "phml.nodes.Position": {"tf": 2}, "phml.nodes.Position.__init__": {"tf": 1.4142135623730951}, "phml.parser.RE.tag_start": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.__init__": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}}, "df": 15, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.Position.__init__": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.matches": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}, "phml.utilities.travel.travel.visit_all_after": {"tf": 1}}, "df": 13}}}, "s": {"docs": {"phml.utilities.validate.validate.is_event_handler": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"phml.parser.strip": {"tf": 1}, "phml.parser.HypertextMarkupParser.tag_stack": {"tf": 1}}, "df": 2}}, "y": {"docs": {"phml.utilities.transform.transform.filter_nodes": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.validate.validate.is_interactive": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.components.ComponentManager.add": {"tf": 2.23606797749979}, "phml.components.tokenize_name": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.format": {"tf": 2.449489742783178}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1.4142135623730951}, "phml.helpers.normalize_indent": {"tf": 1.4142135623730951}, "phml.nodes.Element.get": {"tf": 1.4142135623730951}, "phml.nodes.Element.attrs_as_str": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes.classnames": {"tf": 1.7320508075688772}, "phml.utilities.transform.extract.to_string": {"tf": 1}, "phml.utilities.transform.sanitize.Schema": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}}, "df": 19, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.render": {"tf": 1.4142135623730951}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.helpers.calc_offset": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1}, "phml.nodes.Node.pos_as_str": {"tf": 1}, "phml.nodes.inspect": {"tf": 1.4142135623730951}, "phml.parser.strip": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes.ClassList.classes": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1.4142135623730951}}, "df": 16, "s": {"docs": {"phml.nodes.LiteralType": {"tf": 1}, "phml.nodes.NodeType": {"tf": 1}, "phml.parser.HypertextMarkupParser": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 4}}}, "p": {"docs": {"phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.helpers.strip_blank_lines": {"tf": 1}, "phml.parser.strip": {"tf": 1}, "phml.utilities.transform.sanitize.Schema": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"phml.parser.strip": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml.utilities.validate.check.check": {"tf": 1}}, "df": 1}}}}}, "|": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"phml.nodes.Element.get": {"tf": 1}}, "df": 1, "|": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Element.get": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.parser.RE.comment": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"phml": {"tf": 1}, "phml.components.ComponentManager.get_cache": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.validate.validate.is_css_link": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}, "d": {"docs": {"phml": {"tf": 1}, "phml.embedded.EmbeddedImport.data": {"tf": 1}, "phml.embedded.Embedded.imports": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.embedded.Embedded": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"phml.compiler.comp_step": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"phml": {"tf": 1.7320508075688772}}, "df": 1}}, "p": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.locate.select.matches": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.embedded.exec_embedded_blocks": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}, "phml.builder": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.validate.check": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "e": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 1, "d": {"docs": {"phml": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"phml": {"tf": 1}, "phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.locate.select": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.misc.classes": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"phml.core.HypertextManager.load": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.transform.transform.find_and_replace": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.validate.check.check": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"phml.utilities.transform.transform.replace_node": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate.is_embedded": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.compiler.comp_step": {"tf": 1}, "phml.core.HypertextManager.context": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.embedded.Embedded.imports": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}}, "df": 6, "d": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.context": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}}, "df": 3}, "s": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.utilities.validate.validate.is_javascript": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 3, "s": {"docs": {"phml.components.ComponentManager.get_cache": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 2.6457513110645907}}, "df": 1, "s": {"docs": {"phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}}, "df": 6}, "p": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Position": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.sanitize": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.Schema": {"tf": 1}}, "df": 3, "d": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.transform.sanitize": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.utilities.transform.extract.to_string": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}}, "df": 8, "s": {"docs": {"phml": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}}, "df": 5}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.embedded.Module.collect": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.transform.map_nodes": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {"phml": {"tf": 2.23606797749979}}, "df": 1}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1.7320508075688772}}, "df": 1}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"phml.nodes.Position": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.compiler.comp_step": {"tf": 1}, "phml.utilities.transform.transform.shift_heading": {"tf": 1}}, "df": 2}, "r": {"docs": {"phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.matches": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"phml.utilities.locate.select.query": {"tf": 1.7320508075688772}, "phml.utilities.locate.select.query_all": {"tf": 1.7320508075688772}, "phml.utilities.locate.select.matches": {"tf": 1.4142135623730951}}, "df": 3}}}, "c": {"docs": {"phml.components.ComponentManager.cache": {"tf": 1}, "phml.components.ComponentManager.remove": {"tf": 1}, "phml.core.HypertextManager.context": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.nodes.Parent.insert": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.utilities.locate.find": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}, "phml.utilities.locate.select": {"tf": 1}, "phml.utilities.transform": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}}, "df": 12}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}}, "df": 3}}, "n": {"docs": {"phml.nodes.Position": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.transform.find_and_replace": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml.Version": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.tokenize_name": {"tf": 1}}, "df": 1}}}}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.locate.index.Index.__init__": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {"phml.utilities.misc.classes.classnames": {"tf": 1.4142135623730951}}, "df": 1, "o": {"docs": {}, "df": 0, "m": {"docs": {"phml": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.misc.classes.ClassList": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "p": {"docs": {"phml": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 5.385164807134504}, "phml.compiler.comp_step": {"tf": 1}, "phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.components.ComponentManager.get_cache": {"tf": 1}, "phml.components.ComponentManager.cache": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.add": {"tf": 3.3166247903554}, "phml.core.HypertextManager.components": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.remove": {"tf": 1.4142135623730951}}, "df": 9, "s": {"docs": {"phml": {"tf": 3.872983346207417}, "phml.compiler.comp_step": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.compile": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.core.HypertextManager.remove": {"tf": 1}}, "df": 5}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.compiler.comp_step": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.add": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.components.ComponentManager.add": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.core.HypertextManager.compile": {"tf": 1}}, "df": 1, "d": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.context": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 4}, "r": {"docs": {"phml": {"tf": 2.449489742783178}, "phml.core.HypertextManager.compiler": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.compiler.comp_step": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"phml.core.HypertextManager.format": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.write": {"tf": 1.4142135623730951}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}}, "df": 3}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.compiler.comp_step": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_before": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.components.ComponentManager.add": {"tf": 1}, "phml.components.ComponentManager.remove": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.embedded.EmbeddedPythonException": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1.7320508075688772}}, "df": 2}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Literal.is_comment": {"tf": 1}, "phml.nodes.inspect": {"tf": 1}, "phml.parser.RE.comment": {"tf": 1}}, "df": 3, "s": {"docs": {"phml.parser.RE.comment": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {"phml.embedded.update_ast_node_pos": {"tf": 1.4142135623730951}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1}, "phml.nodes.inspect": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.embedded.Module.collect": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.Version": {"tf": 1}, "phml.utilities": {"tf": 1}, "phml.utilities.locate": {"tf": 1}, "phml.utilities.locate.find": {"tf": 1}, "phml.utilities.locate.index.Index.indexed_tree": {"tf": 1}, "phml.utilities.locate.index.Index.values": {"tf": 1}, "phml.utilities.locate.index.Index.keys": {"tf": 1}, "phml.utilities.locate.index.Index.add": {"tf": 1}, "phml.utilities.locate.index.Index.remove": {"tf": 1}, "phml.utilities.locate.select": {"tf": 1}, "phml.utilities.misc.classes": {"tf": 1}, "phml.utilities.transform": {"tf": 1}, "phml.utilities.transform.sanitize.Schema": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1.7320508075688772}, "phml.utilities.travel.travel": {"tf": 1}, "phml.utilities.validate": {"tf": 1}}, "df": 17}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Point": {"tf": 1.4142135623730951}, "phml.nodes.Position": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_after": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all_after": {"tf": 2}, "phml.utilities.locate.find.find_all_before": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_before": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all_between": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 2}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.replace_node": {"tf": 1.4142135623730951}, "phml.utilities.validate": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 14, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes.classnames": {"tf": 1}}, "df": 2, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.validate.check": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}}, "df": 5}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.embedded.EmbeddedTryCatch": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1.4142135623730951}, "phml.utilities.transform.extract.to_string": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1.7320508075688772}}, "df": 5, "s": {"docs": {"phml.core.HypertextManager.load": {"tf": 1}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"phml.compiler.comp_step": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.embedded.EmbeddedTryCatch": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1.4142135623730951}, "phml.embedded.exec_embedded_blocks": {"tf": 1.4142135623730951}, "phml.helpers.build_recursive_context": {"tf": 1}, "phml.helpers.PHMLTryCatch": {"tf": 1}, "phml.parser.HypertextMarkupParser.in_pre": {"tf": 1}}, "df": 9}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.matches": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"phml.utilities.validate.validate.is_interactive": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {"phml": {"tf": 1.7320508075688772}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Position.as_dict": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.misc.classes.classnames": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.validate.validate.generated": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.6457513110645907}, "phml.core.HypertextManager.format": {"tf": 2}, "phml.embedded.Embedded": {"tf": 1}, "phml.embedded.Embedded.context": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1.7320508075688772}, "phml.embedded.exec_embedded_blocks": {"tf": 1.7320508075688772}, "phml.nodes.p_code": {"tf": 1}, "phml.parser.HypertextMarkupParser": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 10, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2}, "phml.core.HypertextManager.load": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.core.HypertextManager.compile": {"tf": 1}, "phml.helpers.PHMLTryCatch": {"tf": 1}}, "df": 5}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.parser.HypertextMarkupParser.parse": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.transform.replace_node": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.builder.p": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.embedded.EmbeddedTryCatch": {"tf": 1}, "phml.nodes.Position.from_pos": {"tf": 1}}, "df": 3, "s": {"docs": {"phml": {"tf": 1}, "phml.utilities.locate.index.Index": {"tf": 1}}, "df": 2}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"phml.Version": {"tf": 1.7320508075688772}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.Point": {"tf": 1}, "phml.nodes.Position": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}, "phml.nodes.Parent.append": {"tf": 1}, "phml.nodes.Parent.insert": {"tf": 1}, "phml.nodes.Parent.remove": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 2}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}}, "df": 10, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 2.6457513110645907}, "phml.compiler.comp_step": {"tf": 1.4142135623730951}, "phml.helpers.iterate_nodes": {"tf": 1}, "phml.nodes.Parent.pop": {"tf": 1}, "phml.nodes.Parent.index": {"tf": 1}, "phml.nodes.Parent.append": {"tf": 1}, "phml.nodes.Parent.extend": {"tf": 1}, "phml.nodes.Parent.insert": {"tf": 1}, "phml.nodes.Parent.remove": {"tf": 1}, "phml.nodes.inspect": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1.4142135623730951}}, "df": 14}}}}}, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.travel.travel.walk": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.Literal.is_text": {"tf": 1}, "phml.nodes.Literal.is_comment": {"tf": 1}, "phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 1}, "phml.utilities.validate.validate.is_heading": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}, "phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 17, "s": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 2}, "phml.utilities.validate.validate.generated": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1.4142135623730951}}, "df": 4}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {"phml.utilities.locate.select.query": {"tf": 1.7320508075688772}, "phml.utilities.locate.select.query_all": {"tf": 1.7320508075688772}, "phml.utilities.locate.select.matches": {"tf": 1.4142135623730951}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 5}, "phml.components.ComponentManager.add": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}, "phml.utilities.locate.index.Index": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 11, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.modify_children": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.locate.index.Index.__init__": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.map_nodes": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.components.tokenize_name": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.ancestor": {"tf": 1}}, "df": 3}, "t": {"docs": {"phml.utilities.misc.classes.classnames": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"phml.compiler.comp_step": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.misc": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.get_cache": {"tf": 1}, "phml.components.ComponentManager.cache": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 3, "d": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"phml.components.tokenize_name": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"phml.helpers.PHMLTryCatch": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}, "phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}, "phml.embedded.EmbeddedPythonException": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 2.449489742783178}, "phml.utilities.locate.select.query_all": {"tf": 2.449489742783178}, "phml.utilities.locate.select.matches": {"tf": 2.23606797749979}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 2}, "phml.utilities.misc.classes.ClassList": {"tf": 2}, "phml.utilities.misc.classes.ClassList.toggle": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes.ClassList.add": {"tf": 1}, "phml.utilities.misc.classes.ClassList.replace": {"tf": 1.7320508075688772}, "phml.utilities.misc.classes.ClassList.remove": {"tf": 1}}, "df": 12, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.misc.classes.classnames": {"tf": 1.7320508075688772}, "phml.utilities.misc.classes.ClassList.add": {"tf": 1}, "phml.utilities.misc.classes.ClassList.remove": {"tf": 1}, "phml.utilities.misc.classes.ClassList.classes": {"tf": 1}}, "df": 4}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.misc.classes.classnames": {"tf": 2}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.transform.transform.shift_heading": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes.ClassList.replace": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.locate": {"tf": 1}, "phml.utilities.validate": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.compiler.comp_step": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.get_cache": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.ast": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.helpers.build_recursive_context": {"tf": 1}, "phml.helpers.PHMLTryCatch": {"tf": 1}, "phml.nodes.Element.tag_path": {"tf": 1}, "phml.parser.strip": {"tf": 1}, "phml.parser.HypertextMarkupParser.tag_stack": {"tf": 1}, "phml.parser.HypertextMarkupParser.in_pre": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes.classnames": {"tf": 1}}, "df": 16, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}, "phml.core.HypertextManager.render": {"tf": 1}}, "df": 2}}, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"phml.embedded.EmbeddedTryCatch": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}}, "df": 3}}, "w": {"docs": {}, "df": 0, "d": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "r": {"docs": {"phml": {"tf": 5.196152422706632}, "phml.Version": {"tf": 1}, "phml.builder.p": {"tf": 1}, "phml.compiler.comp_step": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.cache": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 2.23606797749979}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.embedded": {"tf": 1}, "phml.embedded.EmbeddedPythonException": {"tf": 1}, "phml.embedded.Embedded": {"tf": 1}, "phml.embedded.Embedded.imports": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.helpers.build_recursive_context": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}, "phml.utilities": {"tf": 1}, "phml.utilities.locate.select": {"tf": 1}, "phml.utilities.misc": {"tf": 1}, "phml.utilities.misc.depth": {"tf": 1}, "phml.utilities.transform.sanitize": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.generated": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 29, "m": {"docs": {"phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.format": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"phml": {"tf": 1.7320508075688772}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 2}, "phml.nodes.Node.pos_as_str": {"tf": 1}, "phml.nodes.inspect": {"tf": 1}, "phml.utilities.misc.classes.ClassList.classes": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.transform.extract.to_string": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.transform": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 2}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.embedded.Embedded.context": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}}, "df": 14}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"phml.core.HypertextManager.format": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"phml.utilities.misc.classes.classnames": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"phml": {"tf": 2.6457513110645907}, "phml.compiler.comp_step": {"tf": 1}, "phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.components.ComponentManager.remove": {"tf": 1}, "phml.components.tokenize_name": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 2.23606797749979}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.core.HypertextManager.remove": {"tf": 1}, "phml.core.HypertextManager.redact": {"tf": 1}, "phml.embedded.EmbeddedImport.module": {"tf": 1}, "phml.embedded.update_ast_node_pos": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.nodes.Position.from_pos": {"tf": 1}, "phml.nodes.Parent.pop": {"tf": 1}, "phml.nodes.Parent.remove": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.inspect": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.remove": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}, "phml.utilities.misc.classes.ClassList.remove": {"tf": 1}, "phml.utilities.transform.extract.to_string": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}}, "df": 34}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 2.6457513110645907}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.helpers.calc_offset": {"tf": 1}, "phml.nodes.Position": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_before": {"tf": 1.7320508075688772}, "phml.utilities.locate.select.query": {"tf": 3}, "phml.utilities.locate.select.query_all": {"tf": 2.8284271247461903}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.travel.travel.walk": {"tf": 1}}, "df": 13}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 4.69041575982343}, "phml.components.ComponentManager.add": {"tf": 1.7320508075688772}, "phml.components.tokenize_name": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.context": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.load": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 3}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.helpers.PHMLTryCatch": {"tf": 1}, "phml.nodes.Point": {"tf": 2}, "phml.nodes.Position": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}}, "df": 14, "s": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}}, "df": 4}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.tokenize_name": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.components.tokenize_name": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.transform.transform.filter_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.transform.transform.filter_nodes": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.embedded.EmbeddedTryCatch": {"tf": 1}}, "df": 1}}, "d": {"docs": {"phml.utilities.locate": {"tf": 1}, "phml.utilities.locate.find": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_before": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.locate": {"tf": 1}, "phml.utilities.misc.classes": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Point": {"tf": 1.7320508075688772}, "phml.nodes.Position": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"phml.nodes.Position": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"phml.utilities.misc.classes": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1}, "phml.compiler.comp_step": {"tf": 1.7320508075688772}, "phml.parser.strip": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1.4142135623730951}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 8, "s": {"docs": {"phml": {"tf": 1}, "phml.utilities": {"tf": 1}, "phml.utilities.misc.heading": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1}}, "df": 1, "y": {"docs": {"phml.components.tokenize_name": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"phml.builder.p": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.nodes.inspect": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes.classnames": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.Version": {"tf": 1}}, "df": 2, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"phml.utilities.validate.validate.is_css_link": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.Version": {"tf": 1.4142135623730951}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {"phml.utilities.locate.select.matches": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 2.8284271247461903}, "phml.core.HypertextManager.write": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 2}}, "df": 1}}}, "s": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.render": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 2.449489742783178}, "phml.core.HypertextManager.write": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 2, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.add": {"tf": 1}, "phml.components.ComponentManager.remove": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.remove": {"tf": 1}, "phml.core.HypertextManager.redact": {"tf": 1}, "phml.nodes.Parent.remove": {"tf": 1}, "phml.utilities.misc.classes.ClassList.remove": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}}, "df": 10, "d": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}}, "df": 3}, "s": {"docs": {"phml.utilities.locate.index.Index.remove": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.transform.transform.remove_nodes": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.compile": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}}, "df": 5}}}, "s": {"docs": {"phml.core.HypertextManager.load": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.compile": {"tf": 1}, "phml.embedded.Module.collect": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.nodes.Node.pos_as_str": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.nodes.Element.attrs_as_str": {"tf": 1}, "phml.nodes.inspect": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.misc.classes.ClassList.classes": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1}}, "df": 15, "s": {"docs": {"phml": {"tf": 1}, "phml.components.tokenize_name": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1.4142135623730951}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_after": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1.4142135623730951}, "phml.utilities.transform.extract.to_string": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1}, "phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1.4142135623730951}}, "df": 35}, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.core.HypertextManager.format": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 5}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Element.get": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}, "phml.nodes.Position": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.components.ComponentManager.add": {"tf": 1}, "phml.embedded.EmbeddedImport": {"tf": 1}, "phml.nodes.p_code": {"tf": 1}, "phml.nodes.Element.attrs_as_str": {"tf": 1}, "phml.nodes.inspect": {"tf": 1}}, "df": 5}}}}}, "s": {"docs": {"phml.nodes.Point": {"tf": 2}, "phml.nodes.Position": {"tf": 2}, "phml.utilities.locate.index.Index.__init__": {"tf": 1.4142135623730951}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.parser.HypertextMarkupParser.parse": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.misc.classes.ClassList.replace": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1.4142135623730951}}, "df": 3, "d": {"docs": {"phml": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}}, "df": 2}, "s": {"docs": {"phml.core.HypertextManager.compile": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}}, "df": 2}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"phml.utilities.transform.transform.find_and_replace": {"tf": 1}}, "df": 1}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1, "s": {"docs": {"phml": {"tf": 2}}, "df": 1}, "d": {"docs": {"phml.utilities.transform.sanitize.Schema": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1.7320508075688772}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml.compiler.comp_step": {"tf": 1}, "phml.helpers.build_recursive_context": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}, "phml.helpers.iterate_nodes": {"tf": 1}, "phml.nodes.inspect": {"tf": 1}, "phml.utilities.misc.size": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.travel.travel.walk": {"tf": 1}, "phml.utilities.travel.travel.visit_all_after": {"tf": 1}}, "df": 7}}}}}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml.embedded.Module": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"phml.utilities.locate.select.query": {"tf": 1.7320508075688772}, "phml.utilities.locate.select.query_all": {"tf": 1.7320508075688772}, "phml.utilities.locate.select.matches": {"tf": 1.7320508075688772}}, "df": 3, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml.embedded.Embedded.imports": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Position": {"tf": 1.7320508075688772}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"phml.utilities.transform.transform.find_and_replace": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.transform.transform": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}, "k": {"docs": {"phml.utilities.misc.heading.heading_rank": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.embedded.EmbeddedTryCatch": {"tf": 1}, "phml.helpers.PHMLTryCatch": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {"phml.utilities.transform.extract.to_string": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}, "phml.nodes.Node.type": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.misc.depth": {"tf": 1}, "phml.utilities.transform.extract.to_string": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}}, "df": 10}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 5}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.travel.travel.walk": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}, "d": {"docs": {"phml.utilities.locate.select.query": {"tf": 2.23606797749979}, "phml.utilities.locate.select.query_all": {"tf": 2.23606797749979}, "phml.utilities.locate.select.matches": {"tf": 2.23606797749979}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "a": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"phml": {"tf": 6.4031242374328485}, "phml.compiler.comp_step": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.add_module": {"tf": 2.23606797749979}, "phml.core.HypertextManager.format": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.embedded.EmbeddedTryCatch": {"tf": 1}, "phml.embedded.Embedded.context": {"tf": 1}, "phml.embedded.Embedded.imports": {"tf": 1.4142135623730951}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1.4142135623730951}, "phml.nodes.Point": {"tf": 2}, "phml.nodes.Position": {"tf": 1.7320508075688772}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Parent.index": {"tf": 1}, "phml.parser.strip": {"tf": 1}, "phml.parser.HypertextMarkupParser.tag_stack": {"tf": 1}, "phml.utilities.locate": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index.Index.values": {"tf": 1}, "phml.utilities.locate.index.Index.keys": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.misc": {"tf": 1}, "phml.utilities.misc.depth": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes": {"tf": 1}, "phml.utilities.misc.classes.ClassList.toggle": {"tf": 1}, "phml.utilities.misc.classes.ClassList.replace": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 38, "s": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.inspect": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.inspect": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.parser.HypertextMarkupParser.in_pre": {"tf": 1}, "phml.utilities": {"tf": 1}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1.4142135623730951}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml.compiler.comp_step": {"tf": 1}, "phml.core.HypertextManager.context": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.core.HypertextManager.redact": {"tf": 1}}, "df": 5}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Parent.insert": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2}}, "df": 1, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "t": {"docs": {"phml.nodes.Position.__init__": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1}}, "df": 4, "o": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.Version": {"tf": 2}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.nodes.Parent.insert": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}}, "df": 6}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.nodes.Point": {"tf": 1.7320508075688772}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Position": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.validate.validate.is_interactive": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.nodes.Node": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.AST": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Literal": {"tf": 1}}, "df": 5}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.validate.validate.is_interactive": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.helpers.normalize_indent": {"tf": 1.7320508075688772}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1.4142135623730951}}, "df": 3, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {"phml.nodes.Position": {"tf": 1}, "phml.nodes.Parent.pop": {"tf": 1}, "phml.nodes.Parent.index": {"tf": 1}, "phml.nodes.Parent.insert": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 2}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1.4142135623730951}, "phml.utilities.validate.check.check": {"tf": 1.4142135623730951}}, "df": 9, "/": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"phml.components.ComponentManager.add": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.nodes.Point": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.index.Index.indexed_tree": {"tf": 1}, "phml.utilities.locate.index.Index.add": {"tf": 1}, "phml.utilities.locate.index.Index.remove": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}}, "df": 7}, "s": {"docs": {"phml.utilities.locate.index.Index.items": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.matches": {"tf": 1.4142135623730951}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}}, "df": 2}}}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.inspect": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}}, "df": 3, "s": {"docs": {"phml": {"tf": 1}, "phml.Version": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Element.tag_path": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"phml.utilities.validate.check.check": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 2}, "phml.nodes.Position": {"tf": 1}, "phml.utilities.transform.sanitize.Schema": {"tf": 1}}, "df": 3}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 5, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.matches": {"tf": 1}}, "df": 3}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.transform.extract.to_string": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"phml": {"tf": 6.855654600401044}, "phml.compiler.comp_step": {"tf": 2}, "phml.components.ComponentManager.cache": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 2}, "phml.components.tokenize_name": {"tf": 1}, "phml.core.HypertextManager.context": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.add_module": {"tf": 2}, "phml.core.HypertextManager.format": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.embedded.EmbeddedTryCatch": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.helpers.PHMLTryCatch": {"tf": 2}, "phml.nodes.Position": {"tf": 1.4142135623730951}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1.4142135623730951}, "phml.nodes.Element.get": {"tf": 1}, "phml.nodes.Literal.is_text": {"tf": 1}, "phml.nodes.Literal.is_comment": {"tf": 1}, "phml.parser.strip": {"tf": 1}, "phml.parser.HypertextMarkupParser.in_pre": {"tf": 1}, "phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1.4142135623730951}, "phml.utilities": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes.classnames": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.map_nodes": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.shift_heading": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.modify_children": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1.7320508075688772}, "phml.utilities.validate.validate.generated": {"tf": 1}, "phml.utilities.validate.validate.is_heading": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_css_style": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_javascript": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_element": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 2.6457513110645907}, "phml.utilities.validate.validate.is_phrasing": {"tf": 2.449489742783178}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 2.6457513110645907}}, "df": 48, "n": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.Element.get": {"tf": 1}}, "df": 2}}, "f": {"docs": {"phml": {"tf": 5.291502622129181}, "phml.components.ComponentManager.cache": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1.7320508075688772}, "phml.nodes.Literal.is_text": {"tf": 1}, "phml.nodes.Literal.is_comment": {"tf": 1}, "phml.parser.strip": {"tf": 1}, "phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.index.Index.add": {"tf": 1}, "phml.utilities.locate.index.Index.remove": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 2.23606797749979}, "phml.utilities.validate.validate.generated": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_heading": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_css_style": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_javascript": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_element": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_embedded": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_interactive": {"tf": 2.6457513110645907}, "phml.utilities.validate.validate.is_phrasing": {"tf": 2.23606797749979}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 2}}, "df": 44, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {"phml": {"tf": 5.0990195135927845}, "phml.compiler.comp_step": {"tf": 1}, "phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 2.23606797749979}, "phml.helpers.PHMLTryCatch": {"tf": 1}, "phml.nodes.Position": {"tf": 1.4142135623730951}, "phml.nodes.inspect": {"tf": 1}, "phml.parser.strip": {"tf": 1.4142135623730951}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.travel.travel.walk": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1.7320508075688772}}, "df": 22, "e": {"docs": {}, "df": 0, "m": {"docs": {"phml": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"phml": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 2}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"phml.Version": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"phml.helpers.iterate_nodes": {"tf": 1}}, "df": 1, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.travel.travel.walk": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.misc.depth": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}}, "df": 6}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.add_module": {"tf": 2.8284271247461903}, "phml.embedded.Module.collect": {"tf": 1}, "phml.embedded.EmbeddedImport": {"tf": 1}, "phml.embedded.EmbeddedImport.module": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 2.6457513110645907}, "phml.embedded.EmbeddedImport.objects": {"tf": 1}}, "df": 2}}, "s": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 2.23606797749979}, "phml.embedded.Module": {"tf": 1}, "phml.embedded.Module.collect": {"tf": 1.4142135623730951}, "phml.embedded.EmbeddedImport.data": {"tf": 1}, "phml.embedded.Embedded": {"tf": 1}, "phml.embedded.Embedded.imports": {"tf": 1.7320508075688772}}, "df": 6}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.nodes.Position": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {"phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 3}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.add": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.nodes.Element.get": {"tf": 1}, "phml.utilities.locate.index.Index": {"tf": 1.4142135623730951}, "phml.utilities.misc": {"tf": 1}, "phml.utilities.misc.classes": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1.4142135623730951}, "phml.utilities.validate.check": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 2.8284271247461903}}, "df": 13, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}, "phml.utilities.misc.classes": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.validate.check": {"tf": 1}}, "df": 1}}, "s": {"docs": {"phml.utilities.validate.check.check": {"tf": 1}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 2}, "phml.embedded": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Literal.is_text": {"tf": 1}, "phml.nodes.inspect": {"tf": 1.7320508075688772}, "phml.parser.strip": {"tf": 1}, "phml.utilities.transform.extract.to_string": {"tf": 2}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1.7320508075688772}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 2.23606797749979}}, "df": 10, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 11.74734012447073}, "phml.Version": {"tf": 1}, "phml.compiler.comp_step": {"tf": 3.3166247903554}, "phml.components.ComponentManager.generate_name": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.get_cache": {"tf": 1}, "phml.components.ComponentManager.cache": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.add": {"tf": 3.872983346207417}, "phml.components.ComponentManager.remove": {"tf": 1}, "phml.core.HypertextManager.context": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 4.58257569495584}, "phml.core.HypertextManager.ast": {"tf": 1}, "phml.core.HypertextManager.load": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 2.6457513110645907}, "phml.core.HypertextManager.compile": {"tf": 2}, "phml.core.HypertextManager.render": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.write": {"tf": 2}, "phml.core.HypertextManager.add": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.remove": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.embedded": {"tf": 1}, "phml.embedded.EmbeddedTryCatch": {"tf": 1.7320508075688772}, "phml.embedded.Module": {"tf": 1}, "phml.embedded.Module.collect": {"tf": 1.4142135623730951}, "phml.embedded.EmbeddedImport.module": {"tf": 1}, "phml.embedded.EmbeddedImport.objects": {"tf": 1}, "phml.embedded.EmbeddedImport.data": {"tf": 1}, "phml.embedded.Embedded.context": {"tf": 1}, "phml.embedded.Embedded.imports": {"tf": 1.4142135623730951}, "phml.embedded.exec_embedded": {"tf": 3.3166247903554}, "phml.embedded.exec_embedded_blocks": {"tf": 3}, "phml.helpers.build_recursive_context": {"tf": 1}, "phml.helpers.calc_offset": {"tf": 1.7320508075688772}, "phml.helpers.strip_blank_lines": {"tf": 1.4142135623730951}, "phml.helpers.normalize_indent": {"tf": 2.23606797749979}, "phml.helpers.PHMLTryCatch": {"tf": 1.4142135623730951}, "phml.nodes.Point": {"tf": 1.7320508075688772}, "phml.nodes.Position": {"tf": 4.358898943540674}, "phml.nodes.Position.__init__": {"tf": 2.23606797749979}, "phml.nodes.Position.as_dict": {"tf": 1}, "phml.nodes.Node.position": {"tf": 2}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Node.pos_as_str": {"tf": 1}, "phml.nodes.Parent.pop": {"tf": 1}, "phml.nodes.Parent.index": {"tf": 1.4142135623730951}, "phml.nodes.Parent.append": {"tf": 1.4142135623730951}, "phml.nodes.Parent.extend": {"tf": 1}, "phml.nodes.Parent.insert": {"tf": 1}, "phml.nodes.Parent.remove": {"tf": 1}, "phml.nodes.Element.tag_path": {"tf": 1.7320508075688772}, "phml.nodes.Element.pop": {"tf": 1.4142135623730951}, "phml.nodes.Element.get": {"tf": 2.23606797749979}, "phml.nodes.Element.attrs_as_str": {"tf": 1}, "phml.nodes.inspect": {"tf": 1.4142135623730951}, "phml.parser.strip": {"tf": 1.4142135623730951}, "phml.parser.RE.tag_start": {"tf": 1}, "phml.parser.RE.tag_end": {"tf": 1}, "phml.parser.HypertextMarkupParser.in_pre": {"tf": 1}, "phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.ancestor": {"tf": 2.23606797749979}, "phml.utilities.locate.find.find": {"tf": 2.23606797749979}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 2}, "phml.utilities.locate.find.find_all_after": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all_before": {"tf": 2}, "phml.utilities.locate.find.find_before": {"tf": 2.8284271247461903}, "phml.utilities.locate.find.find_all_between": {"tf": 2}, "phml.utilities.locate.index.Index": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.__init__": {"tf": 2}, "phml.utilities.locate.index.Index.indexed_tree": {"tf": 1}, "phml.utilities.locate.index.Index.items": {"tf": 1}, "phml.utilities.locate.index.Index.values": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.keys": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.get": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1.7320508075688772}, "phml.utilities.locate.select.query": {"tf": 4.242640687119285}, "phml.utilities.locate.select.query_all": {"tf": 4.242640687119285}, "phml.utilities.locate.select.matches": {"tf": 3.605551275463989}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1.4142135623730951}, "phml.utilities.misc": {"tf": 1}, "phml.utilities.misc.depth": {"tf": 2}, "phml.utilities.misc.size": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 2.23606797749979}, "phml.utilities.misc.classes.ClassList": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes.ClassList.classes": {"tf": 1}, "phml.utilities.misc.heading.heading_rank": {"tf": 1.4142135623730951}, "phml.utilities.transform.extract.to_string": {"tf": 2}, "phml.utilities.transform.sanitize.sanatize": {"tf": 2.6457513110645907}, "phml.utilities.transform.sanitize.Schema": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 2}, "phml.utilities.transform.transform": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 2.8284271247461903}, "phml.utilities.transform.transform.remove_nodes": {"tf": 2.23606797749979}, "phml.utilities.transform.transform.map_nodes": {"tf": 2}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.shift_heading": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.replace_node": {"tf": 2.23606797749979}, "phml.utilities.transform.transform.modify_children": {"tf": 3}, "phml.utilities.travel.travel.path": {"tf": 2.23606797749979}, "phml.utilities.travel.travel.path_names": {"tf": 2.23606797749979}, "phml.utilities.travel.travel.walk": {"tf": 1}, "phml.utilities.travel.travel.visit_all_after": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 3.7416573867739413}, "phml.utilities.validate.validate.is_element": {"tf": 2}, "phml.utilities.validate.validate.is_interactive": {"tf": 2.6457513110645907}, "phml.utilities.validate.validate.is_phrasing": {"tf": 2.449489742783178}, "phml.utilities.validate.validate.blank": {"tf": 1.4142135623730951}}, "df": 108, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 3.1622776601683795}, "phml.compiler.comp_step": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.index.Index.add": {"tf": 1}, "phml.utilities.locate.index.Index.remove": {"tf": 1}}, "df": 5}}, "y": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.parser.HypertextMarkupParser.tag_stack": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.matches": {"tf": 1.4142135623730951}}, "df": 5}, "m": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.add_module": {"tf": 1.4142135623730951}}, "df": 2}, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 2}}, "n": {"docs": {"phml": {"tf": 2.8284271247461903}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1.4142135623730951}}, "df": 9}, "i": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1}, "phml.helpers.iterate_nodes": {"tf": 1}, "phml.utilities.transform.sanitize.Schema": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 5.0990195135927845}, "phml.builder": {"tf": 1}, "phml.compiler.comp_step": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.add": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.context": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.add_module": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.expose": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.redact": {"tf": 1}, "phml.embedded.Embedded.imports": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.parser.strip": {"tf": 1}, "phml.utilities": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}}, "df": 16}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 4.242640687119285}, "phml.Version": {"tf": 1}, "phml.compiler.comp_step": {"tf": 2}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.ast": {"tf": 1}, "phml.helpers.PHMLTryCatch": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.utilities": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_before": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_before": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index.Index": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.misc": {"tf": 1}, "phml.utilities.misc.depth": {"tf": 1}, "phml.utilities.misc.classes": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.misc.heading": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.map_nodes": {"tf": 2.23606797749979}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1}, "phml.utilities.travel.travel": {"tf": 1}, "phml.utilities.validate.check": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1.7320508075688772}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1.4142135623730951}}, "df": 40}, "n": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"phml.nodes.Element.pop": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"phml": {"tf": 7.483314773547883}, "phml.builder": {"tf": 1}, "phml.compiler.comp_step": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 2}, "phml.components.tokenize_name": {"tf": 1}, "phml.core.HypertextManager.compiler": {"tf": 1}, "phml.core.HypertextManager.context": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.add_module": {"tf": 3.3166247903554}, "phml.core.HypertextManager.ast": {"tf": 1}, "phml.core.HypertextManager.load": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 2.6457513110645907}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.embedded.EmbeddedTryCatch": {"tf": 1}, "phml.embedded.Module": {"tf": 1}, "phml.embedded.EmbeddedImport.data": {"tf": 1}, "phml.embedded.Embedded.imports": {"tf": 1}, "phml.embedded.update_ast_node_pos": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1.4142135623730951}, "phml.embedded.exec_embedded_blocks": {"tf": 1.4142135623730951}, "phml.helpers.normalize_indent": {"tf": 1.7320508075688772}, "phml.helpers.PHMLTryCatch": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.Position.as_dict": {"tf": 1}, "phml.nodes.Parent.pop": {"tf": 1}, "phml.nodes.Parent.append": {"tf": 1}, "phml.nodes.Element.tag_path": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1.4142135623730951}, "phml.nodes.inspect": {"tf": 1.7320508075688772}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}, "phml.utilities.locate.find": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_after": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_after": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_before": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_before": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_between": {"tf": 2.6457513110645907}, "phml.utilities.locate.index.Index.__init__": {"tf": 2.8284271247461903}, "phml.utilities.locate.index.Index.add": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1.7320508075688772}, "phml.utilities.misc.classes.ClassList": {"tf": 1}, "phml.utilities.misc.classes.ClassList.add": {"tf": 1}, "phml.utilities.transform.extract.to_string": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.Schema": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.map_nodes": {"tf": 2}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.replace_node": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.modify_children": {"tf": 1.7320508075688772}, "phml.utilities.travel.travel.path": {"tf": 2}, "phml.utilities.travel.travel.path_names": {"tf": 2}, "phml.utilities.travel.travel.walk": {"tf": 1}, "phml.utilities.validate": {"tf": 1.4142135623730951}, "phml.utilities.validate.check": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1.7320508075688772}, "phml.utilities.validate.validate.generated": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1.4142135623730951}}, "df": 68, "o": {"docs": {"phml.utilities.misc.classes.classnames": {"tf": 1}}, "df": 1, "l": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "p": {"docs": {"phml": {"tf": 2.23606797749979}}, "df": 1}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.Version": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.misc.classes.ClassList.toggle": {"tf": 1}}, "df": 1, "d": {"docs": {"phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"phml.components.tokenize_name": {"tf": 1.7320508075688772}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.components.tokenize_name": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}}, "df": 3, "s": {"docs": {"phml": {"tf": 1}, "phml.compiler.comp_step": {"tf": 1}, "phml.parser.strip": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 7}}}, "g": {"docs": {"phml": {"tf": 1}, "phml.parser.strip": {"tf": 1.4142135623730951}, "phml.parser.RE.tag_start": {"tf": 1}, "phml.parser.RE.tag_end": {"tf": 1}, "phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.matches": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.Schema": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1.7320508075688772}, "phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}}, "df": 13, "s": {"docs": {"phml": {"tf": 1}, "phml.nodes.Element.tag_path": {"tf": 1}, "phml.parser.RE.attribute": {"tf": 1}, "phml.parser.HypertextMarkupParser.tag_stack": {"tf": 1}, "phml.utilities.misc.heading": {"tf": 1}}, "df": 5}, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.remove": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"phml.Version": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"phml.Version": {"tf": 1}, "phml.utilities.misc": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {"phml.utilities.locate.index.Index.get": {"tf": 1}, "phml.utilities.misc.depth": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.sanatize": {"tf": 2}, "phml.utilities.transform.sanitize.Schema": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 2}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.map_nodes": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.travel.travel": {"tf": 1}, "phml.utilities.travel.travel.visit_all_after": {"tf": 1}}, "df": 11}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"phml.components.tokenize_name": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1.4142135623730951}, "phml.utilities.validate.check.check": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1}, "phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 11}}, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"phml.embedded.EmbeddedTryCatch": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.parser.strip": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.utilities": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.travel.travel": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"phml.utilities.travel.travel.walk": {"tf": 1}, "phml.utilities.travel.travel.visit_all_after": {"tf": 1}}, "df": 2}}}, "l": {"docs": {"phml.utilities.travel.travel": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.misc.classes": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"phml.utilities.transform": {"tf": 1}, "phml.utilities.transform.sanitize": {"tf": 1}, "phml.utilities.transform.transform": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.map_nodes": {"tf": 1.7320508075688772}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.misc.classes": {"tf": 1}, "phml.utilities.transform": {"tf": 1}, "phml.utilities.transform.transform": {"tf": 1}}, "df": 3}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 3, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.AST": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Literal": {"tf": 1}, "phml.nodes.inspect": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.validate": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1.7320508075688772}, "phml.utilities.validate.validate.is_css_style": {"tf": 1.7320508075688772}, "phml.utilities.validate.validate.is_javascript": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 20, "s": {"docs": {"phml.utilities.locate.select": {"tf": 1}, "phml.utilities.validate": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml.embedded.Module.collect": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"phml.utilities.locate.find.ancestor": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.helpers.iterate_nodes": {"tf": 1}}, "df": 1, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.core.HypertextManager.context": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}}, "df": 2}}}}}}}}}, "f": {"docs": {"phml": {"tf": 5.385164807134504}, "phml.Version": {"tf": 1.4142135623730951}, "phml.compiler.comp_step": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.components.ComponentManager.get_cache": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1.7320508075688772}, "phml.components.tokenize_name": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.add_module": {"tf": 2}, "phml.core.HypertextManager.load": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.embedded.Module.collect": {"tf": 1}, "phml.embedded.EmbeddedImport": {"tf": 1}, "phml.embedded.Embedded": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.helpers.calc_offset": {"tf": 1.4142135623730951}, "phml.helpers.strip_blank_lines": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1}, "phml.nodes.p_code": {"tf": 1}, "phml.nodes.Position": {"tf": 3}, "phml.nodes.Position.__init__": {"tf": 1.7320508075688772}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Parent.index": {"tf": 1}, "phml.nodes.Parent.append": {"tf": 1}, "phml.nodes.Parent.extend": {"tf": 1}, "phml.nodes.Parent.insert": {"tf": 1}, "phml.nodes.Element.tag_path": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.nodes.Element.attrs_as_str": {"tf": 1}, "phml.nodes.inspect": {"tf": 1.4142135623730951}, "phml.parser.RE.tag_start": {"tf": 1}, "phml.parser.RE.tag_end": {"tf": 1}, "phml.parser.HypertextMarkupParser.tag_stack": {"tf": 1.4142135623730951}, "phml.utilities": {"tf": 1}, "phml.utilities.locate": {"tf": 1}, "phml.utilities.locate.find": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.ancestor": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index.Index": {"tf": 1}, "phml.utilities.locate.index.Index.indexed_tree": {"tf": 1}, "phml.utilities.locate.index.Index.items": {"tf": 1}, "phml.utilities.locate.select": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}, "phml.utilities.misc.size": {"tf": 1}, "phml.utilities.misc.classes": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 2}, "phml.utilities.misc.classes.ClassList.classes": {"tf": 1}, "phml.utilities.misc.heading.heading_rank": {"tf": 1}, "phml.utilities.transform": {"tf": 1}, "phml.utilities.transform.extract.to_string": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema": {"tf": 2.23606797749979}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 2.449489742783178}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1.4142135623730951}, "phml.utilities.travel.travel": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 2}, "phml.utilities.travel.travel.path_names": {"tf": 2}, "phml.utilities.validate": {"tf": 1}, "phml.utilities.validate.check": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1.7320508075688772}}, "df": 69, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"phml.embedded.update_ast_node_pos": {"tf": 1.4142135623730951}, "phml.helpers.calc_offset": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1}, "phml.nodes.Point": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.utilities.misc": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}, "phml.utilities.validate": {"tf": 1}}, "df": 6, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.nodes.Element.pop": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.core.HypertextManager.remove": {"tf": 1}, "phml.embedded.ImportStruct.values": {"tf": 1}, "phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.misc.classes.ClassList": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.Schema": {"tf": 1}, "phml.utilities.validate": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate.validate": {"tf": 1}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1}}, "df": 13, "e": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.components.tokenize_name": {"tf": 1}, "phml.nodes.Point": {"tf": 1}, "phml.utilities.locate.find": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes.ClassList.add": {"tf": 1}, "phml.utilities.misc.classes.ClassList.remove": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}}, "df": 12, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 2.6457513110645907}, "phml.compiler.comp_step": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.cache": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.parser.HypertextMarkupParser.is_self_closing": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}}, "df": 10}}}, "r": {"docs": {"phml": {"tf": 4.58257569495584}, "phml.compiler.comp_step": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.add_module": {"tf": 2}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.embedded.Module.collect": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1.7320508075688772}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Parent.insert": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1.4142135623730951}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1.4142135623730951}, "phml.utilities.locate.find": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index.Index": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 2}, "phml.utilities.locate.select.query_all": {"tf": 2}, "phml.utilities.locate.select.matches": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}, "phml.utilities.misc.classes": {"tf": 1}, "phml.utilities.misc.classes.ClassList.add": {"tf": 1}, "phml.utilities.misc.classes.ClassList.remove": {"tf": 1}, "phml.utilities.transform": {"tf": 1}, "phml.utilities.transform.transform": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1}, "phml.utilities.travel.travel": {"tf": 1}, "phml.utilities.validate": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1}}, "df": 42, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.core.HypertextManager.format": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.parser.HypertextMarkupParser.tag_stack": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "#": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 2}}, "df": 1, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 4}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.add_module": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.format": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all_between": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}, "phml.components.ComponentManager.generate_name": {"tf": 1}}, "df": 2}}, "[": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.parser.HypertextMarkupParser.tag_stack": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml.Version": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.embedded.ImportStruct.values": {"tf": 1}, "phml.embedded.Module": {"tf": 1}, "phml.nodes.Position.from_pos": {"tf": 1}, "phml.nodes.Position.as_dict": {"tf": 1}, "phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 8, "s": {"docs": {"phml.compiler.comp_step": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.load": {"tf": 1}, "phml.core.HypertextManager.compile": {"tf": 1}, "phml.embedded.EmbeddedImport.objects": {"tf": 1}}, "df": 5}}}}}}}, "b": {"docs": {"phml.utilities.misc.classes.classnames": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 2, "e": {"docs": {"phml": {"tf": 5.291502622129181}, "phml.compiler.comp_step": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.format": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.nodes.LiteralType": {"tf": 1}, "phml.nodes.NodeType": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.index.Index": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1.7320508075688772}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1.4142135623730951}, "phml.utilities.validate.check": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 24, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.helpers.normalize_indent": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.transform.transform.shift_heading": {"tf": 1}}, "df": 4}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_before": {"tf": 1.4142135623730951}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.embedded.EmbeddedTryCatch": {"tf": 1}, "phml.helpers.PHMLTryCatch": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}}, "df": 5}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.components.ComponentManager.generate_name": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.ast": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 1}}, "df": 4}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"phml": {"tf": 1}, "phml.embedded.Embedded.context": {"tf": 1}}, "df": 2, "s": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.core.HypertextManager.compile": {"tf": 1}, "phml.embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1.7320508075688772}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"phml.helpers.strip_blank_lines": {"tf": 1}, "phml.parser.strip": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 2}}, "df": 3, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 2}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}, "d": {"docs": {"phml.helpers.build_recursive_context": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.builder": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.builder": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.Version": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"phml.utilities.misc.classes.classnames": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.context": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.embedded.EmbeddedImport.data": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.transform.shift_heading": {"tf": 1}}, "df": 11}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.misc.classes.classnames": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 2}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.format": {"tf": 1.4142135623730951}}, "df": 2}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"phml": {"tf": 2.23606797749979}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"phml.components.tokenize_name": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.nodes.inspect": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.Schema": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 10}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.misc.classes.classnames": {"tf": 2}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.AST": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Literal": {"tf": 1}}, "df": 6}}, "e": {"docs": {"phml.embedded.EmbeddedPythonException": {"tf": 1}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.AST": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Literal": {"tf": 1}}, "df": 6, "d": {"docs": {"phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.core.HypertextManager.remove": {"tf": 1}, "phml.utilities.misc.classes.ClassList": {"tf": 1}, "phml.utilities.validate.validate.validate": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"phml": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.core.HypertextManager.format": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}, "o": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1, "b": {"docs": {"phml": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}}, "df": 4}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml": {"tf": 4.69041575982343}, "phml.compiler.comp_step": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.remove": {"tf": 1}, "phml.core.HypertextManager.context": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1.4142135623730951}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.nodes.Parent.extend": {"tf": 1}, "phml.nodes.inspect": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 4.242640687119285}, "phml.utilities.locate.select.query_all": {"tf": 4.242640687119285}, "phml.utilities.locate.select.matches": {"tf": 4}, "phml.utilities.locate.select.parse_specifiers": {"tf": 3.1622776601683795}, "phml.utilities.misc.classes": {"tf": 1}, "phml.utilities.misc.classes.ClassList.replace": {"tf": 1}, "phml.utilities.misc.heading": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.replace_node": {"tf": 1.4142135623730951}, "phml.utilities.travel.travel": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1}}, "df": 26, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"phml.components.tokenize_name": {"tf": 1}, "phml.utilities.transform.extract.to_string": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 3.7416573867739413}, "phml.compiler.comp_step": {"tf": 1}, "phml.components.ComponentManager.cache": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1.7320508075688772}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.render": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.embedded.EmbeddedTryCatch": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.parser.strip": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}}, "df": 18}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 2.449489742783178}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}}, "df": 4, "w": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.core.HypertextManager.format": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.helpers.PHMLTryCatch": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}, "phml.parser.HypertextMarkupParser.tag_stack": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.embedded.EmbeddedImport.module": {"tf": 1}, "phml.nodes.LiteralType": {"tf": 1}, "phml.nodes.NodeType": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}}, "df": 6}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.core.HypertextManager.write": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.inspect": {"tf": 1.4142135623730951}, "phml.parser.HypertextMarkupParser.in_pre": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 6}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.utilities.validate": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}}, "df": 3}, "l": {"docs": {}, "df": 0, "k": {"docs": {"phml.utilities.locate.find.find": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 2.6457513110645907}}, "df": 1}}, "k": {"docs": {"phml": {"tf": 1}}, "df": 1, "s": {"docs": {"phml": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.transform.extract.to_string": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.components.tokenize_name": {"tf": 1}}, "df": 2, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.locate.find.ancestor": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 2.23606797749979}, "phml.core.HypertextManager.add_module": {"tf": 1.4142135623730951}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.6457513110645907}, "phml.core.HypertextManager.write": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml.core.HypertextManager.format": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.compiler.comp_step": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.modify_children": {"tf": 1}}, "df": 2}, "d": {"docs": {"phml.utilities.transform.transform.modify_children": {"tf": 1.7320508075688772}}, "df": 1}}}, "s": {"docs": {"phml.compiler.comp_step": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}}, "df": 2, "d": {"docs": {"phml": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 1.4142135623730951}}, "df": 4}, "s": {"docs": {"phml.components.tokenize_name": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.locate.index.Index": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"phml.builder.p": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"phml": {"tf": 1}, "phml.components.ComponentManager.get_cache": {"tf": 1}, "phml.helpers.calc_offset": {"tf": 1}, "phml.nodes.p_code": {"tf": 1}, "phml.nodes.Parent.index": {"tf": 1}, "phml.nodes.Element.tag_path": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_after": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index.Index.items": {"tf": 1}, "phml.utilities.locate.index.Index.values": {"tf": 1}, "phml.utilities.locate.index.Index.keys": {"tf": 1}, "phml.utilities.locate.index.Index.get": {"tf": 1}, "phml.utilities.misc.depth": {"tf": 1}, "phml.utilities.misc.size": {"tf": 1}, "phml.utilities.misc.heading.heading_rank": {"tf": 1}, "phml.utilities.transform.extract.to_string": {"tf": 1.4142135623730951}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}}, "df": 21, "s": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.transform.extract.to_string": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"phml": {"tf": 9.695359714832659}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 3}, "phml.parser.RE.tag_end": {"tf": 1.4142135623730951}, "phml.parser.RE.comment": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 12}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1}, "phml.compiler.comp_step": {"tf": 1}, "phml.core.HypertextManager.context": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.core.HypertextManager.redact": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}}, "df": 7, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}, "phml.embedded.Embedded.imports": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.Version": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 2}}, "df": 1}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.embedded.Module": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.nodes.inspect": {"tf": 1}, "phml.parser.strip": {"tf": 1}, "phml.parser.HypertextMarkupParser.parse": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_before": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index": {"tf": 1}, "phml.utilities.misc.depth": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1.4142135623730951}, "phml.utilities.travel.travel.path_names": {"tf": 1.4142135623730951}, "phml.utilities.travel.travel.visit_all_after": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_element": {"tf": 1}}, "df": 17}, "s": {"docs": {"phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"phml": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {"phml.embedded.ImportStruct.values": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes.classnames": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}, "phml.compiler.comp_step": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.add_module": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "v": {"docs": {"phml": {"tf": 2.449489742783178}, "phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.components.ComponentManager.add": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.parse": {"tf": 1}, "phml.nodes.Position.as_dict": {"tf": 1}, "phml.utilities.locate.index.Index": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"phml.compiler.comp_step": {"tf": 1}, "phml.utilities.transform.sanitize.Schema": {"tf": 2}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 2.23606797749979}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"phml.utilities": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.misc": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {"phml": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.7320508075688772}}, "df": 1, "d": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 4}, "s": {"docs": {"phml": {"tf": 1}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.AST": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Literal": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 2}, "phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Element.get": {"tf": 2}, "phml.nodes.inspect": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}}, "df": 6, "s": {"docs": {"phml": {"tf": 1}, "phml.components.tokenize_name": {"tf": 1}, "phml.core.HypertextManager.ast": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.write": {"tf": 1}, "phml.nodes.Parent.pop": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 8}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.embedded.update_ast_node_pos": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.embedded.EmbeddedTryCatch": {"tf": 1}}, "df": 1}}, "s": {"docs": {"phml.utilities.validate.validate.is_interactive": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"phml.utilities.misc.depth": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.travel.travel.walk": {"tf": 1}}, "df": 3}}}, "l": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"phml.embedded.Embedded.imports": {"tf": 1}}, "df": 1, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.utilities.misc.heading": {"tf": 1}}, "df": 2, "n": {"docs": {"phml": {"tf": 1}, "phml.utilities.locate.index.Index": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes": {"tf": 1}}, "df": 3}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 1}}, "df": 3, "n": {"docs": {"phml.utilities.misc": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.transform.extract.to_string": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"phml": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.embedded.Module": {"tf": 1}, "phml.embedded.EmbeddedImport": {"tf": 1}, "phml.utilities.locate.select": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 8, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.transform.sanitize.Schema": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"phml.embedded.Embedded": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 2}}, "df": 1, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 2.449489742783178}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}}, "df": 2}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 5.744562646538029}, "phml.components.ComponentManager.add": {"tf": 1}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Element.tag_path": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.parser.HypertextMarkupParser.in_pre": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.add": {"tf": 1}, "phml.utilities.locate.index.Index.remove": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 3}, "phml.utilities.locate.select.query_all": {"tf": 2.449489742783178}, "phml.utilities.locate.select.matches": {"tf": 2}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1.7320508075688772}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.misc.heading.heading_rank": {"tf": 1}, "phml.utilities.transform.extract.to_string": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.Schema": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 2}, "phml.utilities.transform.transform.map_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate.is_heading": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_css_style": {"tf": 1.7320508075688772}, "phml.utilities.validate.validate.is_javascript": {"tf": 1.7320508075688772}, "phml.utilities.validate.validate.is_element": {"tf": 1}, "phml.utilities.validate.validate.is_embedded": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_interactive": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1.4142135623730951}}, "df": 32, "s": {"docs": {"phml": {"tf": 2.449489742783178}, "phml.builder": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1.7320508075688772}, "phml.embedded": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.nodes.Element.pop": {"tf": 1}, "phml.utilities.locate.index.Index.indexed_tree": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 2.8284271247461903}, "phml.utilities.locate.select.query_all": {"tf": 3.1622776601683795}, "phml.utilities.locate.select.matches": {"tf": 2.6457513110645907}, "phml.utilities.locate.select.parse_specifiers": {"tf": 2.8284271247461903}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.transform.sanitize.Schema": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_element": {"tf": 1}, "phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 18}, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.locate.select.matches": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.8284271247461903}, "phml.nodes.Element.get": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "f": {"docs": {"phml": {"tf": 2.6457513110645907}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"phml": {"tf": 2.6457513110645907}, "phml.core.HypertextManager.context": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1}, "phml.nodes.Position": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1}, "phml.utilities.transform.transform.map_nodes": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.transform.transform.modify_children": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 1}}, "df": 22}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.builder": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml.utilities.locate.index.Index": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {"phml.components.ComponentManager.add": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.8284271247461903}, "phml.core.HypertextManager.add_module": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query": {"tf": 2}, "phml.utilities.locate.select.query_all": {"tf": 2}, "phml.utilities.locate.select.matches": {"tf": 2}, "phml.utilities.misc.heading.heading_rank": {"tf": 1}}, "df": 6, "s": {"docs": {"phml.utilities.misc.classes.classnames": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 2.8284271247461903}}, "df": 1}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.embedded.exec_embedded": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.components.tokenize_name": {"tf": 1}}, "df": 2, "s": {"docs": {"phml": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "d": {"docs": {"phml.nodes.Parent.extend": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.transform.remove_nodes": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.helpers.PHMLTryCatch": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"phml.embedded.EmbeddedPythonException": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"phml.utilities.locate.find.find_all_between": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml.core.HypertextManager.context": {"tf": 1}, "phml.core.HypertextManager.expose": {"tf": 1}}, "df": 2, "d": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.compiler.comp_step": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.modify_children": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.nodes.Position": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}}, "df": 2}}}, "t": {"docs": {"phml.embedded.EmbeddedPythonException": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}, "phml.embedded.EmbeddedTryCatch": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}}, "df": 2, "d": {"docs": {"phml.embedded.EmbeddedTryCatch": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.nodes.inspect": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"phml.embedded.update_ast_node_pos": {"tf": 1.4142135623730951}, "phml.helpers.strip_blank_lines": {"tf": 1}, "phml.nodes.Position": {"tf": 1.4142135623730951}, "phml.nodes.Position.__init__": {"tf": 1.4142135623730951}, "phml.nodes.Parent.append": {"tf": 1}, "phml.parser.RE.tag_end": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1.4142135623730951}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.locate.select.parse_specifiers": {"tf": 1}}, "df": 5}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"phml.nodes.LiteralType": {"tf": 1}, "phml.nodes.NodeType": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1}, "phml.nodes.Node.type": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}}, "df": 4}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.core.HypertextManager.expose": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml": {"tf": 1}, "phml.embedded.EmbeddedTryCatch": {"tf": 1.4142135623730951}, "phml.nodes.Element.pop": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "m": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.validate.validate.is_embedded": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}, "phml.embedded": {"tf": 1}, "phml.embedded.EmbeddedTryCatch": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 2.449489742783178}, "phml.embedded.exec_embedded_blocks": {"tf": 2}, "phml.utilities.validate.validate.is_embedded": {"tf": 1.4142135623730951}}, "df": 6, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.embedded.EmbeddedTryCatch": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.validate.validate.is_embedded": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 4}, "phml.components.ComponentManager.generate_name": {"tf": 1}, "phml.components.ComponentManager.add": {"tf": 2.23606797749979}, "phml.components.tokenize_name": {"tf": 2.23606797749979}, "phml.core.HypertextManager.add_module": {"tf": 3}, "phml.embedded.EmbeddedImport.data": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.parser.RE.tag_start": {"tf": 1.7320508075688772}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.transform.sanitize.Schema": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}, "phml.utilities.validate.validate.is_event_handler": {"tf": 1}}, "df": 14, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}, "s": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.core.HypertextManager.expose": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.transform.sanitize.Schema": {"tf": 2}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 2.23606797749979}}, "df": 5}, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"phml.core.HypertextManager.remove": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1}}, "df": 14, "w": {"docs": {"phml": {"tf": 2.6457513110645907}}, "df": 1}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.tokenize_name": {"tf": 1}, "phml.helpers.normalize_indent": {"tf": 1.4142135623730951}}, "df": 2, "d": {"docs": {"phml.helpers.normalize_indent": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"phml.helpers.normalize_indent": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.compiler.comp_step": {"tf": 1}, "phml.nodes.Position": {"tf": 1.7320508075688772}, "phml.nodes.Element.pop": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1}, "phml.parser.strip": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.index.Index": {"tf": 1}, "phml.utilities.locate.index.Index.add": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1}, "phml.utilities.travel.travel.path_names": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 1.4142135623730951}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1.4142135623730951}}, "df": 17, "e": {"docs": {"phml": {"tf": 1}, "phml.compiler.comp_step": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.embedded.exec_embedded": {"tf": 1}, "phml.embedded.exec_embedded_blocks": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 7}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}, "phml.compiler.comp_step": {"tf": 2}, "phml.embedded.update_ast_node_pos": {"tf": 1.4142135623730951}, "phml.helpers.build_recursive_context": {"tf": 1}, "phml.nodes.Position": {"tf": 1.7320508075688772}, "phml.nodes.Node": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1.4142135623730951}, "phml.nodes.Node.type": {"tf": 1}, "phml.nodes.Parent": {"tf": 1}, "phml.nodes.Parent.pop": {"tf": 1}, "phml.nodes.Parent.index": {"tf": 1}, "phml.nodes.Parent.append": {"tf": 1}, "phml.nodes.Parent.insert": {"tf": 1}, "phml.nodes.Parent.remove": {"tf": 1}, "phml.nodes.AST": {"tf": 1}, "phml.nodes.Element": {"tf": 1}, "phml.nodes.Literal": {"tf": 1}, "phml.nodes.Literal.is_text": {"tf": 1.4142135623730951}, "phml.nodes.Literal.is_comment": {"tf": 1}, "phml.nodes.inspect": {"tf": 2.23606797749979}, "phml.utilities.locate.find": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find": {"tf": 2.23606797749979}, "phml.utilities.locate.find.find_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.find_after": {"tf": 2.23606797749979}, "phml.utilities.locate.find.find_all_after": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all_before": {"tf": 2.23606797749979}, "phml.utilities.locate.find.find_before": {"tf": 2.8284271247461903}, "phml.utilities.locate.find.find_all_between": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1.4142135623730951}, "phml.utilities.misc.depth": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 2.6457513110645907}, "phml.utilities.misc.classes.ClassList": {"tf": 1}, "phml.utilities.transform.extract.to_string": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.map_nodes": {"tf": 3.4641016151377544}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.replace_node": {"tf": 2.449489742783178}, "phml.utilities.transform.transform.modify_children": {"tf": 2.449489742783178}, "phml.utilities.travel.travel": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 2.6457513110645907}, "phml.utilities.travel.travel.path_names": {"tf": 2.6457513110645907}, "phml.utilities.travel.travel.walk": {"tf": 1}, "phml.utilities.travel.travel.visit_all_after": {"tf": 1}, "phml.utilities.validate": {"tf": 1}, "phml.utilities.validate.check.check": {"tf": 3.4641016151377544}, "phml.utilities.validate.validate.validate": {"tf": 1}, "phml.utilities.validate.validate.generated": {"tf": 2.449489742783178}, "phml.utilities.validate.validate.is_css_link": {"tf": 1}, "phml.utilities.validate.validate.is_css_style": {"tf": 1}, "phml.utilities.validate.validate.is_javascript": {"tf": 1}, "phml.utilities.validate.validate.is_element": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 55, "s": {"docs": {"phml.builder.p": {"tf": 1}, "phml.compiler.comp_step": {"tf": 1}, "phml.helpers.iterate_nodes": {"tf": 1}, "phml.nodes.p_code": {"tf": 1}, "phml.nodes.Parent.extend": {"tf": 1}, "phml.nodes.Parent.insert": {"tf": 1}, "phml.nodes.inspect": {"tf": 1}, "phml.utilities.locate": {"tf": 1}, "phml.utilities.locate.find.ancestor": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_all": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_all_before": {"tf": 1.7320508075688772}, "phml.utilities.locate.find.find_all_between": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index": {"tf": 1}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.misc.size": {"tf": 1}, "phml.utilities.misc.classes": {"tf": 1}, "phml.utilities.transform": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 2}, "phml.utilities.transform.transform.remove_nodes": {"tf": 1.7320508075688772}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1}, "phml.utilities.travel.travel.path": {"tf": 1.4142135623730951}, "phml.utilities.travel.travel.path_names": {"tf": 1.4142135623730951}, "phml.utilities.validate": {"tf": 1.4142135623730951}, "phml.utilities.validate.check": {"tf": 1}}, "df": 27}, "#": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.transform.extract.to_string": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "n": {"docs": {"phml.embedded.EmbeddedPythonException": {"tf": 1}}, "df": 1, "e": {"docs": {"phml": {"tf": 1}, "phml.core.HypertextManager.ast": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.nodes.Position.__init__": {"tf": 1}, "phml.nodes.Node.position": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1.4142135623730951}, "phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.find.find": {"tf": 1}, "phml.utilities.locate.find.find_after": {"tf": 1}, "phml.utilities.locate.find.find_all_after": {"tf": 1}, "phml.utilities.locate.find.find_before": {"tf": 1}, "phml.utilities.locate.find.find_all_between": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.misc.classes.classnames": {"tf": 1}, "phml.utilities.transform.transform.replace_node": {"tf": 1.4142135623730951}, "phml.utilities.validate.check.check": {"tf": 1}, "phml.utilities.validate.validate.blank": {"tf": 1}}, "df": 19}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.components.ComponentManager.cache": {"tf": 1}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.nodes.Position.from_pos": {"tf": 1}, "phml.utilities.transform.transform.find_and_replace": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform.modify_children": {"tf": 1}}, "df": 6}, "x": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1.4142135623730951}, "phml.parser.strip": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.embedded.Embedded.imports": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.validate.validate.is_javascript": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.locate.find.ancestor": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1}, "phml.utilities.locate.select.query_all": {"tf": 1}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.misc.size": {"tf": 1}}, "df": 5}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"phml": {"tf": 1}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.nodes.Element.get": {"tf": 1.4142135623730951}, "phml.utilities.locate.index.Index": {"tf": 2}, "phml.utilities.locate.index.Index.__init__": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index.items": {"tf": 1}, "phml.utilities.locate.index.Index.key_by_tag": {"tf": 1}, "phml.utilities.transform.sanitize.Schema.extend": {"tf": 1}}, "df": 8, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"phml.compiler.comp_step": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"phml.utilities.locate.index.Index.keys": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"phml.core.HypertextManager.add_module": {"tf": 1}}, "df": 1, "s": {"docs": {"phml": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"phml.compiler.comp_step": {"tf": 1}}, "df": 1, "s": {"docs": {"phml.core.HypertextManager.format": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1}}}, "q": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"phml": {"tf": 7.3484692283495345}, "phml.utilities.transform.transform.map_nodes": {"tf": 2}}, "df": 2}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml.utilities.locate.select": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"phml.utilities.locate.select.query": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"phml.utilities.locate.select.query_all": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"phml": {"tf": 5.477225575051661}, "phml.core.HypertextManager.add_module": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.matches": {"tf": 1}, "phml.utilities.misc.depth": {"tf": 1.4142135623730951}, "phml.utilities.validate": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.449489742783178}}, "df": 1}}}}, "r": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"phml.utilities.misc.classes.classnames": {"tf": 2}, "phml.utilities.misc.heading.heading_rank": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {"phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 2.449489742783178}}, "df": 1}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 2.449489742783178}, "phml.core.HypertextManager.add_module": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index.__init__": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.matches": {"tf": 1.4142135623730951}}, "df": 6, "d": {"docs": {"phml": {"tf": 3.3166247903554}, "phml.core.HypertextManager.format": {"tf": 1}, "phml.core.HypertextManager.add": {"tf": 1}, "phml.embedded.Module": {"tf": 1}, "phml.utilities.locate.select.query": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.query_all": {"tf": 1.4142135623730951}, "phml.utilities.locate.select.matches": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 8}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"phml": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.utilities.locate.index.Index": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 3}, "r": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}, "phml.utilities.validate.validate.is_interactive": {"tf": 1}}, "df": 2, "s": {"docs": {"phml": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"phml.utilities.validate.validate.is_interactive": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"phml": {"tf": 1.7320508075688772}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"phml": {"tf": 1}, "phml.utilities.transform.transform.filter_nodes": {"tf": 1}, "phml.utilities.validate.validate.is_phrasing": {"tf": 1}}, "df": 3}, "l": {"docs": {"phml": {"tf": 2}}, "df": 1}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"phml.components.ComponentManager.cache": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"phml.nodes.Position": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"phml.nodes.Element.get": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"phml.utilities.transform.sanitize.sanatize": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"phml.utilities.misc.classes.ClassList": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"phml.builder": {"tf": 1}, "phml.utilities": {"tf": 1}, "phml.utilities.locate": {"tf": 1.4142135623730951}, "phml.utilities.locate.find": {"tf": 1}, "phml.utilities.locate.select": {"tf": 1.4142135623730951}, "phml.utilities.misc": {"tf": 1.4142135623730951}, "phml.utilities.misc.classes": {"tf": 1.4142135623730951}, "phml.utilities.transform": {"tf": 1.4142135623730951}, "phml.utilities.transform.sanitize": {"tf": 1}, "phml.utilities.transform.transform": {"tf": 1}, "phml.utilities.travel.travel": {"tf": 1.4142135623730951}, "phml.utilities.validate": {"tf": 1.4142135623730951}, "phml.utilities.validate.check": {"tf": 1}}, "df": 13}}}, "y": {"docs": {"phml.builder": {"tf": 1}, "phml.utilities": {"tf": 1}, "phml.utilities.locate.find": {"tf": 1}, "phml.utilities.misc.classes.ClassList": {"tf": 1}, "phml.utilities.misc.heading": {"tf": 1}, "phml.utilities.transform.sanitize.sanatize": {"tf": 1.4142135623730951}, "phml.utilities.transform.transform": {"tf": 1}}, "df": 7}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"phml": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();